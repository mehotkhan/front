[
  {
    "title": "About Me",
    "thumbnail": "content/physics.webp",
    "description": "Hello! I'm Ali Zemani, a full-stack web developer from Tehran, Iran. With over 16 years of experience in the tech industry, especially in web and mobile application development, I am always eager to learn and implement new technologies.",
    "path": "/en/about",
    "body": "## Skills\n\n- **Web Development:** Expertise in Jamstack architecture, utilizing Nuxt.js and Vue.js to build fast and scalable websites.\n- **Mobile Development:** Experience in building cross-platform applications using React Native.\n- **Serverless Technologies:** Proficient in Cloudflare Workers and Cloudflare D1 for scalable and event-driven applications.\n- **Databases:** Skilled in working with PostgreSQL, MongoDB, and Redis.\n- **Security & Web3:** Familiar with Ethereum smart contracts and implementing WebAuthn authentication.\n\n## Professional Experience\n\nOver the years, I have collaborated with various teams and contributed to multiple projects from ideation to deployment. My focus is on creating innovative and efficient solutions for complex challenges.\n\n## Get in Touch\n\n- Email: hi@mohet.ir\n- Github: [AliZemani / Github](https://github.com/mehotkhan)\n- LinkedIn: [AliZemani / LinkedIn](https://www.linkedin.com/in/ali-zemani/)\n- Twitter: [AliZemani / Twitter](https://twitter.com/ZemaniAli/)",
    "tocData": [
      {
        "title": "Skills",
        "url": "#skills",
        "items": []
      },
      {
        "title": "Professional Experience",
        "url": "#professional-experience",
        "items": []
      },
      {
        "title": "Get in Touch",
        "url": "#get-in-touch",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "Home",
    "description": "Inbox Page",
    "path": "/en",
    "body": "<div>\n\n<HomeIntro />\n\n</div>\n\n<hr >\n\n<LogsArchives />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "logs",
    "thumbnail": "/content/blogging.png",
    "description": "logs Archives",
    "path": "/en/logs",
    "body": "<LogsArchives   />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "درباره من",
    "thumbnail": "content/physics.webp",
    "description": " من علی زمانی هستم؛ فردی کنجکاو، علاقه‌مند به کشف و درک عمیق‌تر جهان پیرامونم. ",
    "path": "/fa/about",
    "body": "## درباره من\n\nنوشتن در این بلاگ برای من فرصتی است برای اندیشیدن با صدای بلند؛ جایی برای اشتراک‌گذاری موضوعاتی که ذهنم را درگیر می‌کنند یا قلبم را به تپش می‌اندازند. از جذابیت‌های علم و ذرات بنیادی گرفته تا جهان‌های خیال‌انگیز شخصیت‌هایی مانند تام بامبادیل، یا حتی نگاهی شخصی به تکنولوژی و ابزارهایی که با آن‌ها کار می‌کنم.\n\nبرای من، زندگی مجموعه‌ای از لحظه‌های کشف است—چه هنگام مواجهه با یک ایده‌ی تازه، و چه در جریان خواندن یک داستان الهام‌بخش. تلاش می‌کنم در اینجا بخشی از این مسیر را با شما به اشتراک بگذارم؛ اگر به دنبال جرقه‌ای برای تفکر، تجربه‌ای متفاوت یا صرفاً موضوعی برای تأمل هستید، خوشحال می‌شوم هم‌سفر من باشید.\n\n## ارتباط با من\n\n- **ایمیل**: hi@mohet.ir\n- **گیت‌هاب**: [mehotkhan](https://github.com/mehotkhan)\n- **لینکدین**: [ali-zemani](https://www.linkedin.com/in/ali-zemani/)\n- **ایکس**: [ZemaniAli](https://x.com/ZemaniAli)",
    "tocData": [
      {
        "title": "درباره من",
        "url": "#درباره-من",
        "items": []
      },
      {
        "title": "ارتباط با من",
        "url": "#ارتباط-با-من",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "صفحه نخست",
    "description": "صندوق ورودی :)",
    "path": "/fa",
    "body": "<div>\n\n<HomeIntro />\n\n</div>\n\n<hr >\n\n<LogsArchives />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "لاگ‌ها",
    "thumbnail": "/content/blogging.png",
    "description": "آخرین یادداشت ها و نوشته ها",
    "path": "/fa/logs",
    "body": "<LogsArchives  />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "library",
    "thumbnail": "/content/blogging.png",
    "description": "library Archives",
    "path": "/en/cats/library",
    "body": "<LogsArchives cat='library' />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "Notes",
    "thumbnail": "/content/blogging.png",
    "description": "Notes Archives",
    "path": "/en/cats/notes",
    "body": "<LogsArchives cat='notes' />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "Projects",
    "thumbnail": "/content/blogging.png",
    "description": "loProjectsgs Archives",
    "path": "/en/cats/projects",
    "body": "<LogsArchives cat='projects' />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "Software Architecture Patterns for Serverless Systems",
    "thumbnail": "content/SoftwareArchitecture-Patterns-for-Serverless-Systems.jpg",
    "description": "Software Architecture Patterns for Serverless Systems, by John Gilbert is a comprehensive guide for software architects designing scalable, flexible, and event-driven systems using serverless architecture. It covers modern architectural patterns like autonomous services, event-first approaches, data management with CQRS, and security in serverless systems. It also offers strategies like the Strangler Fig pattern for migrating legacy systems to modern architectures.",
    "date": "2024-09-17T16:33:46.294Z",
    "cat": "library",
    "intro": true,
    "toc": false,
    "path": "/en/logs/SoftwareArchitecture-Patterns-for-Serverless-Systems",
    "body": "_Software Architecture Patterns for Serverless Systems_ by John Gilbert explores the design and implementation of serverless architecture systems that are scalable, flexible, and responsive to today’s dynamic business environments. The book introduces the following key concepts:\n\n1. **Architecture for Change and Innovation**: This book emphasizes that software systems should be designed for continuous change. Serverless architecture, with the use of autonomous services, allows development teams to respond faster to changes and reduce implementation time.\n\n2. **Autonomous Services**: A key concept in the book is creating services that operate independently and are decoupled from one another. This enables changes to be made without impacting the entire system, reducing risks and increasing flexibility.\n\n3. **Event-First Approach**: The book advocates for an \"event-first\" approach, where systems react to events and avoid synchronous communication between services. This approach makes systems more flexible and adaptable.\n\n4. **Protecting Services with Asynchronous Communication**: To maintain service autonomy and reduce the risks of failure spreading across the system, the book suggests using bulkheads between services. Asynchronous communication through event hubs ensures that failures are limited to one part of the system, preventing system-wide issues.\n\n5. **Serverless-First Strategy**: In serverless architecture, infrastructure management is offloaded to cloud providers, reducing the burden of infrastructure management and allowing teams to focus on delivering business value.\n\n6. **Data Management and the CQRS Pattern**: The book delves into advanced data management patterns such as CQRS and Event Sourcing, which decouple read and write operations to improve scalability and system performance.\n\n7. **Microservices and Micro Frontends**: The author explains how microservices principles can be applied not only to backend systems but also to the frontend. This allows teams to independently develop and deploy different parts of the user interface.\n\n8. **Security, Testing, and Observability**: A significant portion of the book focuses on securing serverless systems, ensuring observability through logging and monitoring, and implementing automated testing to ensure system reliability.\n\n9. **Multi-Regional Systems and Fault Tolerance**: The book addresses the design of systems that can be deployed across multiple regions, ensuring fault tolerance and resilience in case of regional outages.\n\n10. **Migrating from Legacy Systems**: For companies migrating from traditional architectures to serverless systems, patterns like the Strangler Fig are discussed to gradually replace legacy systems without disrupting ongoing business operations.\n\nThis book is a comprehensive guide for software architects looking to design serverless, event-driven, microservices-based systems with a focus on flexibility, scalability, and continuous innovation.\n\n## Get the Book\n\n- Amazon (Buy): [Software Architecture Patterns for Serverless Systems](https://www.amazon.com/Software-Architecture-Patterns-Serverless-Systems/dp/1800207034)",
    "tocData": [
      {
        "title": "Get the Book",
        "url": "#get-the-book",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "The Jamstack Book",
    "thumbnail": "content/The-Jamstack-Book.jpeg",
    "description": "The Jamstack Book by Brian Rinaldi and Raymond Camden introduces the modern Jamstack architecture, which is built on a combination of JavaScript, APIs, and Markup. This architecture delivers faster, more secure, and cost-efficient websites by serving pre-built content through CDNs, compared to traditional server-side rendering. The book provides practical examples and guidance on tools like Eleventy, Jekyll, and Next.js, making it a great resource for developers looking to improve site performance and security.",
    "date": "2024-09-17T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "toc": false,
    "path": "/en/logs/The-JamStack-Book",
    "body": "## Summary of _The Jamstack Book_ by Brian Rinaldi and Raymond Camden (2022)\n\nThis book introduces the **Jamstack** architecture, designed for building modern websites using JavaScript, APIs, and Markup. _Jamstack_ is not a specific tool or language, but a methodology that focuses on creating websites with static content at their core, enhanced with dynamic features through APIs and JavaScript. Static content is pre-generated at build time and served via CDNs, resulting in faster, more secure, and cost-efficient websites compared to traditional server-side rendering methods.\n\n### Key Concepts:\n\n1. **Jamstack Architecture**:\n\n   - Websites are built using static files generated by static site generators (SSGs) such as Jekyll, Hugo, or Eleventy.\n   - These sites are enhanced with dynamic features using JavaScript and APIs.\n   - This architecture focuses on delivering pre-built static content that can be updated via APIs or during build time.\n\n2. **Benefits of Jamstack**:\n\n   - **Performance**: Static files are quickly served from edge servers (CDNs), minimizing page load times.\n   - **Security**: The absence of traditional web servers and databases reduces the attack surface, making sites more secure.\n   - **Cost**: Hosting static files is usually cheap or free, with lower server costs.\n\n3. **When Jamstack May Not Be Suitable**:\n\n   - Applications with frequent user-generated content or real-time updates may not fit well with the _Jamstack_ architecture, which is better suited for static content.\n   - Heavy server-side processing or data-driven dashboards may not be optimal for _Jamstack_, as it relies on client-side processing or API integration.\n\n4. **Real-World Examples**:\n\n   - Popular websites like Smashing Magazine, Nike, and Impossible Foods use _Jamstack_ and benefit from its performance and flexibility.\n\n5. **Content and Tools**:\n\n   - The book explains the process of building various types of _Jamstack_ sites, from simple brochure sites to e-commerce platforms, using different static site generators like Eleventy, Jekyll, Hugo, and Next.js.\n   - It also covers using headless CMS solutions like Sanity or Contentful to manage content on a _Jamstack_ site.\n   - Serverless computing is integrated into the architecture, using platforms like Netlify and Vercel to add backend functionality.\n\n6. **Deployment and Serverless Computing**:\n\n   - _Jamstack_ sites are typically deployed using services like Netlify or Vercel, which provide continuous deployment and easy scalability. The book also explains how to integrate serverless functions for dynamic capabilities like form handling or custom API creation.\n\n7. **Migrating to Jamstack**:\n   - The book concludes with strategies for migrating existing websites to _Jamstack_, emphasizing that not all content needs to be migrated at once, and hybrid approaches (combining static and dynamic content) can be useful during the transition.\n\nOverall, this book is a practical guide for developers looking to adopt or explore the _Jamstack_ methodology for building fast, secure, and scalable web applications.\n\n## Get the Book\n\n- Manning (Buy): [The Jamstack Book, Beyond static sites with JavaScript, APIs, and markup](https://www.manning.com/library/the-jamstack-book)",
    "tocData": [
      {
        "title": "Summary of undefinedThe Jamstack Book by Brian Rinaldi and Raymond Camden (2022)",
        "url": "#summary-of-the-jamstack-book-by-brian-rinaldi-and-raymond-camden-2022",
        "items": [
          {
            "title": "Key Concepts:",
            "url": "#key-concepts",
            "items": []
          }
        ]
      },
      {
        "title": "Get the Book",
        "url": "#get-the-book",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "WebAssembly in Action",
    "thumbnail": "content/wasm-in-actions.png",
    "description": "WebAssembly in Action introduces the WebAssembly stack and walks you through the process of writing and running browser-based applications. Expert developer Gerard Gallant gives you a firm foundation of the structure of a module, HTML basics, JavaScript Promises, and the WebAssembly JavaScript API.",
    "date": "2023-09-01T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "toc": false,
    "path": "/en/logs/WebAssembly-in-Action",
    "body": "## About the Book\n\nWebAssembly in Action teaches you how to write and run high-performance browser-based applications using C++ and other languages supported by WebAssembly. In it, you'll learn to create native WebAssembly modules, interact with JavaScript components, and maximize performance with web workers and pthreads. And you'll love how the clearly organized sections make it a breeze to find the important details about every function, feature, and technique.\n\n### About the Technology\n\nWrite high-performance browser-based applications without relying only on JavaScript! By compiling to the WebAssembly binary format, your C, C++, or Rust code runs at near-native speed in the browser. WebAssembly delivers greater speed, opportunities to reuse existing code, and access to newer and faster libraries. Plus, you can easily interact with JavaScript when you need to.\n\n### What's inside\n\n• Dynamic linking of multiple modules at runtime\n• Communicating between modules and JavaScript\n• Debugging with WebAssembly Text Format\n• Threading with web workers and pthreads\n\n### About the Reader\n\nWritten for developers with a basic understanding of C/C++, JavaScript, and HTML.\n\n### About the Author\n\nGerard Gallant is a Microsoft Certified Professional and a Senior Software Developer at Dovico Software. He blogs regularly on Blogger.com and DZone.com.\n\n## Table of contents\n\n### PART 1 - FIRST STEPS\n\n1. Meet WebAssembly\n2. A look inside WebAssembly modules\n3. Creating your first WebAssembly module\n\n### PART 2 - WORKING WITH MODULES\n\n4. Reusing your existing C++ codebase\n5. Creating a WebAssembly module that calls into JavaScript\n6. Creating a WebAssembly module that talks to JavaScript using function pointers\n\n### PART 3 - ADVANCED TOPICS\n\n7. Dynamic linking: The basics\n8. Dynamic linking: The implementation\n9. Threading: Web workers and pthreads\n10. WebAssembly modules in Node.js\n\n### PART 4 - DEBUGGING AND TESTING\n\n11. WebAssembly text format\n12. Debugging\n13. Testing — and then what?\n\n## How to Get\n\n- Manning Publications (Buy): [WebAssembly in Action](https://www.manning.com/library/webassembly-in-action)",
    "tocData": [
      {
        "title": "About the Book",
        "url": "#about-the-book",
        "items": [
          {
            "title": "About the Technology",
            "url": "#about-the-technology",
            "items": []
          },
          {
            "title": "What's inside",
            "url": "#whats-inside",
            "items": []
          },
          {
            "title": "About the Reader",
            "url": "#about-the-reader",
            "items": []
          },
          {
            "title": "About the Author",
            "url": "#about-the-author",
            "items": []
          }
        ]
      },
      {
        "title": "Table of contents",
        "url": "#table-of-contents",
        "items": [
          {
            "title": "PART 1 - FIRST STEPS",
            "url": "#part-1---first-steps",
            "items": []
          },
          {
            "title": "PART 2 - WORKING WITH MODULES",
            "url": "#part-2---working-with-modules",
            "items": []
          },
          {
            "title": "PART 3 - ADVANCED TOPICS",
            "url": "#part-3---advanced-topics",
            "items": []
          },
          {
            "title": "PART 4 - DEBUGGING AND TESTING",
            "url": "#part-4---debugging-and-testing",
            "items": []
          }
        ]
      },
      {
        "title": "How to Get",
        "url": "#how-to-get",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "Building Progressive Web Applications with Vue.js",
    "thumbnail": "/content/Building-Progressive-Web-Applications-with-Vuejs.webp",
    "description": "Progressive web apps (PWAs) were initially introduced by Google in 2015 and proved to bring many advantages to the web platform. In this book, we are going to examine how to empower our web apps to be fast and reliable, and to provide an immersive user experience with offline support.",
    "date": "2021-09-11T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "toc": false,
    "path": "/en/logs/building-progressive-web-applications-with-vue-js",
    "body": "## Introduction\n\n`From Book`\n\nProgressive web apps (PWAs) were initially introduced by Google in 2015\nand proved to bring many advantages to the web platform. In this book, we\nare going to examine how to empower our web apps to be fast and reliable,\nand to provide an immersive user experience with offline support.\n\n### Chapter 1\n\nIn Chapter 1, we create our first PWA. I guide you in all the steps you\nneed to know to add offline capabilities and to make a simple web app\na PWA.\n\n### Chapter 2\n\nIn Chapter 2, we take a look at the web app manifest, which is a\nsimple, but powerful, specification that allows the browsers when can\ninstall a web app like a native app according to the operating system.\n\n### Chapter 3\n\nIn Chapter 3, we study service workers, which are an amazing mechanism to\nhandle background events with JavaScript.\n\n### Chapter 4\n\nIn Chapter 4, we examine cache\nstorage and good-practice workflows to keep our offline data updated.\n\n### Chapter 5\n\nIn Chapter 5, we look at the main features and advantages of using Vue.js, a\nmodern JavaScript framework.\n\n### Chapter 6\n\nIn Chapter 6, we study how to use a database\nsupported widely in modern browsers, called IndexedDB, and how we can\ntake advantage of its asynchronous capabilities to empower our PWAs.\n\n### Chapter 7\n\nIn Chapter 7, we look at a simple, but powerful, application programming\ninterface, called Background Sync, that will allow our app to make the user\nexperience easy.\n\n### Chapter 8\n\nIn Chapter 8, we improve our engagement with our app\nand examine how to add push notifications to it. Last,\n\n### Chapter 9\n\nin Chapter 9, we polish the details of our app and make it available to the world.\n\n## How to Get\n\n- Apress (Buy): [Building Progressive Web Applications with Vue.js : Reliable, Fast, and Engaging Apps with Vue.js](https://www.apress.com/gp/book/9781484253335)",
    "tocData": [
      {
        "title": "Introduction",
        "url": "#introduction",
        "items": [
          {
            "title": "Chapter 1",
            "url": "#chapter-1",
            "items": []
          },
          {
            "title": "Chapter 2",
            "url": "#chapter-2",
            "items": []
          },
          {
            "title": "Chapter 3",
            "url": "#chapter-3",
            "items": []
          },
          {
            "title": "Chapter 4",
            "url": "#chapter-4",
            "items": []
          },
          {
            "title": "Chapter 5",
            "url": "#chapter-5",
            "items": []
          },
          {
            "title": "Chapter 6",
            "url": "#chapter-6",
            "items": []
          },
          {
            "title": "Chapter 7",
            "url": "#chapter-7",
            "items": []
          },
          {
            "title": "Chapter 8",
            "url": "#chapter-8",
            "items": []
          },
          {
            "title": "Chapter 9",
            "url": "#chapter-9",
            "items": []
          }
        ]
      },
      {
        "title": "How to Get",
        "url": "#how-to-get",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "Getting Started with Ethereum",
    "thumbnail": "content/6c2b5bfc492ab5d2c7bd898863c7a4db-d.webp",
    "description": "Get started with blockchain development with this step-by-step guide. This book takes you all the way from installing requisite software through writing, testing, and deploying smart contracts. Getting Started with Ethereum delves into technologies most closely associated with Ethereum, such as IPFS, Filecoin, ENS, Chainlink, Truffle, Ganache, OpenZeppelin, Pinata, Fleek, Infura, Metamask, and Opensea. Author Davi Bauer walks you through project creation, how to compile projects and contracts, configure networks, and deploy smart contracts on blockchains. He then covers smart contracts, including deploying and verifying them. This book approaches blockchain in a way that allows you to focus on the topic that most interests you, covering Ethereum-related technologies broadly and not just focusing on Solidity.",
    "date": "2023-01-18T19:14:50.978Z",
    "cat": "library",
    "intro": false,
    "toc": false,
    "path": "/en/logs/getting-started-with-ethereum",
    "body": "## Introduction\n\nThis book is a step-by-step guide for everyone who wants to get started\nas an Ethereum developer. It was designed for those who have never\nprogrammed anything in the blockchain and want to get started.\nI will cover everything from the basic requirements of installation to\nwriting, testing, and deploying smart contracts. I will also cover topics such\nas IPFS, Filecoin, ENS, Chainlink, Truffle, Ganache, OpenZeppelin, Pinata,\nFleek, Infura, MetaMask, and OpenSea, among others.\n\n### Chapter 1\n\nIn Chapter 1, I will go through all the necessary requirements to start\nthe activities described in this book. It covers software and tools such as\nDocker, Truffle, Ganache, MetaMask, and Infura.\n\n### Chapter 2\n\nIn Chapter 2, you will learn how to create a basic Solidity project using\nthe VS Code extension and then compile and deploy the smart contract to\na local blockchain.\n\n### Chapter 3\n\nIn Chapter 3, you will learn how to code smart contracts to create\nyour own coin and deploy it to a local blockchain. Fungible tokens are\ninterchangeable, so they are perfect to solve problems such as double\nspending. You will also be able to add this token to your own wallet\nand send it to different wallets, as well as send other coins that you\nalready have.\n\n### Chapter 4\n\nIn Chapter 4, you will learn how to create a unit test file for a smart\ncontract, as well as write test assertions, run the unit tests, and check the\nunit test results.\n\n### Chapter 5\n\nIn Chapter 5, you will be able to create smart contracts for badge\ntokens. You can use badge tokens, also known as NFTs, to represent\nphysical things in the virtual world, such as digital collectibles, game items,\ndigital art, etc. Each NFT token is unique and can have a unique value.\nxvIntroduction In this chapter, you will learn how to code the smart contract with the help\nof the OpenZeppelin library. You will also create the badge and add it to\nIPFS node. After that, you will learn to pin it so it is available for everyone,\neverywhere. Next, you will learn how to migrate the contract to different\nenvironments such as a local blockchain using Ganache and testnets using\nInfura. Finally, you will learn how to sell your own NFT on OpenSea.\n\n### Chapter 6\n\nIn Chapter 6, we will cover different ways to fund your wallet using\nfaucets. This part is important because you will need some ether in your\nwallet in order to pay for the transaction. Most of the examples will be\ndeployed on testnets so you won’t need real money to execute them.\n\n### Chapter 7\n\nIn Chapter 7, you will learn how to create and save files on a\ndecentralized file system. I also cover some tools such as a browser\nextension that will help you manage the node, as well as Pinata to help you\npin your files remotely instead of keeping them locally. In addition, you\nwill be able to host your own site on IPFS using Fleek.\n\n### Chapter 8\n\nIn Chapter 8, I will cover ways to preserve files on a local node. The\nidea behind Filecoin is the same of IPFS, with the difference that Filecoin\nhas an incentive mechanism and incentive nodes to preserve files. Filecoin\nwas built on top of IPFS.\n\n### Chapter 9\n\nIn Chapter 9, you will learn how to register a custom domain on the\nEthereum Name System. You can use it to host a site under this domain\nname or even as a domain for your wallet to receive cryptos, tokens,\nor NFTs.\n\n### Chapter 10\n\nIn Chapter 10, I will cover use cases where you need to pull data from\noff-chain using oracles. You will learn how to use price feeds and then\ncrypto prices inside smart contracts.\n\n### Chapter 11\n\nIn Chapter 11, you will learn how to create a simple project to connect\nto Web3 using the .NET platform and how to retrieve data from the\nblockchain to display wallet balances.\n\n### Chapter 12\n\nChapter 12 concludes the book.\n\n## How to Get\n\n- Oreilly (Buy): [Getting Started with Ethereum: A Step-by-Step Guide to Becoming a Blockchain Developer](https://www.oreilly.com/library/view/getting-started-with/9781484280454/)",
    "tocData": [
      {
        "title": "Introduction",
        "url": "#introduction",
        "items": [
          {
            "title": "Chapter 1",
            "url": "#chapter-1",
            "items": []
          },
          {
            "title": "Chapter 2",
            "url": "#chapter-2",
            "items": []
          },
          {
            "title": "Chapter 3",
            "url": "#chapter-3",
            "items": []
          },
          {
            "title": "Chapter 4",
            "url": "#chapter-4",
            "items": []
          },
          {
            "title": "Chapter 5",
            "url": "#chapter-5",
            "items": []
          },
          {
            "title": "Chapter 6",
            "url": "#chapter-6",
            "items": []
          },
          {
            "title": "Chapter 7",
            "url": "#chapter-7",
            "items": []
          },
          {
            "title": "Chapter 8",
            "url": "#chapter-8",
            "items": []
          },
          {
            "title": "Chapter 9",
            "url": "#chapter-9",
            "items": []
          },
          {
            "title": "Chapter 10",
            "url": "#chapter-10",
            "items": []
          },
          {
            "title": "Chapter 11",
            "url": "#chapter-11",
            "items": []
          },
          {
            "title": "Chapter 12",
            "url": "#chapter-12",
            "items": []
          }
        ]
      },
      {
        "title": "How to Get",
        "url": "#how-to-get",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "Modern Web Development on the JAMstack",
    "thumbnail": "content/Modern-Web-Development-on-the-JAMstack.webp",
    "description": "In just the past few years, a flurry of advancements has greatly strengthened the web as a content and application platform. Brows‐ ers are much more powerful. JavaScript has matured. WebAssembly is on the horizon. It certainly feels like the beginning of a new chap‐ ter for the web. You’ve likely felt this as you’ve witnessed the explo‐ sion of new frontend frameworks and API-based services.",
    "date": "2021-08-11T12:29:12.649Z",
    "cat": "library",
    "intro": false,
    "toc": false,
    "path": "/en/logs/modern-web-development-on-the-jamstack",
    "body": "## Introduction\n\n`From Book`\n\nIn just the past few years, a flurry of advancements has greatly strengthened the web as a content and application platform. Brows‐ ers are much more powerful. JavaScript has matured. WebAssembly is on the horizon. It certainly feels like the beginning of a new chap‐ ter for the web. You’ve likely felt this as you’ve witnessed the explo‐ sion of new frontend frameworks and API-based services.\n\nAlthough what’s technically possible in the browser has advanced, so\ntoo have expectations for immediacy. Videos must play instantly.\nBrowser applications must launch faster than their desktop counter‐\nparts. Users have become increasingly mobile and increasingly\nimpatient—we are all fed up with slow pages and we vote angrily\nagainst them with the back button. (Google also seems to be losing\npatience, and now factors site speed into its famous ranking algo‐\nrithms.)\n\nBroadly speaking, this book covers new, modern approaches to\nbuilding websites that perform as fast as possible. More concretely,\nthis book shows you how to run any web property, from simple sites\nto complex applications, on a global Content Delivery Network\n(CDN) and without a single web server. We introduce you to the\nJAMstack: a powerful new approach for deploying fast, highly scala‐\nble sites and applications that don’t require traditional frontend\ninfrastructure. If you tend to feel delivering great websites should be\nmore about the craft of markup and JavaScript than server setup\nand administration, you’ve found your book.\n\nAnd, if you’ve ever struggled with any monolithic system or frame‐\nwork—wrestling with hosting, deploying changes, securing, and\nscaling everything—you already understand why the JAMstack is\nbecoming so popular. It’s one of those rare shifts in the landscape\nthat delivers a productivity boost for developers and a large perfor‐\nmance boost for users. The JAMstack is helping to bring about a\nmore secure, stable, and performant web that’s also more fun to\ndevelop and create for.\n\nUnder this new approach, there isn’t a “server environment” at all—\nat least not in the traditional sense. Instead, HTML is prerendered\ninto static files, sites are served from a global CDN, and tasks that\nwere once processed and managed server side are now performed\nvia APIs and microservices.\n\nWe realize that seasoned web developers might eye anything new\nwith quite a bit of skepticism. There have certainly been countless\nother new ideas on how to build the web before. For nearly three\ndecades, the developer community has explored ways to make the\nweb easier and faster to develop, more capable, more performant,\nand more secure.\n\nAt times, though, the effort has seemed to trade one goal for\nanother. Wordpress, for example, became a revolution in making\ncontent easier to author—but anyone who’s scaled a high-traffic\nWordpress site knows it also brings a whole set of new challenges in\nperformance and security. Trading the simplicity of HTML files for\ndatabase-powered content means facing the very real threats that\nsites might crash as they become popular or are hacked when\nnobody is watching closely.\n\nAnd dynamically transforming content into HTML—each and every\ntime it’s requested—takes quite a few compute cycles. To mitigate all\nthe overhead, many web stacks have introduced intricate and clever\ncaching schemes at almost every level, from the database on up. But\nthese complex setups have often made the development process feel\ncumbersome and fragile. It can be difficult to get any work done on\na site when you can’t get it running and testable on your own laptop.\n(Trust us, we know.)\n\nAll these challenges have led the developer community to begin\nexploring the JAMstack as a modern refactoring of the way websites\nare developed and served. And like any good refactoring, you’ll find\nthat it both advances and simplifies the stack.\nBeing web developers ourselves, the authors of this book are more\nexcited by the JAMstack than we’ve been about any emerging trend\nfor quite a while. That’s because it uniquely solves for all these com‐\nmon problems—developer experience, performance, and security—\nall at the same time, and all without one compromising the other. To\nus, it feels like the logical future of the platform.\n\nIt just makes sense.\n\nDeveloper Jonathan Prozzi said it best on Twitter: “My learning\njourney leading to #JAMstack has re-ignited my interest and passion\nfor web technology.” We think the JAMstack can do a lot to rekindle\nyour own enthusiasm, too, and we’re eager to welcome you to the\ngrowing community of JAMstack practitioners. You’ll find develop‐\ning for the web has become fun and fearless all over again.\n\n## How to Get\n\nDownload From Netlify (PDF): [oreilly-modern-web-development-on-the-jamstack.pdf](https://www.netlify.com/pdf/oreilly-modern-web-development-on-the-jamstack.pdf)",
    "tocData": [
      {
        "title": "Introduction",
        "url": "#introduction",
        "items": []
      },
      {
        "title": "How to Get",
        "url": "#how-to-get",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "The Practitioner’s Guide to Graph Data",
    "thumbnail": "content/The-Practitioners-Guide-To-Graph-Data.webp",
    "description": "Think about the last time you searched for someone on a social media platform. What did you look at on the results page? Most likely, you started scanning down the names in the list of profile results. And you probably spent most of your time inspecting the “shared friends” section to understand how you knew someone.",
    "date": "2021-10-11T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "toc": false,
    "path": "/en/logs/the-practitioner-s-guide-to-graph-data",
    "body": "## Preface\n\nApplying Graph Thinking and Graph Technologies to Solve Complex Problems\n\n`From Book`\n\nThink about the last time you searched for someone on a social media platform.\nWhat did you look at on the results page?\nMost likely, you started scanning down the names in the list of profile results. And\nyou probably spent most of your time inspecting the “shared friends” section to\nunderstand how you knew someone.\nOur innate human behavior of reasoning about our shared friends on social media is\nwhat inspired us to write this book. Though, our shared inspiration generated two\nvery different reasons behind why we wrote this book.\nFirst, have you ever stopped to think about how an app creates the “shared friends”\nsection?\n\nThe engineering required to deliver your “shared friends” in search results creates an\nintricate orchestration of tools and data to solve an extremely complex, distributed\nproblem. We have either built those sections or created the tools that deliver them.\nOur passion for understanding and teaching others from our collective experiences is\nthe first reason we chose to write this book together.\nThe second reason is that anyone who uses social media intuitively derives personal\ncontext directly from the “shared friends” section. This process of reasoning and\nthinking about relationships within data is called graph thinking, and that is what we\nname the human approach to understanding life through connected data.\nHow did we all learn to do this?\n\nThere wasn’t a specific point in time when we all were taught this skill. Processing\nrelationships among people, places, or things is just how we think.\nIt is the ease with which people infer context from relationships, be it in real life or\nfrom data, that has ignited the wave of graph thinking.\nxiAnd when it comes to understanding graph thinking, most people fall into one of two\ncamps: those who think graphs are about bar charts, or those who think graphs are\nway too complicated. Either way, these thought processes apply legacy approaches to\nthinking about data and technology. The problem is that the art of the possible has\nchanged, our tools have improved, and there are new lessons to learn.\nWe believe that graphs are powerful and deployable. Graph technology can make you\nmore productive; we have worked with teams that told us so.\nThis book brings these two mindsets together.\nGraph thinking closes the gap between how we humans operate/see/live and how we\nuse data to inform a decision. Imagine seeing your whole world as a spreadsheet with\nrows and columns of data and trying to make sense of it all. For the majority of us,\nthe exercise is unnatural and counterproductive.\nThis is because relationships are how people navigate and reason about life. It is com‐\nputers that need databases and operate in the world of rows and columns of data.\nGraph thinking is a way to solve complex problems by taking a relationship-centric\napproach. Graph technology bridges the gap between “relationships” and the linear\nmemory constraints of modern computer infrastructure.\nAs more people learn how to build with graph technology by applying graph think‐\ning, imagine what the next wave of innovation will bring.\n\n## Who Should Read This Book\n\nThis book aims to teach you two things. First, we will teach you about graph thinking\nand the graph mindset through asking questions and reasoning about data. Second,\nwe will walk you through writing code that solves the most common, complex graph\nproblems.\n\nThese new concepts are intertwined within the tasks commonly performed across a\nfew different engineering functions.\n\nData engineers and architects sit at the heart of transitioning an idea from develop‐\nment into production. We organized this book to show you how to resolve common\nassumptions that can occur when moving from development into production with\ngraph data and graph tools. Another benefit to the data engineer or data architect will\nbe learning the world of possibilities that come from understanding graph thinking.\nSynthesizing the breadth of problems that can be solved with graph data will also help\nyou invent new patterns for their use in production applications.\nData scientists and data analysts may most benefit from reasoning about how to use\ngraph data to answer interesting questions. All the examples throughout this text\nwere constructed to apply a query-first approach to graph data. A secondary benefit\n\nPrefacefor a data scientist or analyst will be to understand the complexity of using dis‐\ntributed graph data within a production application. We teach and build upon the\ncommon development pitfalls and their production resolution processes throughout\nthe book so that you can formulate new types of problems to solve.\n\nComputer scientists will learn how to use techniques in functional programming and\ndistributed systems to query and reason about graph data. We will outline fundamen‐\ntal approaches to procedurally traversing graph data and step through their applica‐\ntion with graph tools. Along the way we will learn about distributed technologies, too.\nWe will be working within the intersection of graph data and distributed, complex\nproblems; a fascinating combination of engineering topics with something to learn\nfor any technologist.\n\n## Goals of This Book\n\nThe first goal of this book is to create a new foundation that exists at a very diverse\nintersection. We will be working with concepts from graph theory, database schema,\ndistributed systems, data analysis, and many other fields. This unique intersection\nforms what we refer to in this book as graph thinking. A new application domain\nrequires new terms, examples, and techniques. This book serves as your foundation\nfor understanding this emerging field.\n\nFrom the past decade of graph technology emerged a common set of patterns for\nusing graph data in production applications. The second goal of this book is to teach\nyou those patterns. We define, illustrate, build, and implement the most popular ways\nteams use graph technology to solve complex problems. After studying this book, you\nwill have a set of templates for building with graph technology to solve this common\nset of problems.\n\nThe third goal of this book is to transform how you think. Understanding and apply‐\ning graph data to your problem introduces a paradigm shift into your thought pro‐\ncesses. Through many upcoming examples, we aim to teach you the common ways\nthat others think and reason about graph data within an application. This book\nteaches you what you need to know to apply graph thinking to a technology decision.\n\n## Navigating This Book\n\nThis book is organized roughly as follows:\n\n### Chapter 1\n\nChapter 1 discusses graph thinking and provides detailed processes for its appli‐\ncation to complex problems.\n\n### Chapter 2,3\n\nChapters 2 and 3 introduce fundamental graph concepts that will be used\nthroughout the rest of the book.\n\n### Chapter 4,5\n\nChapters 4 and 5 apply graph thinking and distributed graph technology to\nbuilding a Customer 360 banking application, the most popular use case for\ngraph data today.\n\n### Chapter 6,7\n\nChapters 6 and 7 into the world of hierarchical data and nested graph data\nthrough a telecommunications use case. Chapter 6 sets the stage for a common\nerror that is resolved in Chapter 7.\n\n### Chapter 8,9\n\nChapters 8 and 9 discuss pathfinding across graph data in detail, using an exam‐\nple of quantifying trust in social transaction networks via paths.\n\n### Chapter 10,11,12\n\nChapters 10 and 12 teach you how to use collaborative filtering on graph data to\ndesign a Netflix-inspired recommendation system.\n\nChapter 11 can be thought of as a bonus chapter that illustrates how to apply\nentity resolution to the merging of multiple datasets into one large graph for col‐\nlective analysis.\n\nEach chapter pair (4 and 5, 6 and 7, 8 and 9, 10 and 12) follows the same structure.\nThe first chapter in each pair introduces new concepts and a new example use case in\na development environment. The second chapter delves into the details of production\nissues, such as\n\n## How to Get\n\n- Oreilly (Buy): [The Practitioner's Guide to Graph Dat: Applying Graph Thinking and Graph Technologies to Solve Complex Problems](https://www.oreilly.com/library/view/the-practitioners-guide/9781492044062/)",
    "tocData": [
      {
        "title": "Preface",
        "url": "#preface",
        "items": []
      },
      {
        "title": "Who Should Read This Book",
        "url": "#who-should-read-this-book",
        "items": []
      },
      {
        "title": "Goals of This Book",
        "url": "#goals-of-this-book",
        "items": []
      },
      {
        "title": "Navigating This Book",
        "url": "#navigating-this-book",
        "items": [
          {
            "title": "Chapter 1",
            "url": "#chapter-1",
            "items": []
          },
          {
            "title": "Chapter 2,3",
            "url": "#chapter-23",
            "items": []
          },
          {
            "title": "Chapter 4,5",
            "url": "#chapter-45",
            "items": []
          },
          {
            "title": "Chapter 6,7",
            "url": "#chapter-67",
            "items": []
          },
          {
            "title": "Chapter 8,9",
            "url": "#chapter-89",
            "items": []
          },
          {
            "title": "Chapter 10,11,12",
            "url": "#chapter-101112",
            "items": []
          }
        ]
      },
      {
        "title": "How to Get",
        "url": "#how-to-get",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "کتاب",
    "thumbnail": "/content/blogging.png",
    "description": "کتاب ها",
    "path": "/fa/cats/library",
    "body": "<LogsArchives cat='library' />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "یادداشت",
    "thumbnail": "/content/blogging.png",
    "description": "یادداشت ها",
    "path": "/fa/cats/notes",
    "body": "<LogsArchives cat='notes' />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "پروژه",
    "thumbnail": "/content/blogging.png",
    "description": "پروژه ها",
    "path": "/fa/cats/projects",
    "body": "<LogsArchives cat='projects' />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "آموزش ها",
    "thumbnail": "/content/blogging.png",
    "description": "آموزش ها",
    "path": "/fa/cats/tuts",
    "body": "<LogsArchives cat=\"tuts\" />",
    "tocData": [],
    "type": "page"
  },
  {
    "title": "الگوهای معماری نرم‌افزار برای سیستم‌های بدون سرور",
    "thumbnail": "content/SoftwareArchitecture-Patterns-for-Serverless-Systems.jpg",
    "description": "معماری بدون سرور (Serverless) به یکی از قدرتمندترین رویکردها برای ساخت سیستم‌های مدرن تبدیل شده است. این فناوری با حذف پیچیدگی‌های مدیریت زیرساخت، به توسعه‌دهندگان اجازه می‌دهد روی خلق ارزش‌های کسب‌و‌کاری تمرکز کنند. کتاب Software Architecture Patterns for Serverless Systems، نوشته جان گیلبرت و منتشرشده توسط Packt در سال 2021، راهنمایی جامع برای طراحی سیستم‌های بدون سرور است که مقیاس‌پذیری، انعطاف‌پذیری و تاب‌آوری بالایی ارائه می‌دهند. این کتاب از مفاهیم پایه تا الگوهای پیشرفته را پوشش می‌دهد و شما را برای ساخت اپلیکیشن‌های آینده آماده می‌کند. بیایید شروع کنیم و ببینیم چرا این کتاب یک منبع ضروری برای معماران نرم‌افزار است.",
    "date": "2024-09-17T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/SoftwareArchitecture-Patterns-for-Serverless-Systems",
    "body": "## بررسی کتاب Software Architecture Patterns for Serverless Systems: طراحی آینده سیستم‌های مقیاس‌پذیر\n\nمعماری بدون سرور (Serverless) به یکی از قدرتمندترین رویکردها برای ساخت سیستم‌های مدرن تبدیل شده است. این فناوری با حذف پیچیدگی‌های مدیریت زیرساخت، به توسعه‌دهندگان اجازه می‌دهد روی خلق ارزش‌های کسب‌و‌کاری تمرکز کنند. کتاب **Software Architecture Patterns for Serverless Systems**، نوشته جان گیلبرت و منتشرشده توسط Packt در سال 2021، راهنمایی جامع برای طراحی سیستم‌های بدون سرور است که مقیاس‌پذیری، انعطاف‌پذیری و تاب‌آوری بالایی ارائه می‌دهند. این کتاب از مفاهیم پایه تا الگوهای پیشرفته را پوشش می‌دهد و شما را برای ساخت اپلیکیشن‌های آینده آماده می‌کند. بیایید شروع کنیم و ببینیم چرا این کتاب یک منبع ضروری برای معماران نرم‌افزار است.\n\n## معماری بدون سرور چیست؟ تحولی در توسعه سیستم‌ها\n\n**معماری بدون سرور** رویکردی است که در آن توسعه‌دهندگان کد خود را در قالب توابع کوچک (Functions) اجرا می‌کنند، بدون نیاز به مدیریت سرورها. پلتفرم‌هایی مثل AWS Lambda، Azure Functions و Google Cloud Functions زیرساخت را به‌صورت خودکار مدیریت می‌کنند و مقیاس‌پذیری را بر اساس تقاضا فراهم می‌آورند. این فناوری، که در اواسط دهه 2010 محبوب شد، ویژگی‌های کلیدی زیر را دارد:\n\n- **مقیاس‌پذیری خودکار**: از چند کاربر تا میلیون‌ها درخواست، بدون نیاز به تنظیم دستی.\n- **هزینه بهینه**: پرداخت فقط برای منابع مصرف‌شده.\n- **توسعه سریع**: کاهش زمان استقرار با تمرکز بر کد.\n- **تاب‌آوری بالا**: طراحی توزیع‌شده برای تحمل خطا.\n\nمثال عملی: فرض کنید یک پلتفرم تجارت الکترونیک طراحی می‌کنید. با معماری بدون سرور، می‌توانید پردازش سفارشات را به یک تابع Lambda بسپارید که فقط هنگام خرید کاربر اجرا می‌شود، هزینه‌ها را کاهش می‌دهد و مقیاس‌پذیری را تضمین می‌کند.\n\n## درباره کتاب Software Architecture Patterns for Serverless Systems\n\nکتاب **Software Architecture Patterns for Serverless Systems** راهنمایی عملی برای طراحی سیستم‌های بدون سرور در محیط‌های کسب‌و‌کاری مدرن است. این کتاب، که با زبانی دقیق و مثال‌های واقعی نوشته شده، از الگوهای معماری مانند CQRS، Event Sourcing و میکروسرویس‌ها برای حل چالش‌های مقیاس‌پذیری و نوآوری استفاده می‌کند. محتوای آن به گونه‌ای طراحی شده که هم معماران باتجربه و هم توسعه‌دهندگانی که تازه به دنیای بدون سرور وارد شده‌اند، بتوانند از آن بهره ببرند.\n\n### چرا این کتاب؟\n\nاین کتاب به دلیل رویکرد جامع و تمرکز بر الگوهای عملی برجسته است. ویژگی‌های اصلی آن شامل:\n\n- **تمرکز بر الگوهای معماری**: آموزش طراحی سیستم‌هایی که برای تغییر آماده‌اند.\n- **پروژه‌محور**: مثال‌هایی از سیستم‌های واقعی، مانند اپلیکیشن‌های بلادرنگ.\n- **پوشش فناوری‌های مدرن**: ابزارهایی مثل AWS EventBridge، DynamoDB و Kubernetes.\n- **راه‌حل‌های مهاجرت**: استراتژی‌هایی برای انتقال از سیستم‌های سنتی.\n\nمثال عملی: کتاب به شما نشان می‌دهد چگونه یک سیستم رزرو بلیط با معماری بدون سرور بسازید، با استفاده از رویدادهای ناهمزمان برای مدیریت پرداخت‌ها و تأییدیه‌ها، همه با کمترین تأخیر.\n\n### مباحث کلیدی کتاب\n\nکتاب به بخش‌های زیر تقسیم شده که هر یک الگویی از معماری بدون سرور را پوشش می‌دهد:\n\n1. **معماری برای نوآوری**: طراحی سیستم‌های انعطاف‌پذیر برای واکنش سریع به تغییرات.\n2. **خدمات خودمختار**: ساخت ماژول‌های مستقل برای کاهش وابستگی‌ها.\n3. **رویکرد مبتنی بر رویداد**: استفاده از هاب‌های رویداد مثل AWS EventBridge.\n4. **ارتباطات ناهمزمان**: بهبود پایداری با پیام‌رسانی غیرهمزمان.\n5. **استراتژی Serverless-First**: اولویت‌بندی بدون سرور برای کاهش پیچیدگی.\n6. **مدیریت داده**: پیاده‌سازی CQRS و Event Sourcing برای مقیاس‌پذیری.\n7. **میکروسرویس‌ها و میکرو فرانت‌اندها**: طراحی رابط‌های مستقل.\n8. **امنیت و مشاهده‌پذیری**: لاگ‌گیری، مانیتورینگ و تست خودکار.\n9. **سیستم‌های چند منطقه‌ای**: توزیع خدمات برای تاب‌آوری.\n10. **مهاجرت به بدون سرور**: استفاده از الگوی Strangler Fig برای انتقال تدریجی.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **معماران نرم‌افزار**: که می‌خواهند سیستم‌های مقیاس‌پذیر طراحی کنند.\n- **توسعه‌دهندگان بک‌اند**: که با پلتفرم‌های بدون سرور مثل AWS یا Azure کار می‌کنند.\n- **مدیران فنی**: که به دنبال بهبود فرآیندهای توسعه تیم هستند.\n- **علاقه‌مندان به میکروسرویس‌ها**: که می‌خواهند الگوهای مدرن را یاد بگیرند.\n\nآشنایی اولیه با جاوااسکریپت، پایتون یا مفاهیم ابری (مثل AWS) مفید است، اما کتاب مفاهیم را با مثال‌های ساده توضیح می‌دهد.\n\n## فهرست مطالب\n\n### بخش 1: مفاهیم پایه بدون سرور\n\n- معرفی معماری بدون سرور و مزایای آن\n- اصول طراحی برای نوآوری و تغییر\n\n### بخش 2: الگوهای معماری\n\n- خدمات خودمختار و کاهش وابستگی‌ها\n- رویکرد مبتنی بر رویداد با هاب‌های رویداد\n- ارتباطات ناهمزمان برای پایداری\n\n### بخش 3: مدیریت داده و رابط‌ها\n\n- پیاده‌سازی CQRS و Event Sourcing\n- میکروسرویس‌ها و میکرو فرانت‌اندها\n\n### بخش 4: عملیات و مهاجرت\n\n- امنیت، تست و مشاهده‌پذیری سیستم\n- طراحی سیستم‌های چند منطقه‌ای\n- مهاجرت از معماری‌های سنتی با Strangler Fig\n\n## کاربردهای عملی معماری بدون سرور\n\nمعماری بدون سرور در پروژه‌های واقعی تأثیر عمیقی دارد:\n\n- **تجارت الکترونیک**: پردازش سریع سفارشات با توابع بدون سرور.\n- **اپلیکیشن‌های بلادرنگ**: مثل چت‌بات‌ها یا داشبوردهای تحلیلی.\n- **اینترنت اشیا (IoT)**: مدیریت داده‌های حسگرها با مقیاس‌پذیری بالا.\n- **اتوماسیون کسب‌و‌کار**: خودکارسازی فرآیندها مثل صدور فاکتور.\n\nکتاب با آموزش این کاربردها، شما را برای طراحی سیستم‌های رقابتی آماده می‌کند.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **Amazon**: [Software Architecture Patterns for Serverless Systems](https://www.amazon.com/Software-Architecture-Patterns-Serverless-Systems/dp/1800207034)\n\nمنابع مکمل شامل مستندات AWS (aws.amazon.com/serverless)، Azure (docs.microsoft.com/azure/functions) و انجمن‌های توسعه‌دهندگان مثل Serverless Stack هستند.\n\n## جمع‌بندی\n\n**Software Architecture Patterns for Serverless Systems** یک راهنمای ضروری برای طراحی سیستم‌های مدرن و مقیاس‌پذیر است. این کتاب با آموزش الگوهای عملی و تمرکز بر فناوری‌های بدون سرور، شما را از مفاهیم پایه تا پیاده‌سازی پروژه‌های پیچیده هدایت می‌کند. اگر آماده‌اید سیستم‌هایی بسازید که سریع، انعطاف‌پذیر و آماده آینده باشند، این کتاب نقطه شروع شماست. بیایید سیستم‌های آینده رو طراحی کنیم!",
    "tocData": [
      {
        "title": "بررسی کتاب Software Architecture Patterns for Serverless Systems: طراحی آینده سیستم‌های مقیاس‌پذیر",
        "url": "#بررسی-کتاب-software-architecture-patterns-for-serverless-systems-طراحی-آینده-سیستمهای-مقیاسپذیر",
        "items": []
      },
      {
        "title": "معماری بدون سرور چیست؟ تحولی در توسعه سیستم‌ها",
        "url": "#معماری-بدون-سرور-چیست-تحولی-در-توسعه-سیستمها",
        "items": []
      },
      {
        "title": "درباره کتاب Software Architecture Patterns for Serverless Systems",
        "url": "#درباره-کتاب-software-architecture-patterns-for-serverless-systems",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "فهرست مطالب",
        "url": "#فهرست-مطالب",
        "items": [
          {
            "title": "بخش 1: مفاهیم پایه بدون سرور",
            "url": "#بخش-1-مفاهیم-پایه-بدون-سرور",
            "items": []
          },
          {
            "title": "بخش 2: الگوهای معماری",
            "url": "#بخش-2-الگوهای-معماری",
            "items": []
          },
          {
            "title": "بخش 3: مدیریت داده و رابط‌ها",
            "url": "#بخش-3-مدیریت-داده-و-رابطها",
            "items": []
          },
          {
            "title": "بخش 4: عملیات و مهاجرت",
            "url": "#بخش-4-عملیات-و-مهاجرت",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی معماری بدون سرور",
        "url": "#کاربردهای-عملی-معماری-بدون-سرور",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "کتاب Jamstack",
    "thumbnail": "content/The-Jamstack-Book.jpeg",
    "description": "وب مدرن بیش از هر زمان دیگری به سرعت، امنیت و مقیاس‌پذیری وابسته است. کاربران انتظار دارند وب‌سایت‌ها در کسری از ثانیه بارگذاری شوند و توسعه‌دهندگان به دنبال راه‌هایی هستند که بدون پیچیدگی‌های زیرساختی، تجربه‌ای بی‌نقص ارائه دهند. کتاب The Jamstack Book: Beyond Static Sites with JavaScript, APIs, and Markup، نوشته برایان رینالدی و ریموند کمدن و منتشرشده توسط Manning در سال 2022، راهنمایی جامع برای بهره‌گیری از معماری Jamstack است. این کتاب شما را از مفاهیم پایه تا پیاده‌سازی وب‌سایت‌های پیشرفته هدایت می‌کند تا پروژه‌هایی خلق کنید که در دنیای واقعی می‌درخشند. بیایید شروع کنیم و ببینیم چرا Jamstack راه‌حل آینده توسعه وب است.",
    "date": "2024-09-17T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/The-JamStack-Book",
    "body": "## بررسی کتاب The Jamstack Book: راهنمای ساخت وب‌سایت‌های سریع و مدرن\n\nوب مدرن بیش از هر زمان دیگری به سرعت، امنیت و مقیاس‌پذیری وابسته است. کاربران انتظار دارند وب‌سایت‌ها در کسری از ثانیه بارگذاری شوند و توسعه‌دهندگان به دنبال راه‌هایی هستند که بدون پیچیدگی‌های زیرساختی، تجربه‌ای بی‌نقص ارائه دهند. کتاب **The Jamstack Book: Beyond Static Sites with JavaScript, APIs, and Markup**، نوشته برایان رینالدی و ریموند کمدن و منتشرشده توسط Manning در سال 2022، راهنمایی جامع برای بهره‌گیری از معماری **Jamstack** است. این کتاب شما را از مفاهیم پایه تا پیاده‌سازی وب‌سایت‌های پیشرفته هدایت می‌کند تا پروژه‌هایی خلق کنید که در دنیای واقعی می‌درخشند. بیایید شروع کنیم و ببینیم چرا Jamstack راه‌حل آینده توسعه وب است.\n\n## Jamstack چیست؟ معماری وب مدرن\n\n**Jamstack**، مخفف **JavaScript**، **APIs** و **Markup**، رویکردی نوین برای ساخت وب‌سایت‌ها و اپلیکیشن‌های وب است که محتوای استاتیک از پیش تولیدشده را از طریق شبکه‌های توزیع محتوا (CDN) ارائه می‌دهد. این معماری، که در اواسط دهه 2010 با تلاش شرکت‌هایی مثل Netlify و Vercel محبوب شد، تعادل بی‌نظیری بین سرعت، امنیت و سادگی ایجاد می‌کند. ویژگی‌های کلیدی Jamstack شامل:\n\n- **سرعت بالا**: محتوای استاتیک با CDN بارگذاری می‌شود، مثل وبلاگ‌های ساخته‌شده با Hugo.\n- **امنیت قوی**: حذف پایگاه‌های داده و سرورهای پویا، حملاتی مثل SQL Injection را غیرممکن می‌کند.\n- **مقیاس‌پذیری خودکار**: مدیریت ترافیک‌های عظیم بدون هزینه‌های اضافی.\n- **تجربه توسعه بهبودیافته**: ابزارهای مدرن مثل Git و CI/CD فرآیند را ساده می‌کنند.\n\nمثال عملی: فرض کنید یک پورتفولیوی شخصی طراحی می‌کنید. با Jamstack، صفحات HTML شما در زمان ساخت تولید می‌شوند، روی CDN آپلود می‌شوند و در سراسر جهان با سرعت بالا نمایش داده می‌شوند، بدون نیاز به مدیریت سرور.\n\n## درباره کتاب The Jamstack Book\n\nکتاب **The Jamstack Book** راهنمایی عملی و پروژه‌محور برای یادگیری و پیاده‌سازی معماری Jamstack است. این کتاب، که با زبانی روان و مثال‌های واقعی نوشته شده، توسعه‌دهندگان را از ساخت وب‌سایت‌های ساده تا اپلیکیشن‌های پویا با قابلیت‌های پیشرفته همراهی می‌کند. محتوای آن به گونه‌ای طراحی شده که هم برای مبتدیان و هم حرفه‌ای‌هایی که به دنبال بهینه‌سازی پروژه‌هایشان هستند، مناسب باشد.\n\n### چرا این کتاب؟\n\nاین کتاب به دلیل رویکرد کاربردی و پوشش جامع ابزارهای Jamstack برجسته است. ویژگی‌های اصلی آن شامل:\n\n- **آموزش گام‌به‌گام**: از نصب ابزارها تا استقرار پروژه‌های واقعی.\n- **پوشش ابزارهای مدرن**: معرفی ژنراتورهای سایت استاتیک و CMSهای هدلس.\n- **تمرکز بر تعاملات پویا**: ادغام APIها و توابع سرورلس برای قابلیت‌های پیشرفته.\n- **استراتژی‌های مهاجرت**: راهنمایی برای انتقال از سیستم‌های سنتی.\n\nمثال عملی: کتاب به شما نشان می‌دهد چگونه یک وبلاگ با Eleventy بسازید، محتوای آن را از Contentful دریافت کنید، فرم‌های تعاملی با Netlify Forms اضافه کنید و پروژه را در چند دقیقه مستقر کنید.\n\n### مباحث کلیدی کتاب\n\nکتاب به بخش‌های زیر تقسیم شده که هر یک جنبه‌ای از Jamstack را پوشش می‌دهد:\n\n1. **معرفی Jamstack**: اصول، تاریخچه و مزایای این معماری.\n2. **ژنراتورهای سایت استاتیک**: کار با ابزارهایی مثل Eleventy، Hugo، Jekyll و Next.js.\n3. **مدیریت محتوا**: استفاده از CMSهای هدلس مانند Sanity و Contentful.\n4. **تعاملات پویا**: ادغام جاوااسکریپت و APIها برای فرم‌ها و احراز هویت.\n5. **محاسبات سرورلس**: پیاده‌سازی توابع سرورلس با Netlify و Vercel.\n6. **استقرار و بهینه‌سازی**: راه‌اندازی CI/CD و بهبود SEO و عملکرد.\n7. **مهاجرت به Jamstack**: انتقال تدریجی از معماری‌های سنتی با رویکردهای ترکیبی.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **توسعه‌دهندگان وب**: که می‌خواهند وب‌سایت‌های سریع و امن بسازند.\n- **برنامه‌نویسان جاوااسکریپت**: که با فریم‌ورک‌هایی مثل React یا Vue.js کار می‌کنند.\n- **مدیران پروژه**: که به دنبال راه‌حل‌های مقیاس‌پذیر و کم‌هزینه هستند.\n- **علاقه‌مندان به وب مدرن**: که می‌خواهند با فناوری‌های جدید آشنا شوند.\n\nآشنایی اولیه با جاوااسکریپت، HTML و CSS کافی است، زیرا کتاب مفاهیم را از پایه توضیح می‌دهد.\n\n## فهرست مطالب\n\n### بخش 1: مفاهیم پایه Jamstack\n\n- معرفی Jamstack و تاریخچه آن\n- اصول و مزایای معماری استاتیک\n\n### بخش 2: ابزارهای Jamstack\n\n- ژنراتورهای سایت استاتیک: Eleventy، Hugo، Jekyll\n- فریم‌ورک‌های مدرن: Next.js و Gatsby\n- CMSهای هدلس: Sanity، Contentful\n\n### بخش 3: قابلیت‌های پویا\n\n- ادغام APIها برای فرم‌ها و احراز هویت\n- پیاده‌سازی توابع سرورلس\n\n### بخش 4: استقرار و مهاجرت\n\n- راه‌اندازی CI/CD با Netlify و Vercel\n- بهینه‌سازی عملکرد و SEO\n- استراتژی‌های مهاجرت به Jamstack\n\n## کاربردهای عملی Jamstack\n\nJamstack در پروژه‌های واقعی تأثیر چشمگیری دارد:\n\n- **وبلاگ‌ها و سایت‌های محتوایی**: مثل وب‌سایت‌های خبری با سرعت بالا و SEO قوی.\n- **فروشگاه‌های آنلاین کوچک**: مانند سایت‌های فروش صنایع دستی با تجربه خرید سریع.\n- **پورتفولیوها و لندینگ‌پیج‌ها**: برای نمایش حرفه‌ای با هزینه کم.\n- **اپلیکیشن‌های وب تعاملی**: مثل ابزارهای مدیریت پروژه با فرم‌های پویا.\n\nکتاب با آموزش این کاربردها، شما را برای ساخت وب‌سایت‌های رقابتی آماده می‌کند.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **Manning Publications**: [The Jamstack Book](https://www.manning.com/books/the-jamstack-book)\n\n## جمع‌بندی\n\n**The Jamstack Book** یک راهنمای ضروری برای توسعه‌دهندگانی است که می‌خواهند وب‌سایت‌هایی سریع، امن و مقیاس‌پذیر بسازند. این کتاب با آموزش‌های عملی و پوشش ابزارهای مدرن، شما را از مفاهیم اولیه تا خلق پروژه‌های پیشرفته هدایت می‌کند. اگر آماده‌اید تجربه توسعه وب را به سطح جدیدی ببرید، این کتاب نقطه شروع شماست. بیایید وب‌سایت‌های آینده رو بسازیم!",
    "tocData": [
      {
        "title": "بررسی کتاب The Jamstack Book: راهنمای ساخت وب‌سایت‌های سریع و مدرن",
        "url": "#بررسی-کتاب-the-jamstack-book-راهنمای-ساخت-وبسایتهای-سریع-و-مدرن",
        "items": []
      },
      {
        "title": "Jamstack چیست؟ معماری وب مدرن",
        "url": "#jamstack-چیست-معماری-وب-مدرن",
        "items": []
      },
      {
        "title": "درباره کتاب The Jamstack Book",
        "url": "#درباره-کتاب-the-jamstack-book",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "فهرست مطالب",
        "url": "#فهرست-مطالب",
        "items": [
          {
            "title": "بخش 1: مفاهیم پایه Jamstack",
            "url": "#بخش-1-مفاهیم-پایه-jamstack",
            "items": []
          },
          {
            "title": "بخش 2: ابزارهای Jamstack",
            "url": "#بخش-2-ابزارهای-jamstack",
            "items": []
          },
          {
            "title": "بخش 3: قابلیت‌های پویا",
            "url": "#بخش-3-قابلیتهای-پویا",
            "items": []
          },
          {
            "title": "بخش 4: استقرار و مهاجرت",
            "url": "#بخش-4-استقرار-و-مهاجرت",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی Jamstack",
        "url": "#کاربردهای-عملی-jamstack",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "وب اسمبلی در عمل",
    "thumbnail": "content/wasm-in-actions.png",
    "description": "توسعه اپلیکیشن‌های تحت وب با عملکرد نزدیک به بومی، یکی از چالش‌های کلیدی توسعه‌دهندگان امروزی است.  WebAssembly ، فناوری‌ای که این امکان را فراهم می‌کند، به سرعت در حال تبدیل شدن به استانداردی برای اجرای کدهای پیچیده در مرورگرهاست. کتاب  WebAssembly in Action ، نوشته جرارد گالانت و منتشرشده توسط Manning Publications، راهنمایی جامع برای توسعه‌دهندگانی است که می‌خواهند از این فناوری برای ساخت برنامه‌های وب سریع، امن و مقیاس‌پذیر استفاده کنند. در این مقاله، نگاهی عمیق به محتوای کتاب، مخاطبان هدف و ارزش آن برای توسعه‌دهندگان می‌اندازیم. بیایید کشف کنیم چرا این کتاب می‌تواند نقطه عطفی در مسیر یادگیری شما باشد.",
    "date": "2023-09-01T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/WebAssembly-in-Action",
    "body": "## بررسی کتاب WebAssembly in Action: راهنمای جامع توسعه وب با عملکرد بالا\n\nتوسعه اپلیکیشن‌های تحت وب با عملکرد نزدیک به بومی، یکی از چالش‌های کلیدی توسعه‌دهندگان امروزی است. **WebAssembly**، فناوری‌ای که این امکان را فراهم می‌کند، به سرعت در حال تبدیل شدن به استانداردی برای اجرای کدهای پیچیده در مرورگرهاست. کتاب **WebAssembly in Action**، نوشته جرارد گالانت و منتشرشده توسط Manning Publications، راهنمایی جامع برای توسعه‌دهندگانی است که می‌خواهند از این فناوری برای ساخت برنامه‌های وب سریع، امن و مقیاس‌پذیر استفاده کنند. در این مقاله، نگاهی عمیق به محتوای کتاب، مخاطبان هدف و ارزش آن برای توسعه‌دهندگان می‌اندازیم. بیایید کشف کنیم چرا این کتاب می‌تواند نقطه عطفی در مسیر یادگیری شما باشد.\n\n## WebAssembly چیست؟ انقلابی در توسعه وب\n\n**WebAssembly** (یا به اختصار Wasm) یک فرمت باینری قابل حمل است که به توسعه‌دهندگان امکان می‌دهد کدهای نوشته‌شده در زبان‌هایی مانند C، C++، Rust یا حتی Go را با سرعتی نزدیک به بومی در مرورگر اجرا کنند. برخلاف جاوااسکریپت که تفسیر می‌شود، WebAssembly به صورت باینری کامپایل شده و عملکردی بهینه ارائه می‌دهد. این فناوری، که در سال 2017 به‌صورت رسمی توسط W3C معرفی شد، به دلیل ویژگی‌های زیر در پروژه‌های مدرن وب برجسته است:\n\n- **عملکرد بالا**: مناسب برای اپلیکیشن‌های سنگین مانند بازی‌های وب (مانند Doom 3 در مرورگر) یا ویرایشگرهای آنلاین (مانند Figma).\n- **امنیت قوی**: اجرای کد در محیط sandbox مرورگر، ریسک‌های امنیتی را کاهش می‌دهد.\n- **انعطاف‌پذیری**: امکان استفاده در مرورگر و محیط‌های سروری مانند Node.js.\n- **سازگاری چندزبانه**: پشتیبانی از زبان‌های متعدد برای توسعه.\n\nمثال عملی: فرض کنید می‌خواهید یک ویرایشگر ویدئوی آنلاین بسازید. با WebAssembly، می‌توانید منطق پردازش ویدئو را در C++ بنویسید، آن را به Wasm کامپایل کنید و در مرورگر اجرا کنید، بدون اینکه کاربر نیازی به نصب نرم‌افزار داشته باشد.\n\n## درباره کتاب WebAssembly in Action\n\nکتاب **WebAssembly in Action** راهنمایی عملی و گام‌به‌گام برای یادگیری و استفاده از WebAssembly در پروژه‌های واقعی است. این کتاب، که در سال 2019 منتشر شد، بر توسعه اپلیکیشن‌های وب با عملکرد بالا تمرکز دارد و از مثال‌های کاربردی برای آموزش مفاهیم پیچیده استفاده می‌کند. محتوای کتاب به گونه‌ای طراحی شده که هم توسعه‌دهندگان مبتدی و هم حرفه‌ای بتوانند از آن بهره ببرند.\n\n### چرا این کتاب؟\n\nکتاب نه‌تنها مفاهیم پایه WebAssembly را پوشش می‌دهد، بلکه به موضوعات پیشرفته‌ای مانند پردازش موازی و اشکال‌زدایی نیز می‌پردازد. ویژگی‌های برجسته آن شامل:\n\n- **رویکرد عملی**: آموزش با پروژه‌های واقعی، مانند ساخت ماژول‌های تعاملی با جاوااسکریپت.\n- **مستندات دقیق**: توضیحات عمیق درباره ابزارهایی مانند Emscripten و WASI.\n- **تمرکز بر عملکرد**: تکنیک‌هایی برای بهینه‌سازی با Web Workers و Pthreads.\n- **منابع تکمیلی**: کدهای نمونه و تمرین‌های قابل دانلود از سایت Manning.\n\nمثال عملی: کتاب به شما نشان می‌دهد چگونه یک ماژول C++ برای محاسبه فاکتوریل را به WebAssembly کامپایل کنید و با یک رابط جاوااسکریپتی در مرورگر نمایش دهید.\n\n### مباحث کلیدی کتاب\n\nکتاب به چهار بخش اصلی تقسیم می‌شود:\n\n1. **آشنایی اولیه**: معرفی WebAssembly، ساختار ماژول‌ها و ایجاد اولین ماژول با C++.\n2. **کار با ماژول‌ها**: تعامل ماژول‌های WebAssembly با جاوااسکریپت، استفاده از اشاره‌گرهای تابع و ادغام با کدهای موجود.\n3. **مباحث پیشرفته**: لینک‌دهی پویا، پردازش موازی با Web Workers و Pthreads، و اجرای ماژول‌ها در Node.js.\n4. **اشکال‌زدایی و تست**: کار با فرمت متنی WebAssembly (WAT)، تکنیک‌های دیباگ و نوشتن تست‌های خودکار.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **توسعه‌دهندگان C/C++**: که می‌خواهند کدهای موجود را به وب بیاورند.\n- **توسعه‌دهندگان جاوااسکریپت**: که به دنبال بهبود عملکرد اپلیکیشن‌های خود هستند.\n- **علاقه‌مندان به Rust یا Go**: که می‌خواهند از WebAssembly در پروژه‌هایشان استفاده کنند.\n- **دانشجویان و حرفه‌ای‌ها**: که به فناوری‌های مدرن وب علاقه دارند.\n\nبرای بهره‌برداری کامل، آشنایی اولیه با جاوااسکریپت، HTML و یک زبان کامپایلری (مانند C++) توصیه می‌شود.\n\n## فهرست مطالب\n\n### بخش 1: آشنایی اولیه\n\n1. معرفی WebAssembly و تاریخچه آن\n2. ساختار و عملکرد ماژول‌های WebAssembly\n3. ساخت اولین ماژول WebAssembly با Emscripten\n\n### بخش 2: کار با ماژول‌ها\n\n4. کامپایل کدهای C++ به WebAssembly\n5. تعامل پویا بین WebAssembly و جاوااسکریپت\n6. استفاده از اشاره‌گرهای تابع برای منطق‌های پیچیده\n\n### بخش 3: مباحث پیشرفته\n\n7. اصول لینک‌دهی پویا در ماژول‌ها\n8. پیاده‌سازی لینک‌دهی پویا با مثال‌های عملی\n9. پردازش موازی با Web Workers و Pthreads\n10. اجرای ماژول‌های WebAssembly در محیط Node.js\n\n### بخش 4: اشکال‌زدایی و تست\n\n11. کار با فرمت متنی WebAssembly (WAT)\n12. تکنیک‌های پیشرفته اشکال‌زدایی\n13. تست‌نویسی و برنامه‌ریزی برای پروژه‌های آینده\n\n## کاربردهای عملی WebAssembly\n\nWebAssembly فراتر از یک فناوری آزمایشی، در پروژه‌های واقعی کاربرد دارد:\n\n- **بازی‌های تحت وب**: مانند پورت‌های Unreal Engine برای مرورگر.\n- **ابزارهای ویرایش آنلاین**: مانند Adobe Photoshop وب یا AutoCAD.\n- **اپلیکیشن‌های محاسباتی**: پردازش داده‌های سنگین، مانند تحلیل‌های آماری در مرورگر.\n- **برنامه‌های سروری**: اجرای کدهای Wasm در Node.js برای میکروسرویس‌ها.\n\nکتاب WebAssembly in Action با آموزش این کاربردها، شما را برای ساخت چنین پروژه‌هایی آماده می‌کند.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **Manning Publications**: [WebAssembly in Action](https://www.manning.com/library/webassembly-in-action)\n\n## جمع‌بندی\n\n**WebAssembly in Action** یک راهنمای ضروری برای توسعه‌دهندگانی است که می‌خواهند با فناوری‌های پیشرفته وب کار کنند. این کتاب با ترکیب آموزش‌های پایه، تکنیک‌های پیشرفته و مثال‌های عملی، شما را از مفاهیم اولیه تا ساخت اپلیکیشن‌های پیچیده هدایت می‌کند. اگر به دنبال مهارتی هستید که عملکرد پروژه‌های وب شما را متحول کند، این کتاب نقطه شروع شماست. آماده‌اید با WebAssembly دنیای وب را تغییر دهید؟ بیایید دست به کار بشیم!",
    "tocData": [
      {
        "title": "بررسی کتاب WebAssembly in Action: راهنمای جامع توسعه وب با عملکرد بالا",
        "url": "#بررسی-کتاب-webassembly-in-action-راهنمای-جامع-توسعه-وب-با-عملکرد-بالا",
        "items": []
      },
      {
        "title": "WebAssembly چیست؟ انقلابی در توسعه وب",
        "url": "#webassembly-چیست-انقلابی-در-توسعه-وب",
        "items": []
      },
      {
        "title": "درباره کتاب WebAssembly in Action",
        "url": "#درباره-کتاب-webassembly-in-action",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "فهرست مطالب",
        "url": "#فهرست-مطالب",
        "items": [
          {
            "title": "بخش 1: آشنایی اولیه",
            "url": "#بخش-1-آشنایی-اولیه",
            "items": []
          },
          {
            "title": "بخش 2: کار با ماژول‌ها",
            "url": "#بخش-2-کار-با-ماژولها",
            "items": []
          },
          {
            "title": "بخش 3: مباحث پیشرفته",
            "url": "#بخش-3-مباحث-پیشرفته",
            "items": []
          },
          {
            "title": "بخش 4: اشکال‌زدایی و تست",
            "url": "#بخش-4-اشکالزدایی-و-تست",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی WebAssembly",
        "url": "#کاربردهای-عملی-webassembly",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "ساخت برنامه‌های وب پیش‌رونده با Vue.js",
    "thumbnail": "content/Building-Progressive-Web-Applications-with-Vuejs.webp",
    "description": " اپلیکیشن‌های وب پیش‌رونده (PWA) تحولی عظیم در توسعه وب ایجاد کرده‌اند، با ارائه تجربه‌ای مشابه اپلیکیشن‌های بومی، اما بدون نیاز به نصب از فروشگاه‌های اپلیکیشن. کتاب Building Progressive Web Applications with Vue.js، نوشته کارلوس روخاس و منتشرشده توسط Apress، راهنمایی جامع برای توسعه‌دهندگانی است که می‌خواهند با استفاده از فریم‌ورک محبوب Vue.js، PWAهایی سریع، قابل اعتماد و کاربرپسند بسازند. این کتاب از مفاهیم پایه تا تکنیک‌های پیشرفته را پوشش می‌دهد و شما را برای خلق اپلیکیشن‌های مدرن آماده می‌کند. بیایید شروع کنیم و ببینیم چرا این کتاب یک منبع ارزشمند برای توسعه‌دهندگان وب است.",
    "date": "2021-09-11T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/building-progressive-web-applications-with-vue-js",
    "body": "## بررسی کتاب Building Progressive Web Applications with Vue.js: ساخت اپلیکیشن‌های وب پیش‌رونده\n\nاپلیکیشن‌های وب پیش‌رونده (PWA) تحولی عظیم در توسعه وب ایجاد کرده‌اند، با ارائه تجربه‌ای مشابه اپلیکیشن‌های بومی، اما بدون نیاز به نصب از فروشگاه‌های اپلیکیشن. کتاب **Building Progressive Web Applications with Vue.js**، نوشته کارلوس روخاس و منتشرشده توسط Apress، راهنمایی جامع برای توسعه‌دهندگانی است که می‌خواهند با استفاده از فریم‌ورک محبوب **Vue.js**، PWAهایی سریع، قابل اعتماد و کاربرپسند بسازند. این کتاب از مفاهیم پایه تا تکنیک‌های پیشرفته را پوشش می‌دهد و شما را برای خلق اپلیکیشن‌های مدرن آماده می‌کند. بیایید شروع کنیم و ببینیم چرا این کتاب یک منبع ارزشمند برای توسعه‌دهندگان وب است.\n\n## PWA چیست؟ آینده اپلیکیشن‌های وب\n\n**Progressive Web Apps (PWA)**، که در سال 2015 توسط گوگل معرفی شد، فناوری‌ای است که قابلیت‌های وب و اپلیکیشن‌های بومی را ترکیب می‌کند. PWAها با استفاده از فناوری‌هایی مانند سرویس‌ورکرها، مانیفست وب و پایگاه داده‌های مرورگر، تجربه‌ای سریع، آفلاین و تعاملی ارائه می‌دهند. ویژگی‌های کلیدی PWA شامل موارد زیر است:\n\n- **عملکرد سریع**: بارگذاری آنی حتی در شبکه‌های کند، مانند اپلیکیشن‌های Trello یا Starbucks.\n- **قابلیت آفلاین**: دسترسی به محتوا بدون اتصال اینترنت.\n- **نصب‌پذیری**: امکان افزودن به صفحه اصلی دستگاه مانند اپلیکیشن‌های بومی.\n- **اعلان‌های پوش**: ارسال به‌روزرسانی‌های بلادرنگ به کاربران.\n\nمثال عملی: فرض کنید یک اپلیکیشن یادداشت‌برداری طراحی می‌کنید. با PWA، کاربران می‌توانند یادداشت‌هایشان را آفلاین بنویسند و به‌محض اتصال به اینترنت، داده‌ها همگام‌سازی شوند، همه بدون نیاز به نصب اپلیکیشن.\n\n## درباره کتاب Building Progressive Web Applications with Vue.js\n\nکتاب **Building Progressive Web Applications with Vue.js**، منتشرشده در سال 2020، راهنمایی گام‌به‌گام برای ساخت PWA با استفاده از Vue.js است. این کتاب با تمرکز بر پروژه‌های عملی، توسعه‌دهندگان را از مفاهیم اولیه تا پیاده‌سازی قابلیت‌های پیشرفته هدایت می‌کند. محتوای آن به گونه‌ای طراحی شده که هم برای مبتدیان و هم حرفه‌ای‌هایی که می‌خواهند تجربه کاربری بهتری ارائه دهند، مناسب باشد.\n\n### چرا این کتاب؟\n\nاین کتاب با ترکیب آموزش‌های تئوری و عملی، به شما کمک می‌کند PWAهایی بسازید که در دنیای واقعی کاربرد داشته باشند. ویژگی‌های برجسته آن شامل:\n\n- **تمرکز بر Vue.js**: استفاده از فریم‌ورک مدرن Vue.js برای ساخت رابط‌های کاربری پویا.\n- **پروژه‌محور**: آموزش از طریق ساخت اپلیکیشن‌های واقعی.\n- **پوشش فناوری‌های کلیدی**: از سرویس‌ورکرها تا IndexedDB و اعلان‌های پوش.\n- **بهینه‌سازی عملی**: تکنیک‌هایی برای بهبود سرعت و تجربه کاربری.\n\nمثال عملی: کتاب به شما نشان می‌دهد چگونه یک اپلیکیشن Todo List با Vue.js بسازید که آفلاین کار کند، اعلان‌های پوش ارسال کند و روی دسکتاپ و موبایل نصب‌پذیر باشد.\n\n### مباحث کلیدی کتاب\n\nکتاب به نه فصل تقسیم شده که هر یک جنبه‌ای از توسعه PWA را پوشش می‌دهد:\n\n1. **ایجاد اولین PWA**: ساخت یک اپلیکیشن پایه با قابلیت‌های آفلاین.\n2. **مانیفست برنامه وب**: تنظیم فایل مانیفست برای نصب‌پذیری و تجربه بومی.\n3. **سرویس‌ورکرها**: مدیریت درخواست‌های شبکه و کش برای عملکرد آفلاین.\n4. **حافظه کش و داده‌های آفلاین**: استراتژی‌های بهینه‌سازی کش با Cache API.\n5. **Vue.js برای PWA**: استفاده از Vue.js برای رابط‌های کاربری مقیاس‌پذیر.\n6. **IndexedDB**: ذخیره‌سازی داده‌های پیچیده به‌صورت آفلاین.\n7. **همگام‌سازی پس‌زمینه**: پیاده‌سازی Background Sync برای مدیریت داده‌ها.\n8. **اعلان‌های پوش**: ارسال اعلان‌های بلادرنگ به کاربران.\n9. **انتشار و بهینه‌سازی**: آماده‌سازی PWA برای انتشار و بهبود عملکرد.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **توسعه‌دهندگان Vue.js**: که می‌خواهند PWA را به پروژه‌هایشان اضافه کنند.\n- **توسعه‌دهندگان جاوااسکریپت**: که به دنبال یادگیری فناوری‌های مدرن وب هستند.\n- **طراحان اپلیکیشن‌های وب**: که تجربه‌ای مشابه اپلیکیشن‌های بومی می‌خواهند.\n- **دانشجویان فناوری**: که علاقه‌مند به توسعه وب پیش‌رونده هستند.\n\nآشنایی اولیه با جاوااسکریپت و HTML ضروری است، اما تجربه با Vue.js اختیاری است، زیرا کتاب مفاهیم را از پایه توضیح می‌دهد.\n\n## فهرست مطالب\n\n### فصل 1: ایجاد اولین PWA\n\nمعرفی PWA و ساخت اپلیکیشن پایه با قابلیت آفلاین.\n\n### فصل 2: مانیفست برنامه وب\n\nتنظیم فایل مانیفست برای نصب‌پذیری و آیکون‌های سفارشی.\n\n### فصل 3: آشنایی با سرویس‌ورکرها\n\nمدیریت شبکه، کش و پردازش‌های پس‌زمینه با سرویس‌ورکرها.\n\n### فصل 4: حافظه کش و مدیریت داده‌های آفلاین\n\nاستراتژی‌های Cache API برای بهینه‌سازی سرعت.\n\n### فصل 5: معرفی Vue.js برای PWA\n\nساخت رابط‌های کاربری پویا با Vue.js.\n\n### فصل 6: استفاده از IndexedDB در PWA\n\nذخیره‌سازی داده‌های آفلاین با پایگاه داده مرورگر.\n\n### فصل 7: همگام‌سازی پس‌زمینه\n\nپیاده‌سازی Background Sync برای مدیریت داده‌ها.\n\n### فصل 8: اعلان‌های پوش\n\nارسال اعلان‌های بلادرنگ با Push API.\n\n### فصل 9: انتشار و بهینه‌سازی PWA\n\nآماده‌سازی اپلیکیشن برای انتشار و بهبود عملکرد.\n\n## کاربردهای عملی PWA\n\nPWA در پروژه‌های واقعی تأثیر چشمگیری دارد:\n\n- **اپلیکیشن‌های آفلاین**: مانند Google Docs برای ویرایش اسناد بدون اینترنت.\n- **فروشگاه‌های آنلاین**: مانند Alibaba که تجربه خرید سریعی ارائه می‌دهد.\n- **برنامه‌های اجتماعی**: مانند Twitter Lite با مصرف داده کم.\n- **ابزارهای بهره‌وری**: مانند Todoist برای مدیریت وظایف.\n\nکتاب با آموزش این کاربردها، شما را برای ساخت PWAهای رقابتی آماده می‌کند.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **Apress**: [Building Progressive Web Applications with Vue.js](https://www.apress.com/gp/book/9781484253335)\n\n## جمع‌بندی\n\n**Building Progressive Web Applications with Vue.js** یک راهنمای ضروری برای توسعه‌دهندگانی است که می‌خواهند اپلیکیشن‌های وب مدرن و کاربرپسند بسازند. این کتاب با آموزش‌های عملی، از ساخت PWAهای پایه تا پیاده‌سازی قابلیت‌های پیشرفته، شما را به سطح جدیدی از توسعه وب می‌رساند. اگر آماده‌اید تجربه‌ای مشابه اپلیکیشن‌های بومی را به کاربران وب ارائه دهید، این کتاب نقطه شروع شماست. بیایید دست به کار بشیم و PWA بعدی را بسازیم!",
    "tocData": [
      {
        "title": "بررسی کتاب Building Progressive Web Applications with Vue.js: ساخت اپلیکیشن‌های وب پیش‌رونده",
        "url": "#بررسی-کتاب-building-progressive-web-applications-with-vuejs-ساخت-اپلیکیشنهای-وب-پیشرونده",
        "items": []
      },
      {
        "title": "PWA چیست؟ آینده اپلیکیشن‌های وب",
        "url": "#pwa-چیست-آینده-اپلیکیشنهای-وب",
        "items": []
      },
      {
        "title": "درباره کتاب Building Progressive Web Applications with Vue.js",
        "url": "#درباره-کتاب-building-progressive-web-applications-with-vuejs",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "فهرست مطالب",
        "url": "#فهرست-مطالب",
        "items": [
          {
            "title": "فصل 1: ایجاد اولین PWA",
            "url": "#فصل-1-ایجاد-اولین-pwa",
            "items": []
          },
          {
            "title": "فصل 2: مانیفست برنامه وب",
            "url": "#فصل-2-مانیفست-برنامه-وب",
            "items": []
          },
          {
            "title": "فصل 3: آشنایی با سرویس‌ورکرها",
            "url": "#فصل-3-آشنایی-با-سرویسورکرها",
            "items": []
          },
          {
            "title": "فصل 4: حافظه کش و مدیریت داده‌های آفلاین",
            "url": "#فصل-4-حافظه-کش-و-مدیریت-دادههای-آفلاین",
            "items": []
          },
          {
            "title": "فصل 5: معرفی Vue.js برای PWA",
            "url": "#فصل-5-معرفی-vuejs-برای-pwa",
            "items": []
          },
          {
            "title": "فصل 6: استفاده از IndexedDB در PWA",
            "url": "#فصل-6-استفاده-از-indexeddb-در-pwa",
            "items": []
          },
          {
            "title": "فصل 7: همگام‌سازی پس‌زمینه",
            "url": "#فصل-7-همگامسازی-پسزمینه",
            "items": []
          },
          {
            "title": "فصل 8: اعلان‌های پوش",
            "url": "#فصل-8-اعلانهای-پوش",
            "items": []
          },
          {
            "title": "فصل 9: انتشار و بهینه‌سازی PWA",
            "url": "#فصل-9-انتشار-و-بهینهسازی-pwa",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی PWA",
        "url": "#کاربردهای-عملی-pwa",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "شروع کار با اتریوم",
    "thumbnail": "content/6c2b5bfc492ab5d2c7bd898863c7a4db-d.webp",
    "description": "توسعه بلاکچین یکی از هیجان‌انگیزترین و نوآورانه‌ترین حوزه‌های فناوری امروزی است. اتریوم، به‌عنوان یکی از پیشروترین پلتفرم‌های بلاکچین، امکان ساخت اپلیکیشن‌های غیرمتمرکز (DApps)، قراردادهای هوشمند و توکن‌ها را فراهم کرده است. کتاب Getting Started with Ethereum: A Step-by-Step Guide to Becoming a Blockchain Developer، منتشرشده توسط O’Reilly، راهنمایی جامع برای تازه‌کارانی است که می‌خواهند قدم در این دنیای پویا بگذارند. این کتاب از نصب ابزارهای اولیه تا ساخت و استقرار قراردادهای هوشمند، شما را همراهی می‌کند. بیایید وارد دنیای بلاکچین بشیم و ببینیم چرا این کتاب نقطه شروع ایده‌آلی برای توسعه‌دهندگان اتریوم است.",
    "date": "2023-01-18T19:14:50.978Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/getting-started-with-ethereum",
    "body": "## بررسی کتاب Getting Started with Ethereum: دروازه‌ای به توسعه بلاکچین\n\nتوسعه بلاکچین یکی از هیجان‌انگیزترین و نوآورانه‌ترین حوزه‌های فناوری امروزی است. **اتریوم**، به‌عنوان یکی از پیشروترین پلتفرم‌های بلاکچین، امکان ساخت اپلیکیشن‌های غیرمتمرکز (DApps)، قراردادهای هوشمند و توکن‌ها را فراهم کرده است. کتاب **Getting Started with Ethereum: A Step-by-Step Guide to Becoming a Blockchain Developer**، منتشرشده توسط O’Reilly، راهنمایی جامع برای تازه‌کارانی است که می‌خواهند قدم در این دنیای پویا بگذارند. این کتاب از نصب ابزارهای اولیه تا ساخت و استقرار قراردادهای هوشمند، شما را همراهی می‌کند. بیایید وارد دنیای بلاکچین بشیم و ببینیم چرا این کتاب نقطه شروع ایده‌آلی برای توسعه‌دهندگان اتریوم است.\n\n## اتریوم چیست؟ قلب اپلیکیشن‌های غیرمتمرکز\n\n**اتریوم**، که در سال 2015 توسط ویتالیک بوترین معرفی شد، یک پلتفرم بلاکچین غیرمتمرکز است که فراتر از بیت‌کوین، امکان اجرای قراردادهای هوشمند را فراهم می‌کند. قراردادهای هوشمند کدهایی خودکار هستند که بدون نیاز به واسطه، توافقات را اجرا می‌کنند. اتریوم با زبان برنامه‌نویسی **Solidity** و ماشین مجازی اتریوم (EVM) به توسعه‌دهندگان اجازه می‌دهد DAppهایی در حوزه‌های مالی (مانند Uniswap)، بازی (مانند Axie Infinity) یا NFTها (مانند CryptoPunks) بسازند. ویژگی‌های کلیدی اتریوم شامل:\n\n- **غیرمتمرکز بودن**: هیچ نهادی کنترل شبکه را در دست ندارد.\n- **قراردادهای هوشمند**: اجرای خودکار توافقات با کد.\n- **توکن‌سازی**: ایجاد توکن‌های قابل تعویض (ERC-20) و غیرقابل تعویض (ERC-721).\n- **اکوسیستم گسترده**: ابزارهایی مانند MetaMask، Truffle و Chainlink.\n\nمثال عملی: فرض کنید می‌خواهید یک پلتفرم قرض‌دهی غیرمتمرکز بسازید. با اتریوم، می‌توانید قرارداد هوشمندی بنویسید که وام‌ها را مدیریت کند، سود را محاسبه کند و بدون بانک، همه‌چیز را خودکار کند.\n\n## درباره کتاب Getting Started with Ethereum\n\nکتاب **Getting Started with Ethereum**، منتشرشده در سال 2022، راهنمایی عملی برای توسعه‌دهندگانی است که هیچ تجربه قبلی در بلاکچین ندارند. این کتاب با زبانی ساده و پروژه‌های گام‌به‌گام، از نصب محیط توسعه تا ساخت DAppهای پیچیده را پوشش می‌دهد. تمرکز آن بر ابزارهای کلیدی مانند Solidity، Truffle، OpenZeppelin و IPFS، یادگیری را کاربردی و واقعی می‌کند.\n\n### چرا این کتاب؟\n\nاین کتاب به دلیل رویکرد مبتدی‌محور و پوشش جامع ابزارهای اتریوم برجسته است. ویژگی‌های اصلی آن شامل:\n\n- **آموزش از صفر**: بدون نیاز به پیش‌زمینه بلاکچین، همه‌چیز از پایه توضیح داده شده.\n- **پروژه‌های عملی**: ساخت توکن، NFT و DAppهای واقعی.\n- **ابزارهای مدرن**: معرفی ابزارهایی که در صنعت بلاکچین استاندارد هستند.\n- **تمرکز بر تست**: آموزش نوشتن تست‌های قوی برای قراردادهای هوشمند.\n\nمثال عملی: کتاب به شما نشان می‌دهد چگونه یک توکن ERC-20 بسازید، آن را در MetaMask اضافه کنید و در یک شبکه آزمایشی مانند Ropsten انتقال دهید.\n\n### مباحث کلیدی کتاب\n\nکتاب به دوازده فصل تقسیم شده که هر یک جنبه‌ای از توسعه اتریوم را پوشش می‌دهد:\n\n1. **آماده‌سازی محیط توسعه**: نصب ابزارهایی مانند Truffle، Ganache و MetaMask.\n2. **ایجاد قرارداد هوشمند**: نوشتن و استقرار اولین قرارداد با Solidity.\n3. **ساخت توکن شخصی**: ایجاد توکن ERC-20 و اتصال به کیف پول.\n4. **تست قراردادها**: نوشتن تست‌های واحد با Truffle.\n5. **مدیریت NFTها**: ساخت و انتشار NFT با OpenZeppelin و IPFS.\n6. **تأمین اعتبار**: دریافت اتر رایگان از فاست‌ها.\n7. **ذخیره‌سازی غیرمتمرکز**: استفاده از IPFS با Pinata و Fleek.\n8. **ذخیره‌سازی طولانی‌مدت**: معرفی Filecoin.\n9. **ثبت دامنه ENS**: مدیریت دامنه‌های غیرمتمرکز.\n10. **اوراکل‌ها با Chainlink**: دریافت داده‌های خارجی.\n11. **اتصال به Web3 با .NET**: نمایش اطلاعات بلاکچین در اپلیکیشن‌های دات‌نت.\n12. **جمع‌بندی**: مرور آموخته‌ها و گام‌های بعدی.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **توسعه‌دهندگان تازه‌کار بلاکچین**: که می‌خواهند اتریوم را از صفر یاد بگیرند.\n- **برنامه‌نویسان جاوااسکریپت یا .NET**: که به توسعه DApp علاقه دارند.\n- **علاقه‌مندان به NFT و DeFi**: که می‌خواهند توکن و NFT بسازند.\n- **دانشجویان فناوری**: که به دنبال یادگیری بلاکچین هستند.\n\nآشنایی اولیه با جاوااسکریپت یا برنامه‌نویسی کافی است، زیرا کتاب مفاهیم را ساده توضیح می‌دهد.\n\n## فهرست مطالب\n\n### فصل 1: آماده‌سازی محیط توسعه\n\nنصب Docker، Truffle، Ganache، MetaMask و Infura.\n\n### فصل 2: ایجاد پروژه قرارداد هوشمند\n\nنوشتن، کامپایل و استقرار قرارداد در شبکه محلی.\n\n### فصل 3: ساخت توکن شخصی\n\nایجاد توکن ERC-20 و انتقال آن با MetaMask.\n\n### فصل 4: تست قراردادهای هوشمند\n\nنوشتن و اجرای تست‌های واحد با Truffle.\n\n### فصل 5: ساخت و مدیریت NFT\n\nایجاد NFT با OpenZeppelin و انتشار در OpenSea.\n\n### فصل 6: تأمین اعتبار کیف پول\n\nدریافت اتر رایگان از فاست‌های آزمایشی.\n\n### فصل 7: ذخیره‌سازی غیرمتمرکز فایل‌ها\n\nاستفاده از IPFS با Pinata و Fleek.\n\n### فصل 8: ذخیره‌سازی طولانی‌مدت فایل‌ها\n\nمعرفی Filecoin و تفاوت آن با IPFS.\n\n### فصل 9: ثبت دامنه در ENS\n\nایجاد دامنه غیرمتمرکز برای کیف پول و وبسایت.\n\n### فصل 10: استفاده از اوراکل‌ها\n\nدریافت داده‌های خارجی با Chainlink.\n\n### فصل 11: اتصال به Web3 با .NET\n\nنمایش اطلاعات بلاکچین در اپلیکیشن‌های دات‌نت.\n\n### فصل 12: نتیجه‌گیری\n\nمرور مطالب و پیشنهادهایی برای ادامه مسیر.\n\n## کاربردهای عملی اتریوم\n\nاتریوم در پروژه‌های واقعی تأثیر عمیقی دارد:\n\n- **مالی غیرمتمرکز (DeFi)**: پلتفرم‌هایی مثل Aave برای وام‌دهی.\n- **NFTها**: بازارهایی مثل OpenSea برای آثار دیجیتال.\n- **مدیریت هویت**: استفاده از ENS برای آدرس‌های ساده.\n- **زنجیره تأمین**: قراردادهای هوشمند برای شفافیت.\n\nکتاب با آموزش این کاربردها، شما را برای ساخت DAppهای رقابتی آماده می‌کند.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **O’Reilly**: [Getting Started with Ethereum](https://www.oreilly.com/library/view/getting-started-with/9781484280454/)\n\n## جمع‌بندی\n\n**Getting Started with Ethereum** یک راهنمای ضروری برای ورود به دنیای توسعه بلاکچین است. این کتاب با آموزش‌های عملی، از ساخت قراردادهای هوشمند تا مدیریت NFT و اتصال به Web3، شما را به یک توسعه‌دهنده اتریوم توانمند تبدیل می‌کند. اگر آماده‌اید در یکی از پیشروترین حوزه‌های فناوری تأثیر بگذارید، این کتاب نقطه شروع شماست. بیایید دست به کار بشیم و اولین DApp خودمون رو بسازیم!",
    "tocData": [
      {
        "title": "بررسی کتاب Getting Started with Ethereum: دروازه‌ای به توسعه بلاکچین",
        "url": "#بررسی-کتاب-getting-started-with-ethereum-دروازهای-به-توسعه-بلاکچین",
        "items": []
      },
      {
        "title": "اتریوم چیست؟ قلب اپلیکیشن‌های غیرمتمرکز",
        "url": "#اتریوم-چیست-قلب-اپلیکیشنهای-غیرمتمرکز",
        "items": []
      },
      {
        "title": "درباره کتاب Getting Started with Ethereum",
        "url": "#درباره-کتاب-getting-started-with-ethereum",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "فهرست مطالب",
        "url": "#فهرست-مطالب",
        "items": [
          {
            "title": "فصل 1: آماده‌سازی محیط توسعه",
            "url": "#فصل-1-آمادهسازی-محیط-توسعه",
            "items": []
          },
          {
            "title": "فصل 2: ایجاد پروژه قرارداد هوشمند",
            "url": "#فصل-2-ایجاد-پروژه-قرارداد-هوشمند",
            "items": []
          },
          {
            "title": "فصل 3: ساخت توکن شخصی",
            "url": "#فصل-3-ساخت-توکن-شخصی",
            "items": []
          },
          {
            "title": "فصل 4: تست قراردادهای هوشمند",
            "url": "#فصل-4-تست-قراردادهای-هوشمند",
            "items": []
          },
          {
            "title": "فصل 5: ساخت و مدیریت NFT",
            "url": "#فصل-5-ساخت-و-مدیریت-nft",
            "items": []
          },
          {
            "title": "فصل 6: تأمین اعتبار کیف پول",
            "url": "#فصل-6-تأمین-اعتبار-کیف-پول",
            "items": []
          },
          {
            "title": "فصل 7: ذخیره‌سازی غیرمتمرکز فایل‌ها",
            "url": "#فصل-7-ذخیرهسازی-غیرمتمرکز-فایلها",
            "items": []
          },
          {
            "title": "فصل 8: ذخیره‌سازی طولانی‌مدت فایل‌ها",
            "url": "#فصل-8-ذخیرهسازی-طولانیمدت-فایلها",
            "items": []
          },
          {
            "title": "فصل 9: ثبت دامنه در ENS",
            "url": "#فصل-9-ثبت-دامنه-در-ens",
            "items": []
          },
          {
            "title": "فصل 10: استفاده از اوراکل‌ها",
            "url": "#فصل-10-استفاده-از-اوراکلها",
            "items": []
          },
          {
            "title": "فصل 11: اتصال به Web3 با .NET",
            "url": "#فصل-11-اتصال-به-web3-با-net",
            "items": []
          },
          {
            "title": "فصل 12: نتیجه‌گیری",
            "url": "#فصل-12-نتیجهگیری",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی اتریوم",
        "url": "#کاربردهای-عملی-اتریوم",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "توسعه مدرن وب با JAMstack",
    "thumbnail": "content/Modern-Web-Development-on-the-JAMstack.webp",
    "description": "وب مدرن در حال تحول است. با پیشرفت فناوری‌هایی مانند جاوااسکریپت، WebAssembly و شبکه‌های توزیع محتوا (CDN)، توسعه‌دهندگان می‌توانند وب‌سایت‌هایی سریع‌تر، امن‌تر و کاربرپسندتر بسازند. اما انتظارات کاربران نیز بالا رفته: آن‌ها خواستار بارگذاری آنی، عملکرد بی‌نقص و تجربه‌ای بدون تأخیر هستند. کتاب Modern Web Development on the JAMstack، نوشته برایان رابینسون و منتشرشده توسط O’Reilly در همکاری با Netlify، راهنمایی جامع برای بهره‌گیری از معماری JAMstack است که این نیازها را برآورده می‌کند. این کتاب شما را به سفری در دنیای توسعه وب مدرن می‌بره تا وب‌سایت‌هایی خلق کنید که در دنیای واقعی می‌درخشن. بیایید شروع کنیم و ببینیم چرا JAMstack آینده وب است.",
    "date": "2021-08-11T12:29:12.649Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/modern-web-development-on-the-jamstack",
    "body": "## بررسی کتاب Modern Web Development on the JAMstack: آینده توسعه وب\n\nوب مدرن در حال تحول است. با پیشرفت فناوری‌هایی مانند جاوااسکریپت، WebAssembly و شبکه‌های توزیع محتوا (CDN)، توسعه‌دهندگان می‌توانند وب‌سایت‌هایی سریع‌تر، امن‌تر و کاربرپسندتر بسازند. اما انتظارات کاربران نیز بالا رفته: آن‌ها خواستار بارگذاری آنی، عملکرد بی‌نقص و تجربه‌ای بدون تأخیر هستند. کتاب **Modern Web Development on the JAMstack**، نوشته برایان رابینسون و منتشرشده توسط O’Reilly در همکاری با Netlify، راهنمایی جامع برای بهره‌گیری از معماری **JAMstack** است که این نیازها را برآورده می‌کند. این کتاب شما را به سفری در دنیای توسعه وب مدرن می‌بره تا وب‌سایت‌هایی خلق کنید که در دنیای واقعی می‌درخشن. بیایید شروع کنیم و ببینیم چرا JAMstack آینده وب است.\n\n## JAMstack چیست؟ انقلابی در توسعه وب\n\n**JAMstack**، مخفف **JavaScript**، **APIs** و **Markup**، معماری‌ای است که وب‌سایت‌ها و اپلیکیشن‌ها را سریع، امن و مقیاس‌پذیر می‌کند. برخلاف مدل‌های سنتی که محتوای پویا را در هر درخواست از سرور تولید می‌کنند، JAMstack محتوای استاتیک (HTML از پیش پردازش‌شده) را از طریق CDN تحویل می‌ده. این رویکرد، که در اواسط دهه 2010 توسط Netlify و دیگر پلتفرم‌ها محبوب شد، مشکلات قدیمی وب را حل کرده است. ویژگی‌های کلیدی JAMstack شامل:\n\n- **سرعت بالا**: بارگذاری آنی با استفاده از CDN، مانند وب‌سایت‌های ساخته‌شده با Gatsby.\n- **امنیت قوی**: حذف سرورهای پویا و پایگاه داده، ریسک حملاتی مثل SQL Injection را کاهش می‌ده.\n- **مقیاس‌پذیری خودکار**: مدیریت ترافیک‌های عظیم بدون نیاز به زیرساخت‌های پیچیده.\n- **تجربه توسعه ساده**: ابزارهای مدرن مثل Git و CI/CD فرآیند را لذت‌بخش می‌کنن.\n\nمثال عملی: فرض کنید یک وبلاگ محتوایی می‌سازید. با JAMstack، محتوای Markdown شما به HTML استاتیک تبدیل می‌شه، روی CDN آپلود می‌شه و در کسری از ثانیه به کاربر نمایش داده می‌شه، بدون نیاز به سرور.\n\n## درباره کتاب Modern Web Development on the JAMstack\n\nکتاب **Modern Web Development on the JAMstack**، منتشرشده در سال 2019، راهنمایی عملی برای یادگیری و پیاده‌سازی این معماری نوین است. این کتاب، که با حمایت Netlify نوشته شده، از مفاهیم پایه تا تکنیک‌های پیشرفته را پوشش می‌ده و توسعه‌دهندگان رو برای ساخت وب‌سایت‌های مدرن آماده می‌کنه. محتوای آن به گونه‌ای طراحی شده که هم برای مبتدیان و هم حرفه‌ای‌هایی که به دنبال بهبود عملکرد پروژه‌هاشون هستن، مناسب باشه.\n\n### چرا این کتاب؟\n\nاین کتاب به دلیل رویکرد کاربردی و تمرکز بر نیازهای واقعی توسعه وب برجسته است. ویژگی‌های اصلی آن شامل:\n\n- **آموزش پروژه‌محور**: یادگیری با ساخت وب‌سایت‌های واقعی، از وبلاگ تا فروشگاه آنلاین.\n- **پوشش ابزارهای مدرن**: معرفی فریم‌ورک‌هایی مثل React، Vue.js و Gatsby.\n- **تمرکز بر عملکرد**: تکنیک‌هایی برای بهینه‌سازی سرعت و SEO.\n- **منابع عملی**: مثال‌های کد و راهنمایی‌های استقرار با Netlify.\n\nمثال عملی: کتاب به شما نشون می‌ده چطور یک لندینگ‌پیج با Gatsby بسازید، محتواش رو از یک CMS بدون سر (مثل Contentful) بکشید و روی Netlify مستقر کنید، همه در چند ساعت.\n\n### مباحث کلیدی کتاب\n\nکتاب به بخش‌های زیر تقسیم می‌شه:\n\n1. **معرفی JAMstack**: تاریخچه، اصول و مزایای این معماری.\n2. **ساخت وب‌سایت استاتیک**: استفاده از ژنراتورهای سایت استاتیک مثل Gatsby و Hugo.\n3. **مدیریت محتوا**: اتصال به CMSهای بدون سر و APIهای خارجی.\n4. **جاوااسکریپت پویا**: افزودن تعاملات سمت کلاینت با React یا Vue.js.\n5. **استقرار و بهینه‌سازی**: راه‌اندازی CI/CD با Netlify و بهبود عملکرد.\n6. **مطالعات موردی**: بررسی پروژه‌های واقعی ساخته‌شده با JAMstack.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **توسعه‌دهندگان وب**: که می‌خوان وب‌سایت‌های سریع‌تر و امن‌تر بسازن.\n- **برنامه‌نویسان جاوااسکریپت**: که با فریم‌ورک‌هایی مثل React یا Vue.js کار می‌کنن.\n- **مدیران پروژه**: که به دنبال راه‌حل‌های مقیاس‌پذیر برای تیم‌هاشون هستن.\n- **علاقه‌مندان به وب مدرن**: که می‌خوان با فناوری‌های جدید آشنا بشن.\n\nآشنایی اولیه با جاوااسکریپت و HTML کافیه، چون کتاب مفاهیم رو ساده توضیح می‌ده.\n\n## کاربردهای عملی JAMstack\n\nJAMstack در پروژه‌های واقعی تأثیر چشمگیری داره:\n\n- **وبلاگ‌ها و سایت‌های محتوایی**: مثل وب‌سایت‌های خبری که سرعت و SEO براشون حیاتیه.\n- **فروشگاه‌های آنلاین**: مانند Shopify که تجربه خرید سریعی ارائه می‌ده.\n- **پورتفولیوها و لندینگ‌پیج‌ها**: برای نمایش حرفه‌ای با کمترین هزینه.\n- **اپلیکیشن‌های وب**: مثل ابزارهای مدیریت پروژه با رابط‌های پویا.\n\nکتاب با آموزش این کاربردها، شما رو برای رقابت در وب مدرن آماده می‌کنه.\n\n## منابع و دریافت کتاب\n\nکتاب به‌صورت رایگان از منبع زیر قابل دانلود است:\n\n- **Netlify (PDF)**: [Modern Web Development on the JAMstack](https://www.netlify.com/pdf/oreilly-modern-web-development-on-the-jamstack.pdf)\n\n## جمع‌بندی\n\n**Modern Web Development on the JAMstack** یک راهنمای ضروری برای توسعه‌دهندگانی است که می‌خوان وب‌سایت‌هایی سریع، امن و مقیاس‌پذیر بسازن. این کتاب با آموزش‌های عملی و تمرکز بر ابزارهای مدرن، شما رو از مفاهیم پایه تا خلق پروژه‌های واقعی هدایت می‌کنه. اگر آماده‌اید تجربه توسعه وب رو متحول کنید، این کتاب نقطه شروع شماست. بیایید آینده وب رو بسازیم!",
    "tocData": [
      {
        "title": "بررسی کتاب Modern Web Development on the JAMstack: آینده توسعه وب",
        "url": "#بررسی-کتاب-modern-web-development-on-the-jamstack-آینده-توسعه-وب",
        "items": []
      },
      {
        "title": "JAMstack چیست؟ انقلابی در توسعه وب",
        "url": "#jamstack-چیست-انقلابی-در-توسعه-وب",
        "items": []
      },
      {
        "title": "درباره کتاب Modern Web Development on the JAMstack",
        "url": "#درباره-کتاب-modern-web-development-on-the-jamstack",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی JAMstack",
        "url": "#کاربردهای-عملی-jamstack",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "مقاله ای در مورد خود یادگیری فیزیک نوین",
    "thumbnail": "content/physics.webp",
    "description": "فیزیک؛ یکی از قدیمی‌ترین و پایه‌ای‌ترین علوم طبیعی است و شاید قدیمی‌ترین مبحث آن را بتوان اخترشناسی نامید. مدارکی وجود دارد که نشان می‌دهد هزاران سال پیش از میلاد مسیح، اقوامی همچون سومری‌ها و همچنین اقوامی در مصر باستان و اطراف سند تحقیقات و درک پیشگویانه‌ای (گمانه‌زنی‌هایی) از حرکت خورشید، ماه و ستارگان داشته‌اند.(ویکی‌پدیا)",
    "date": "2023-01-16T16:07:56.966Z",
    "cat": "notes",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/self-learning-physics",
    "body": "## پیشگفتار\n\nفیزیک، علمی که جهان را توضیح می‌دهد، نه‌تنها دانشی عمیق و دقیق است، بلکه داستانی از کنجکاوی انسان برای درک رازهای هستی است. از سیاه‌چاله‌های مرموز تا رقص ذرات کوانتومی، فیزیک با زیبایی و ظرافتش ما را به شگفتی وا می‌دارد. اما پیچیدگی‌های ریاضی و سیستم‌های دانشگاهی گاهی لذت این علم را تحت‌الشعاع قرار می‌دهند. خوشبختانه، منابعی وجود دارند که یادگیری فیزیک را برای همه ممکن می‌کنند. این مقاله، با الهام از یادداشت سوزان ریگتی، دوره‌های خودآموز فیزیک را معرفی می‌کند که از مفاهیم پایه تا موضوعات پیشرفته را پوشش می‌دهند. بیایید سفری به دنیای فیزیک داشته باشیم و راهی برای کشف این علم پیدا کنیم.\n\n## فیزیک چیست؟ کلیدی برای درک جهان\n\nفیزیک مطالعه طبیعت و قوانین حاکم بر آن است، از حرکت سیارات در کهکشان‌ها تا رفتار ذرات زیراتمی. این علم، ستون تمدن مدرن است: از فناوری‌های پزشکی مثل MRI تا اینترنت و GPS، همگی ریشه در اکتشافات فیزیک دارند. موضوعات جذاب فیزیک شامل:\n\n## مکانیک کلاسیک: حرکت اجسام، از پرتاب یک توپ تا مدار ماه.\n\nنسبیت: توضیح زمان و فضا، مثل خمیدگی نور در نزدیکی سیاه‌چاله‌ها.\nکوانتوم: دنیای عجیب ذرات، که پایه کامپیوترهای کوانتومی است.\nماده تاریک و انرژی تاریک: رازهایی که 95% کیهان را تشکیل می‌دهند.\nمثال عملی: وقتی با GPS مسیر پیدا می‌کنید، نسبیت عام اینشتین زمان‌بندی سیگنال‌های ماهواره‌ای رو تنظیم می‌کنه تا دقیق باشه. فیزیک اینجاست، در زندگی روزمره ما.\n\n## چالش‌های یادگیری فیزیک\n\nفیزیک، با تمام زیبایی‌اش، پیچیدگی‌هایی داره. ریاضیات، زبان اصلی فیزیک، گاهی مفاهیم رو برای تازه‌کارها سنگین می‌کنه. توی سیستم‌های دانشگاهی، حجم فرمول‌ها و امتحانات می‌تونه لذت کشف رو کم‌رنگ کنه. حتی دانشجوهای فیزیک هم ممکنه به خاطر درگیری با مسائل ریاضی، حس کنجکاوی اولیه‌شون رو از دست بدن. سوزان ریگتی، فیزیک‌دان و نویسنده، توی مقاله‌اش اشاره می‌کنه که خیلی‌ها به فیزیک علاقه دارن، اما به دلایل مختلف (مثل نبود وقت یا دسترسی به منابع) نمی‌تونن دنبالش کنن. اینجاست که دوره‌های خودآموز وارد می‌شن.\n\n## معرفی دوره‌های سوزان ریگتی\n\nسوزان ریگتی، که خودش از فیزیک‌دان‌های برجسته و بنیان‌گذار شرکت‌های فناوری کوانتومیه، لیستی از دوره‌های خودآموز فیزیک رو پیشنهاد داده که برای علاقه‌مندان طراحی شده. این دوره‌ها، که از منابع باز مثل MIT OpenCourseWare، Khan Academy و کتاب‌های کلاسیک جمع‌آوری شدن، مسیری ساختاریافته برای یادگیری فیزیک ارائه می‌دن. از مکانیک پایه تا نسبیت عام و مکانیک کوانتوم، این دوره‌ها به شما کمک می‌کنن بدون نیاز به کلاس رسمی، فیزیک رو عمیق یاد بگیرین.\n\nلینک اصلی :‌\n\n[So You Want to Learn Physics…](https://www.susanrigetti.com/physics)\n\n<div class=\"ltr\">\n\n## Before You Begin\n\n### **Popular library on Physics**\n\nWhen you're solving problems, working through textibrary, and getting into the nitty-gritty details of each topic, it's so easy to lose the forest for the trees and forget why you even became inspired to study physics in the first place. This is where really, really good (and non-speculative) popular library on physics come in handy: they inspire, they encourage, and they help you keep the big picture in mind.\n\nOne big problem is that many popular physics library (especially those written by famous physicists) are incredibly speculative and tend to present an unrealistic view of what the study of physics is all about. When you're learning physics, it's best to avoid these types of speculative library and stick to the ones that talk about the real physics that we know exists (in general, anything by [Frank Close](https://www.amazon.com/Frank-Close/e/B0032LWBQU?language=en_US&linkCode=ll2&linkId=3c7c04c8d21e464a287401f980430fd4&ref_=as_li_ss_tl&tag=susanfowler-20) or [Richard Feynman](https://www.amazon.com/Richard-P.-Feynman/e/B000AQ47U8?language=en_US&linkCode=ll2&linkId=ed2f3d4424a1dedaff83313cfbcd4668&ref_=as_li_ss_tl&tag=susanfowler-20) is a safe bet!).\n\nHere are a handful of my favorite popular physics library, ranked in order of difficulty:\n\n- [The First Three Minutes by Steven Weinberg](https://www.amazon.com/gp/product/0465024378/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0465024378&linkCode=as2&tag=susanfowler-20&linkId=d72aaa7813d719344a4c88258a5488d0) **(Level: Easy)**.An account of the Big Bang by one of the most brilliant physicists of all time.\n- [The Character of Physical Law by Richard Feynman](https://www.amazon.com/Character-Physical-Law-MIT-Press/dp/0262533413?dchild=1&keywords=character%20of%20physical%20law&language=en_US&linkCode=ll1&linkId=85b0a8234adfc1bb7a7c4b643f59bf6b&qid=1618957764&ref_=as_li_ss_tl&s=library&sr=1-1&tag=susanfowler-20) **(Level: Easy)**. A brilliant, inspiring little book on the laws of nature.\n- [The Particle Odyssey by Frank Close](https://www.amazon.com/gp/product/0198504861/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0198504861&linkCode=as2&tag=susanfowler-20&linkId=bfce048e1031401ef7c664d79ab2d927) **(Level: Easy)**. A brilliant popular introduction to particle physics and its history, beautifully illustrated with amazing figures and photographs. (Unfortunately it’s a bit difficult to find online right now, but if you find a copy, you should buy it ASAP!)\n- [Black Holes and Time Warps by Kip Thorne](https://www.amazon.com/Black-Holes-Time-Warps-Commonwealth/dp/0393312763?dchild=1&keywords=black%20holes%20and%20time%20warps&language=en_US&linkCode=ll1&linkId=5c79d14a1bc80bbd2207736f7540668f&qid=1618958068&ref_=as_li_ss_tl&s=library&sr=1-1&tag=susanfowler-20) **(Level: Easy/Medium)**. My absolute favorite popular introduction to general relativity.\n- [The Theoretical Minimum by Leonard Susskind and George Hrabovsky](https://www.amazon.com/Theoretical-Minimum-Start-Doing-Physics/dp/0465075681?dchild=1&keywords=the%20theoretical%20minimum&language=en_US&linkCode=ll1&linkId=e69e149c7cda69c3a460847a5e1b341c&qid=1618956738&ref_=as_li_ss_tl&sr=8-1&tag=susanfowler-20) **(Level: Medium)**. A solid introduction to classical mechanics. Is best understood around level 5 in the undergraduate curriculum.\n- [The Feynman Lectures on Physics (Boxed Set)](https://www.amazon.com/gp/product/0465023827/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0465023827&linkCode=as2&tag=susanfowler-20&linkId=47c82e27eae89efef1db2659759c65f7) and [Feynman Lectures on Physics (Kindle Edition)](https://www.amazon.com/gp/product/B016OMK7XW/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B016OMK7XW&linkCode=as2&tag=susanfowler-20&linkId=50edb7c48df214e8eb9a3a5e4d868806) **(Level: Medium)**. Feynman's Lectures are essential readings for everyone interested in physics, and you'll find a copy on the ibraryhelf of every amateur and professional physicist. These lectures are what got me into physics: my astronomy professor told me to read them and see if I liked physics - they changed my life! They are somewhat difficult to understand if you are just getting started, but they will make more and more sense by the time you reach levels 5 and 6 in the undergraduate curriculum.\n- [Deep Down Things: The Breathtaking Beauty of Particle Physics by Bruce Schumm](https://www.amazon.com/gp/product/080187971X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=080187971X&linkCode=as2&tag=susanfowler-20&linkId=6b2ca839cec6cc43cbad403e156c14cf) **(Level: Difficult)**. The very best popular book about particle physics — it clearly explains the most difficult concepts without resorting to speculation. (I had the honor of working with Bruce on a search for supersymmetry at the ATLAS detector.) This book is a great read while you are starting level 7 in the undergraduate curriculum.\n\n### **Mathematical and Scientific Preliminaries**\n\nBefore you begin studying physics and working through the topics in the sections below, you need to be familiar with some basic mathematics. A high school education — which should include pre-algebra, algebra 1, geometry, algebra 2, trigonometry, and pre-calculus — is sufficient. If you need a refresher, I recommend either working through the Khan Academy math courses ([https://www.khanacademy.org/)](https://www.khanacademy.org/) or the book [Why Math? by R.D. Driver](https://www.amazon.com/Why-Math-Undergraduate-Texts-Mathematics/dp/0387944273?_encoding=UTF8&amp%3Bqid=&amp%3Bsr=&language=en_US&linkCode=ll1&linkId=0fc3187aa8b5febcc75391ba905635b5&ref_=as_li_ss_tl&tag=susanfowler-20). There's no need to be familiar with calculus before starting, because you’ll learn it as you work through the undergraduate-level courses.\n\nThere are no scientific prerequisites for this curriculum. You don’t need to be familiar with biology or chemistry at either the high school or college level in order to understand, although doing some studying on the side can’t hurt. Khan Academy has some great high school science refresher courses that are perfect for this ([https://www.khanacademy.org/science)](https://www.khanacademy.org/science).\n\n### **How to Study**\n\nEveryone learns very differently, and knowing your learning style is important: do you learn by reading, by taking notes, by talking, by watching, by doing, or by a combination of some or all of these? For example, I learn by reading and by note-taking, so I read through textibrary very carefully, take copious notes, and summarize each concept in my own words before moving on to something new. Think about this before you begin so that you'll know how to structure your studies.\n\nRegardless of your learning style, you'll still need to solve the physics problems in each textbook. **Solving problems is the only way to understand physics.** There's no way around it. Even though it can feel tedious at times, there's nothing more rewarding than figuring out a really difficult physics problem and realizing that you figured it all out all by yourself!\n\nOne tough thing about learning on your own is that you may not know whether you are solving the problems correctly. Some of the textibrary listed below have answers to selected exercises in the back of the book, but these aren’t always adequate for two reasons: (1) they often only show the solutions to the problems, and not the steps taken to get there; and (2) it’s much better to do _all_ of the exercises rather than just a select few. The good news is that many of the solutions (and step-by-step ways to solve them) can be found online with a simple Google search. If you are going to Google the answers, however, _please first try to solve the problems on your own, and try multiple times_ (you’re not in school trying to get a perfect grade — you’re trying to learn and understand).\n\nAnd, finally, a note on learning in a laboratory vs. learning from textibrary. Physics is both an experimental and theoretical science, and while research happens in laboratories and on blackboards and computers, the majority of any physics _education_ does not take place in a laboratory but in lecture classes that teach from textibrary and assign homework problems that are found in textibrary. Yes, there are some laboratory classes (usually at the very introductory levels, and their only purpose is to show that oh, look, Newton’s laws work in the real world after all) and some — _some_ — undergraduates are allowed to participate in research on the side, but physics is taught through textibrary, lectures, and homework problems. Don’t believe me? Take a look at the undergraduate physics curriculum at any university that offers a physics major. Graduate programs in physics are largely the same — both M.A. and PhD programs in physics require two years of core classes — with one key difference: to get a PhD, students need to complete several years of research, a thesis, and — at many programs — take an exam to prove they have mastered the graduate core curriculum. The graduate core curriculum is all textibrary and lectures and homework problems. The textibrary listed in the curriculum I’ve written below are the same textibrary that are used in the top undergraduate and graduate physics programs in the world. Studying them will give you the same education that you would receive at one of these programs — no painfully-annoying-introductory-mechanics-laboratory-class-with-inane-group-projects required.\n\n## **Undergraduate Physics**\n\n### **Overview**\n\nThe curriculum of every undergraduate physics program covers the following subjects (along with some electives in various topics), and usually in the following order:\n\n1. Introduction to Mechanics\n2. Electrostatics\n3. Waves and Vibrations\n4. Modern Physics\n5. Classical Mechanics\n6. Electrodynamics\n7. Quantum Mechanics\n8. Thermodynamics and Statistical Mechanics\n9. Undergraduate Electives\n\nI'm going to cover the details of each of these fields below, including the best textibrary to use and any additional reading you may find helpful in your journey. I'm also going to give some details about the mathematics you'll need to learn alongside each topic.\n\n### **1. Introduction to Mechanics**\n\n**What It's All About**\n\nAn introduction to mechanics course is the first physics class that most people will take in an undergraduate program, and it's the best place to begin independent study of physics as well. This is where you'll start learning how to see the world in mathematical terms. Topics that will be covered: the basics of motion in a straight line, motion in two dimensions, motion in three dimensions, [Newton's Laws](https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion), [work](<https://en.wikipedia.org/wiki/Work_(physics)>), [kinetic energy](https://en.wikipedia.org/wiki/Kinetic_energy), [potential energy](https://en.wikipedia.org/wiki/Potential_energy), [the conservation of energy](https://en.wikipedia.org/wiki/Conservation_of_energy), [momentum](https://en.wikipedia.org/wiki/Momentum), [collisions](https://en.wikipedia.org/wiki/Elastic_collision), [rotation and rotational motion](https://en.wikipedia.org/wiki/Rotation_around_a_fixed_axis), [gravitation](https://en.wikipedia.org/wiki/Gravity), and periodic motion.\n\n**The Best Textibrary to Use**\n\n- [University Physics with Modern Physics by Young and Freedman](https://www.amazon.com/University-Physics-Modern-15th-dp-0135159555/dp/0135159555?language=en_US&linkCode=ll1&linkId=83f94d8e110a2add683656ac03b021c1&ref_=as_li_ss_tl&tag=susanfowler-20) (essential). Work through all of the \"Mechanics\" chapters (in my edition, these are chapters 1-14).This is the best introductory book I've found, and you can use it when you learn electrostatics and modern physics, too. It does a great job of introducing the relevant mathematics, but you'll need to be learning calculus alongside it. There are plenty of great example problems to work through, and the solutions are easy to find online (though you can also buy a [Student Solutions Manual](https://www.amazon.com/Student-Solutions-Manual-University-Physics/dp/0135216958?_encoding=UTF8&language=en_US&linkCode=ll1&linkId=d12dd683b7365eb115eeb59b93966df8&pd_rd_i=0135216958&pd_rd_r=6cbcc49d-5945-4800-862a-f2d9a5664310&pd_rd_w=7KvdQ&pd_rd_wg=xjZRM&pf_rd_p=fd3ebcd0-c1a2-44cf-aba2-bbf4810b3732&pf_rd_r=YVPF9YHJKQGRAK06BWD8&psc=1&refRID=YVPF9YHJKQGRAK06BWD8&ref_=as_li_ss_tl&tag=susanfowler-20)). Please note that you don't need to spend $250 on the new edition — Amazon has lots of copies of [the 12th edition](https://www.amazon.com/gp/product/0321501217/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321501217&linkCode=as2&tag=susanfowler-20&linkId=5a574e1c2ff846a346c32c7f53955499), [the 13th edition](https://www.amazon.com/gp/product/0321696867/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321696867&linkCode=as2&tag=susanfowler-20&linkId=ddf424a6eecfcfe35e44d1db6790be82), and the [14th edition](https://www.amazon.com/gp/product/0321973615?ie=UTF8&language=en_US&linkCode=ll1&linkId=0542066c72a562b902ea737105713149&ref_=as_li_ss_tl&tag=susanfowler-20) that contain the same material.\n\n**The Math You'll Need to Learn Alongside It**\n\nYou'll need to learn calculus while working through [University Physics](https://www.amazon.com/University-Physics-Modern-15th-dp-0135159555/dp/0135159555?language=en_US&linkCode=ll1&linkId=b29655ef6d618e95cb854f8f9ae55142&ref_=as_li_ss_tl&tag=susanfowler-20)_._ My favorite introductory calculus book is [Thomas' Calculus](https://www.amazon.com/Thomas-Calculus-14th-Joel-Hass-dp-0134438981/dp/0134438981?language=en_US&linkCode=ll1&linkId=e055fccb0e90aa26395bf8b70ad8eb90&ref_=as_li_ss_tl&tag=susanfowler-20) (you can also use the [earlier](https://www.amazon.com/gp/product/0321587995?ie=UTF8&language=en_US&linkCode=ll1&linkId=a3bf72c1bdee13f41d667b22236fcd0c&ref_=as_li_ss_tl&tag=susanfowler-20) editions), with [Stewart's Calculus](https://www.amazon.com/Calculus-Early-Transcendentals-James-Stewart-dp-1337613924/dp/1337613924?language=en_US&linkCode=ll1&linkId=f6ab8fd13d35a55416bd8323a003f1e7&ref_=as_li_ss_tl&tag=susanfowler-20) (older edition [here](https://www.amazon.com/gp/product/0538497904?ie=UTF8&language=en_US&linkCode=ll1&linkId=2ff44ed10fac5d8dc3431070f7747618&ref_=as_li_ss_tl&tag=susanfowler-20)) coming in as a close second. Work through each chapter, and make sure you can solve problems at the end of each chapter before continuing to the next.\n\nIf you are new to calculus and/or find yourself struggling to get accustomed to it, don’t let that stop you. Calculus is really difficult, and it can take a really long time to wrap your head around it. Some things that can help are (1) watching videos like the ones on Khan Academy (<https://www.khanacademy.org/)>, (2) taking [Robert Ghrist’s free calculus courses on Coursera](https://www.coursera.org/instructor/robghrist), and (3) reading a truly amazing little book called [Calculus Made Easy by Silvanus P. Thompson and Martin Gardner](https://www.amazon.com/Calculus-Made-Easy-Silvanus-Thompson/dp/0312185480?dchild=1&keywords=calculus&language=en_US&linkCode=ll1&linkId=cd9f2ac14c8ade36fb379691fa162425&qid=1618960480&ref_=as_li_ss_tl&s=library&sr=1-23&tag=susanfowler-20) that breaks everything down really clearly.\n\n### **2. Electrostatics**\n\n**What It's All About**\n\nThis is where you'll learn about the physics of electricity and magnetism ([electromagnetism](https://en.wikipedia.org/wiki/Electromagnetism)) in static situations (situations where no motion is involved). Topics covered are: [electric charges](https://en.wikipedia.org/wiki/Electric_charge) and [electric fields](https://en.wikipedia.org/wiki/Electric_field), [magnetism](https://en.wikipedia.org/wiki/Magnetism) and [magnetic fields](https://en.wikipedia.org/wiki/Magnetic_field), [Gauss's Law](https://en.wikipedia.org/wiki/Gauss%27s_law), [capacitance](https://en.wikipedia.org/wiki/Capacitance), [resistance and conductance](https://en.wikipedia.org/wiki/Electrical_resistance_and_conductance), [inductance](https://en.wikipedia.org/wiki/Inductance), [current](https://en.wikipedia.org/wiki/Electric_current), and how [circuits work](https://en.wikipedia.org/wiki/Electrical_network).\n\n**The Best Textibrary to Use**\n\n- [University Physics with Modern Physics by Young and Freedman](https://www.amazon.com/University-Physics-Modern-15th-dp-0135159555/dp/0135159555?language=en_US&linkCode=ll1&linkId=1e49ffb9f18ac271717679c9c76826d1&ref_=as_li_ss_tl&tag=susanfowler-20) (essential). Work through the chapters on \"Electromagnetism\" (in my edition, these are chapters 21-32). You can find inexpensive copies of [the 12th edition](https://www.amazon.com/gp/product/0321501217/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321501217&linkCode=as2&tag=susanfowler-20&linkId=5a574e1c2ff846a346c32c7f53955499), [the 13th edition](https://www.amazon.com/gp/product/0321696867/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321696867&linkCode=as2&tag=susanfowler-20&linkId=ddf424a6eecfcfe35e44d1db6790be82), and the [14th edition](https://www.amazon.com/gp/product/0321973615?ie=UTF8&language=en_US&linkCode=ll1&linkId=0542066c72a562b902ea737105713149&ref_=as_li_ss_tl&tag=susanfowler-20) that contain the same material.\n\n**The Math You'll Need To Learn Alongside It**\n\nKeep working through the calculus textibrary ([Thomas](https://www.amazon.com/Thomas-Calculus-14th-Joel-Hass-dp-0134438981/dp/0134438981?language=en_US&linkCode=ll1&linkId=d72cf5af7a3e077a3deb9bb2556886e9&ref_=as_li_ss_tl&tag=susanfowler-20) or [Stewart](https://www.amazon.com/Calculus-Early-Transcendentals-James-Stewart-dp-1337613924/dp/1337613924?language=en_US&linkCode=ll1&linkId=260314dde4baac0f191ee371e799ad18&ref_=as_li_ss_tl&tag=susanfowler-20)) while you work through the basics of electrostatics, but you should finish them by the time you finish the electromagnetism chapters in [University Physics](https://www.amazon.com/gp/product/0321973615/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321973615&linkCode=as2&tag=susanfowler-20&linkId=4724b43f949f1f5295f91dd9b2c1c3f5). You absolutely must understand the basics of calculus before you move on to the other topics in physics.\n\n### **3. Waves and Vibrations**\n\n**What It's All About**\n\nThe mechanics of vibrations and waves are complex and important enough to demand their own course of study. Mastering this material is essential for learning about quantum mechanics, so don't skip this topic! This is where you will learn about [simple harmonic oscillators](https://en.wikipedia.org/wiki/Simple_harmonic_motion), damped harmonic oscillators, forced oscillations, coupled oscillators, [waves](https://en.wikipedia.org/wiki/Wave), [interference](<https://en.wikipedia.org/wiki/Interference_(wave_propagation)>), [diffraction](https://en.wikipedia.org/wiki/Diffraction), and [dispersion](<https://en.wikipedia.org/wiki/Dispersion_(optics)>).\n\n**The Best Textibrary to Use**\n\n- [Vibrations and Waves by French](https://www.amazon.com/gp/product/8123909144/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=8123909144&linkCode=as2&tag=susanfowler-20&linkId=3c5b0fa433139f20155050ceda42688d) (essential) and [Vibrations and Waves by King](https://www.amazon.com/gp/product/0470011890/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0470011890&linkCode=as2&tag=susanfowler-20&linkId=1c37debf5e2966c4b29cd7f4bb3243f0) (essential). These two library complement each other very well, and contain different problems and solutions.\n\n**The Math You'll Need To Learn Alongside It**\n\nBy this point, you should have finished the introductory calculus library and are ready to move on to more advanced mathematics. You should start working through [Zill's Advanced Engineering Mathematics](https://www.amazon.com/gp/product/B01LZ8LP3M?language=en_US&linkCode=ll1&linkId=601bfe2c0d757c3f265df6c3bc151b63&ref_=as_li_ss_tl&tag=susanfowler-20), which is a thoroughintroduction to more advanced topics in mathematics (linear algebra, complex analysis, real analysis, partial differential equations, and ordinary differential equations). The topics in this book are essential — once you master them, you'll have all the math you need to know in order to understand undergraduate physics. You can also buy the (cheaper) [4th](https://www.amazon.com/gp/product/0763779660?ie=UTF8&language=en_US&linkCode=ll1&linkId=9264ee7f5b4c8774ee0fc37b951aa5c4&ref_=as_li_ss_tl&tag=susanfowler-20) and [5th editions](https://www.amazon.com/Advanced-Engineering-Mathematics-Dennis-Zill/dp/1449691722?dchild=1&keywords=Advanced%20Engineering%20Mathematics%205th%20Edition&language=en_US&linkCode=ll1&linkId=b2837bef42bb63b24435ac2a398a475b&qid=1618961790&ref_=as_li_ss_tl&s=library&sr=1-6&tag=susanfowler-20).\n\n### **4. Modern Physics**\n\n**What It's All About**\n\nThe fourth physics class that most undergraduates take is usually called \"Modern Physics\", and it's an introduction to topics in physics that will be taught in greater detail later in the undergraduate physics curriculum. If you plan to study the advanced topics on their own, it's fine to skip this class, but covering these topics now in your independent studies will allow you to grasp the advanced topics that you hear so much about and that probably got you into physics in the first place. This is where you'll learn the basics of [thermodynamics](https://en.wikipedia.org/wiki/Thermodynamics), [relativity](https://en.wikipedia.org/wiki/Special_relativity), [quantum mechanics](https://en.wikipedia.org/wiki/Quantum_mechanics), [atomic physics](https://en.wikipedia.org/wiki/Atomic_physics), [nuclear physics](https://en.wikipedia.org/wiki/Nuclear_physics), [particle physics](https://en.wikipedia.org/wiki/Particle_physics), and [cosmology](https://en.wikipedia.org/wiki/Cosmology).\n\n**The Best Textibrary to Use**\n\n- [University Physics with Modern Physics by Young and Freedman](https://www.amazon.com/University-Physics-Modern-15th-dp-0135159555/dp/0135159555?language=en_US&linkCode=ll1&linkId=04a833d493c86c6c03323c689abc6192&ref_=as_li_ss_tl&tag=susanfowler-20) (essential). Work through the \"Thermodynamics\" section (chapters 17-20 in my edition of the book), and the \"Modern Physics\" section (chapters 37-44). You can find inexpensive copies of [the 12th edition](https://www.amazon.com/gp/product/0321501217/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321501217&linkCode=as2&tag=susanfowler-20&linkId=5a574e1c2ff846a346c32c7f53955499), [the 13th edition](https://www.amazon.com/gp/product/0321696867/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321696867&linkCode=as2&tag=susanfowler-20&linkId=ddf424a6eecfcfe35e44d1db6790be82), and the [14th edition](https://www.amazon.com/gp/product/0321973615?ie=UTF8&language=en_US&linkCode=ll1&linkId=0542066c72a562b902ea737105713149&ref_=as_li_ss_tl&tag=susanfowler-20) that contain the same material.\n\n**The Math You'll Need To Learn Alongside It**\n\nContinue working through [Zill's Advanced Engineering Mathematics](https://www.amazon.com/gp/product/B01LZ8LP3M?language=en_US&linkCode=ll1&linkId=601bfe2c0d757c3f265df6c3bc151b63&ref_=as_li_ss_tl&tag=susanfowler-20). Once you have mastered all of the topics in this book, you'll have all the math you need to know in order to understand undergraduate physics.\n\n### **5. Classical Mechanics**\n\n**What It's All About**\n\nThis is where you’ll _really_ learn classical mechanics, which you were introduced to in the very first course (Introduction to Mechanics). You'll study the topics in much greater depth, and learn how to use different mathematical formalisms of classical mechanics (the [Lagrangian formalism](https://en.wikipedia.org/wiki/Lagrangian_mechanics) and the [Hamiltonian formalism](https://en.wikipedia.org/wiki/Hamiltonian_mechanics)) to solve problems in mechanics.\n\n**The Best Textibrary to Use**\n\n- [Taylor's Classical Mechanics](https://www.amazon.com/gp/product/189138922X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=189138922X&linkCode=as2&tag=susanfowler-20&linkId=a6a0cb5612e181573e9c4348a07ebce4) (essential). This is a fantastic introduction to classical mechanics.\n- [Morin's Introduction to Classical Mechanics with Problems and Solutions](https://www.amazon.com/gp/product/0521876222/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0521876222&linkCode=as2&tag=susanfowler-20&linkId=3ebbc6ab7b785fe7868e52fdfb4dd2ec) (supplement). Morin's book is a good supplement to Taylor's, and contains some great problems to work through.\n- [Problems and Solutions in Introductory Mechanics by Morin](https://www.amazon.com/gp/product/1482086921/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=1482086921&linkCode=as2&tag=susanfowler-20&linkId=07ada7370585958f9a953c14a6d7b776) (supplement). Even more great problems (with solutions) to work through, and contains some great problem-solving strategies.\n\n**The Math You'll Need To Learn Alongside It**\n\nIf you haven't finished working through [Zill](https://www.amazon.com/gp/product/B01LZ8LP3M?language=en_US&linkCode=ll1&linkId=601bfe2c0d757c3f265df6c3bc151b63&ref_=as_li_ss_tl&tag=susanfowler-20) by now, you should master the topics in it by the time you finish studying classical mechanics.\n\n### **6. Electrodynamics**\n\n**What It's All About**\n\nEarlier, you learned about electrostatics: the study of static (non-moving) electricity and magnetism. By now, you know the mathematics to understand [electrodynamics](https://en.wikipedia.org/wiki/Classical_electromagnetism), which encompasses everything about classical electricity and magnetism. You'll cover [electrostatics](https://en.wikipedia.org/wiki/Electrostatics) again, then learn about [Laplace's equation](https://en.wikipedia.org/wiki/Laplace%27s_equation), [multipole expansions](https://en.wikipedia.org/wiki/Multipole_expansion), [polarization](<https://en.wikipedia.org/wiki/Polarization_(waves)>), [dielectrics](https://en.wikipedia.org/wiki/Dielectric), the [Lorentz Force Law](https://en.wikipedia.org/wiki/Lorentz_force), the [Biot-Savart Law](https://en.wikipedia.org/wiki/Biot%E2%80%93Savart_law), [magnetic vector potential](https://en.wikipedia.org/wiki/Magnetic_potential#Magnetic_vector_potential), [electromotive force](https://en.wikipedia.org/wiki/Electromotive_force), [electromagnetic induction](https://en.wikipedia.org/wiki/Electromagnetic_induction), [Maxwell's equations](https://en.wikipedia.org/wiki/Maxwell%27s_equations), [electromagnetic waves and radiation](https://en.wikipedia.org/wiki/Electromagnetic_radiation), and [special relativity](https://en.wikipedia.org/wiki/Special_relativity).\n\n**The Best Textibrary to Use**\n\n- [Griffith's Introduction to Electrodynamics](https://www.amazon.com/gp/product/8120347765/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=8120347765&linkCode=as2&tag=susanfowler-20&linkId=31461e6adfc67af2ca9f6767492794cb) (essential). This is _the_ book on undergraduate electrodynamics and one of the very best physics textibrary ever written. Make sure you work through _every single problem_ in the book.\n- [Div, Grad, Curl and All That by Schey](https://www.amazon.com/gp/product/0393925161/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0393925161&linkCode=as2&tag=susanfowler-20&linkId=65aecc9d2596cb020ed8b46152bfc883) (supplement). This is a short textbook on vector calculus that is very helpful when trying to work with vectors in electrodynamics.\n- [A Student's Guide to Maxwell's Equations by Fleisch](https://www.amazon.com/gp/product/0521701473/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0521701473&linkCode=as2&tag=susanfowler-20&linkId=a274a62e927aa70484cbb340db31c860) (supplement). Maxwell's equations are essential in understanding electrodynamics, and this book is the best supplement on the topic.\n\n### **7. Quantum Mechanics**\n\n**What It's All About**\n\nBy this point, you're ready to really dive into the fundamentals of [quantum mechanics](https://en.wikipedia.org/wiki/Quantum_mechanics) and its applications — one of the most beautiful, interesting, and thought-provoking topics in all of physics. You'll learn to see the world in a completely new way. You'll learn about the [wave function](https://en.wikipedia.org/wiki/Wave_function), [the Schrodinger equation](https://en.wikipedia.org/wiki/Schr%C3%B6dinger_equation), [perturbation theory,](<https://en.wikipedia.org/wiki/Perturbation_theory_(quantum_mechanics)>) the [variational principle](https://en.wikipedia.org/wiki/Variational_principle), the [WKB Approximation](https://en.wikipedia.org/wiki/WKB_approximation), the [adiabatic approximation](https://en.wikipedia.org/wiki/Adiabatic_theorem), and [scattering](https://en.wikipedia.org/wiki/Scattering_theory).\n\n**The Best Textibrary to Use**\n\n- [Griffith's Introduction to Quantum Mechanics](https://www.amazon.com/Introduction-Quantum-Mechanics-David-Griffiths-dp-1107189632/dp/1107189632?language=en_US&linkCode=ll1&linkId=c319e9c4889ef4c55ba19d3adbc7512c&ref_=as_li_ss_tl&tag=susanfowler-20) (essential). This is, without a doubt, _the_ book on undergraduate quantum mechanics, written by the same Griffiths who wrote the [Introduction to Electrodynamics](https://www.amazon.com/gp/product/8120347765/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=8120347765&linkCode=as2&tag=susanfowler-20&linkId=31461e6adfc67af2ca9f6767492794cb). It's written in the same concise and beautiful style, and every single problem is worth solving.\n\n### **8. Thermodynamics and Statistical Mechanics**\n\n**What It's All About**\n\n[Thermodynamics](https://en.wikipedia.org/wiki/Thermodynamics) is the field of physics concerned with kinetics (dynamics) related to heat and energy, while [statistical mechanics](https://en.wikipedia.org/wiki/Statistical_mechanics) is all about the microscopic principles that underlie the [Laws of Thermodynamics](https://en.wikipedia.org/wiki/Laws_of_thermodynamics). This is where you'll learn about the [laws of thermodynamics](https://en.wikipedia.org/wiki/Laws_of_thermodynamics), [entropy](https://en.wikipedia.org/wiki/Entropy), the [canonical ensemble](https://en.wikipedia.org/wiki/Canonical_ensemble), [Maxwell distributions](https://en.wikipedia.org/wiki/Maxwell%E2%80%93Boltzmann_distribution), [Planck's distribution](https://en.wikipedia.org/wiki/Planck%27s_law), [Fermi-Dirac statistics](https://en.wikipedia.org/wiki/Fermi%E2%80%93Dirac_statistics), [Bose-Einstein statistics](https://en.wikipedia.org/wiki/Bose%E2%80%93Einstein_statistics), and [phase transitions](https://en.wikipedia.org/wiki/Phase_transition).\n\nBy the time you've finished this topic, you'll have mastered all of the fundamentals of undergraduate physics!\n\n**The Best Textibrary to Use**\n\n- [Schroeder’s An Introduction to Thermal Physics ](https://www.amazon.com/Introduction-Thermal-Physics-Daniel-Schroeder/dp/0201380277?language=en_US&linkCode=ll1&linkId=83111d396110c7cfd24820446d826528&pd_rd_i=0201380277&pd_rd_r=f7733715-77d8-46d9-872e-01036734e3c1&pd_rd_w=ETVhr&pd_rd_wg=kPD2d&pf_rd_p=8019ba47-0a12-4976-b76b-5c932d60db6f&pf_rd_r=3RW65PM2JXHNYRQP93NA&psc=1&ref_=as_li_ss_tl&tag=susanfowler-20)(essential). A very thorough and comprehensive introduction to thermodynamics and statistical mechanics; contains very clear and straightforward explanations and examples.\n- [Introductory Statistical Mechanics by Bowley and Sanchez](https://www.amazon.com/gp/product/0198505760/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0198505760&linkCode=as2&tag=susanfowler-20&linkId=6946245b927cee4f04ca6bfda30d2e79) (supplement). A good second text to have on hand to reference.\n\n### **9. Undergraduate Electives**\n\n**What They’re All About**\n\nNow that you understand all of the fundamentals of undergraduate physics, you have a solid foundation and can study more advanced and specialized topics, including (but not limited to) [astronomy](https://en.wikipedia.org/wiki/Astronomy), [astrophysics](https://en.wikipedia.org/wiki/Astrophysics), [biophysics](https://en.wikipedia.org/wiki/Biophysics), [cosmology](https://en.wikipedia.org/wiki/Cosmology), [electronics](https://en.wikipedia.org/wiki/Electronics), [optics](https://en.wikipedia.org/wiki/Optics), [particle physics](https://en.wikipedia.org/wiki/Particle_physics), and [string theory](https://en.wikipedia.org/wiki/String_theory).\n\n**The Best Textibrary to Use**\n\n- **Astronomy:** [The Cosmic Perspective](https://www.amazon.com/Cosmic-Perspective-9th-Jeffrey-Bennett-dp-0134874366/dp/0134874366?language=en_US&linkCode=ll1&linkId=a32b07d7561f2bf9ee64155bbdddad09&ref_=as_li_ss_tl&tag=susanfowler-20). A wonderful introduction to astronomy, accessible to anyone who is just beginning to study physics.\n- **Astrophysics:** [An Introduction to Modern Astrophysics by Carroll and Ostlie](https://www.amazon.com/gp/product/0805304029/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0805304029&linkCode=as2&tag=susanfowler-20&linkId=be2a1be4e50f0c30670e7aa6511b2c42). A comprehensive introduction to modern astrophysics.\n- **Biophysics:** [Biophysics: An Introduction by Glaser](https://www.amazon.com/Biophysics-Introduction-Roland-Glaser-ebook/dp/B00A9YGFBK?dchild=1&keywords=biophysics&language=en_US&linkCode=ll1&linkId=0d178033fed0db3517767cf569fb8bd1&qid=1618966016&ref_=as_li_ss_tl&s=library&sr=1-5&tag=susanfowler-20). A solid introduction to the principles of biophysics.\n- **Cosmology:** [Ryden's Introduction to Cosmology](https://www.amazon.com/Introduction-Cosmology-Barbara-Ryden-dp-1107154839/dp/1107154839?language=en_US&linkCode=ll1&linkId=686d9b29f7b225fba87b9f920ca3df7b&ref_=as_li_ss_tl&tag=susanfowler-20). My absolute favorite introductory cosmology book.\n- **Electronics:** [Basic Electronics for Scientists and Engineers by Eggleston](https://www.amazon.com/gp/product/0521154308/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0521154308&linkCode=as2&tag=susanfowler-20&linkId=eaa933ffc178dc52f52da6c347e8c4ea). Accessible to anyone who has worked through the basics of electrodynamics.\n- **Optics.** [Optics by Hecht](https://www.amazon.com/Optics-5th-Eugene-Hecht/dp/0133977226?_encoding=UTF8&language=en_US&linkCode=ll1&linkId=d38230d12a814b81abb8a8b5201ebb99&qid=1618965492&ref_=as_li_ss_tl&sr=1-1&tag=susanfowler-20). The classic (and truly amazing) optics textbook.\n- **Particle Physics**: [Griffith's Introduction to Elementary Particles](https://www.amazon.com/gp/product/3527406018/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=3527406018&linkCode=as2&tag=susanfowler-20&linkId=90b30a3f4e6b7dd629a631cb7815d5ea). Written by the same Griffith who gave us the [Introduction to Electrodynamics](https://www.amazon.com/gp/product/8120347765/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=8120347765&linkCode=as2&tag=susanfowler-20&linkId=31461e6adfc67af2ca9f6767492794cb) and[ Introduction to Quantum Mechanics](https://www.amazon.com/dp/B07G15LW25?language=en_US&linkCode=ll1&linkId=fe0ac80a7bb24ae45b77018743207f11&pd_rd_i=B07G15LW25&pd_rd_r=0e5f245f-2014-4529-ad94-c176004d7189&pd_rd_w=kD7KX&pd_rd_wg=IfFtV&pf_rd_p=085568d9-3b13-4ac1-8ae4-24a26c00cb0c&pf_rd_r=9FCHHBWK0SM6YCC136MT&psc=1&ref_=as_li_ss_tl&spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEzMUo4SzZUOVJGWjVXJmVuY3J5cHRlZElkPUEwODE3MDM2MUxYNEkwN1FEQVpKNCZlbmNyeXB0ZWRBZElkPUEwODc1MTUzTk45QzQ5RzEzVEowJndpZGdldE5hbWU9c3BfZGV0YWlsJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ%3D%3D&tag=susanfowler-20), this book is the perfect introduction to the fundamentals of particle physics and is a joy to work through.\n- **String Theory.** [A First Course in String Theory by Zwiebach](https://www.amazon.com/First-Course-String-Theory-2nd/dp/0521880327?dchild=1&keywords=string%20theory&language=en_US&linkCode=ll1&linkId=56d954f30bd8fefd220f1c853389f224&qid=1618965203&ref_=as_li_ss_tl&s=library&sr=1-6&tag=susanfowler-20). The essential introduction to string theory.\n\n### **Graduate Physics**\n\n### **Overview**\n\nGraduate-level physics requires mastery of every topic within the undergraduate physicscurriculum above as a prerequisite.\n\nThe graduate physics core is comprised of:\n\n1. Mathematical Methods in Physics\n2. Electrodynamics\n3. Quantum Mechanics\n4. Statistical Mechanics\n5. General Relativity\n6. Quantum Field Theory\n7. Graduate Electives\n\nI'll cover each of these in the sections below. (Note: many graduate students are required to take a course in classical mechanics as part of the graduate core, but if you've mastered the material in undergraduate classical mechanics there is no need for this).\n\n### **1. Mathematical Methods in Physics**\n\n**What It's All About**\n\nStudying electrodynamics, quantum mechanics, and stat mech in more depth at the graduate level requires a greater level of mathematical rigor. To prepare, you'll need to learn the following in greater detail: [Fourier analysis](https://en.wikipedia.org/wiki/Fourier_analysis), [tensors](https://en.wikipedia.org/wiki/Tensor), [ODEs](https://en.wikipedia.org/wiki/Ordinary_differential_equation), [PDEs](https://en.wikipedia.org/wiki/Partial_differential_equation), [real analysis](https://en.wikipedia.org/wiki/Real_analysis), [complex analysis](https://en.wikipedia.org/wiki/Complex_analysis), [algebra](https://en.wikipedia.org/wiki/Algebra#Abstract_algebra), and [group theory](https://en.wikipedia.org/wiki/Group_theory) (to name a few).\n\n**The Best Textibrary To Use**\n\n- [Mathematical Methods for Physicists by Arfken, Weber, and Harris](https://www.amazon.com/gp/product/0123846544/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0123846544&linkCode=as2&tag=susanfowler-20&linkId=8245a50e135a8ddf5c7249a0ecfce4b3) (essential). This book covers the essentials of everything you'll need to know for the mathematical rigor demanded by the graduate core.\n- [Tolstov's Fourier Series](https://www.amazon.com/gp/product/0486633179/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0486633179&linkCode=as2&tag=susanfowler-20&linkId=47cef211064681ee48165c8be7e0a518) (supplement). The best book on Fourier Analysis ever written. Complements the main text very well.\n- [Complex Variables by Fisher](https://www.amazon.com/gp/product/0486406792/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0486406792&linkCode=as2&tag=susanfowler-20&linkId=6498db95d42cc4d3b3f1cf36c4e49def) (supplement). Amazing overview of complex analysis. Can be used along with [Needham's Visual Complex Analysis](https://www.amazon.com/gp/product/0198534469/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0198534469&linkCode=as2&tag=susanfowler-20&linkId=51c923a6d2da55c26ae67231ec7e854b) to supplement the main text.\n- [Zee's Group Theory in a Nutshell for Physicists](https://susan-fowler-b4lr.squarespace.com/blog/2016/8/13/%3Cahref=%22https://www.amazon.com/gp/product/0691162697/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0691162697&linkCode=as2&tag=susanfowler-20&linkId=edd23dac43d4fe8ffa9f411fe2923e20%22%3EGroup%20Theory%20in%20a%20Nutshell%20for%20Physicists%3C/a%3E%3Cimg%20src=%22//ir-na.amazon-adsystem.com/e/ir?t=susanfowler-20&l=am2&o=1&a=0691162697%22%20width=%221%22%20height=%221%22%20border=%220%22%20alt=%22%22%20style=%22border:none%20!important;%20margin:0px%20!important;%22%20/%3E) (supplement). A brilliant introduction to group theory for physicists.\n\n### **2. Graduate Electrodynamics**\n\n**What It's All About**\n\nGraduate-level electrodynamics covers the same topics as undergraduate electrodynamics but with greater mathematical rigor.\n\n**The Best Textibrary To Use**\n\n- [Classical Electrodynamics by Jackson](https://www.amazon.com/gp/product/047130932X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=047130932X&linkCode=as2&tag=susanfowler-20&linkId=9bd8aaea20913478d4cb514f91ed0929) (essential). This is the bible of classical electrodynamics, and everyone who works through either loves it or hates it (I loved it). If you can master everything in this book and work through a decent selection of the problems, you'll have mastered electrodynamics.\n\n### **3. Graduate Quantum Mechanics**\n\n**What It's All About**\n\nGraduate quantum mechanics is far more advanced than what you learned at the undergraduate level. Here you'll learn, in great depth, all there is to know about quantum mechanics, including [quantum dynamics](https://en.wikipedia.org/wiki/Quantum_dynamics) (the [Schrodinger equation](https://en.wikipedia.org/wiki/Schr%C3%B6dinger_equation), the [Heisenberg picture](https://en.wikipedia.org/wiki/Heisenberg_picture), [propagators](https://en.wikipedia.org/wiki/Propagator), and [Feynman path integrals](https://en.wikipedia.org/wiki/Path_integral_formulation)), [angular momentum](https://en.wikipedia.org/wiki/Angular_momentum_operator), [symmetries](https://en.wikipedia.org/wiki/Symmetry_in_quantum_mechanics) and [conservation laws](https://en.wikipedia.org/wiki/Noether%27s_theorem) of the quantum world, [perturbation theory](<https://en.wikipedia.org/wiki/Perturbation_theory_(quantum_mechanics)>), [scattering theory](https://en.wikipedia.org/wiki/Scattering_theory), [relativistic quantum mechanics](https://en.wikipedia.org/wiki/Relativistic_quantum_mechanics), [decoherence](https://en.wikipedia.org/wiki/Quantum_decoherence), and [interpretations of quantum mechanics](https://en.wikipedia.org/wiki/Interpretations_of_quantum_mechanics) (the [Copenhagen](https://en.wikipedia.org/wiki/Copenhagen_interpretation) vs. [Many-Worlds](https://en.wikipedia.org/wiki/Many-worlds_interpretation) interpretations).\n\n**The Best Textibrary To Use**\n\n- [Sakurai's Modern Quantum Mechanics](https://www.amazon.com/gp/product/B00DT62BOA/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00DT62BOA&linkCode=as2&tag=susanfowler-20&linkId=9b659e22baeb85c6f477c3eabe9c3c62) (essential). This is my favorite textbook on quantum mechanics, and the one I used to learn quantum mechanics for the very first time. It's a wonderful, elegant, simple book with clear and understandable problems. Try to work through all of the problems — if you do, you'll understand quantum mechanics very well.\n- [Quantum Mechanics and Path Integrals by Feynman](https://www.amazon.com/gp/product/0486477223/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0486477223&linkCode=as2&tag=susanfowler-20&linkId=0c7d421cfd3dde2410cfba580311cb68) (essential). Sakurai's coverage of Feynman's Path Integral formalism of quantum mechanics doesn't do it justice. Working through this text (written by Feynman himself) is not only useful, but incredibly fun.\n- [The Principles of Quantum Mechanics by Dirac](https://www.amazon.com/gp/product/0198520115/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0198520115&linkCode=as2&tag=susanfowler-20&linkId=ee9f05b4a8a41117dd4c35b7c38b754f) (supplement). [Dirac](https://en.wikipedia.org/wiki/Paul_Dirac) was one of the founding fathers of quantum mechanics and quantum field theory. This book is important historically, and also will open your eyes to the need for quantum field theory.\n- [Principles of Quantum Mechanics by Shankar](https://www.amazon.com/gp/product/0306447908/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0306447908&linkCode=as2&tag=susanfowler-20&linkId=c5ba6aff751d9f50c766cc259b5e2d86) (supplement). A great supplement to Sakurai for more information about each topic. A bit too dense to serve as a primary text, it works best as an addition or reference.\n- [Decoherence and the Appearance of a Classical World in Quantum Theory](https://www.amazon.com/gp/product/3540003908/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=3540003908&linkCode=as2&tag=susanfowler-20&linkId=667e93b91dd9ef0d96093f56e8cf53ad) (supplement). This book is very dense and you may not understand all of it even after working through Sakurai, but understanding decoherence is essential to understanding how the classical world arises from the quantum.\n- [The Everett Interpretation of Quantum Mechanics: Collected Works 1955-1980](https://www.amazon.com/gp/product/0691145075/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0691145075&linkCode=as2&tag=susanfowler-20&linkId=95fbf3134a7de58e63387b524b049231) (supplement). Very few library have been written on interpretations of quantum mechanics, and reading through this volume helps to understand the limitations of our interpretations as well as the complexities and details of Everett's Many-Worlds interpretation.\n\n### **4. Graduate Statistical Mechanics**\n\n**What It's All About**\n\nNow that you have a more solid mathematical background and understand all of the fundamentals of quantum mechanics, it's time to approach graduate-level statistical mechanics. You'll revisit the Laws of Thermodynamics, and then pick up from where you left off in undergraduate statistical mechanics.\n\n**The Best Textibrary To Use**\n\n- [Statistical Mechanics by Pathria and Beale](https://www.amazon.com/Statistical-Mechanics-R-K-Pathria-dp-0081026927/dp/0081026927?language=en_US&linkCode=ll1&linkId=7a78e10e8bd40958087e50734c8b79f2&ref_=as_li_ss_tl&tag=susanfowler-20) (essential). This book is, admittedly, a bit frustrating, but it's worth suffering through because if you make it all the way to the end and work through the majority of the problems, you'll know stat mech like the back of your hand.\n- [Huang's Statistical Mechanics](https://www.amazon.com/gp/product/0471815187/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0471815187&linkCode=as2&tag=susanfowler-20&linkId=189688411c439ed695b3ccd1622c7f54) (supplementary). This is a great book to supplement the main text — is a good bridge between undergraduate stat mech and Pathria.\n\n### **5. General Relativity**\n\n**What It's All About**\n\nBy now you'll have a very deep understanding of [Einstein's special theory of relativity](https://en.wikipedia.org/wiki/Special_relativity), but, as you may have noticed, [general relativity](https://en.wikipedia.org/wiki/General_relativity) (GR) — the theory of gravitation — hasn't yet been mentioned. That's because GR is a mathematically demanding topic — not only do you need to know all of the math you've learned so far,  but you'll need to learn [differential geometry](https://en.wikipedia.org/wiki/Differential_geometry) in order to make sense of how gravity works. Here, you'll revisit [special relativity](https://en.wikipedia.org/wiki/Special_relativity) and the intricacies of [spacetime](https://en.wikipedia.org/wiki/Spacetime), then learn the basics of [differential geometry](https://en.wikipedia.org/wiki/Differential_geometry), how to deal with [curvature](https://en.wikipedia.org/wiki/Curvature), the essentials of [gravitation](https://en.wikipedia.org/wiki/Introduction_to_general_relativity), how [black holes](https://en.wikipedia.org/wiki/Black_hole) work, and the basics of [cosmology](https://en.wikipedia.org/wiki/Cosmology).\n\n**The Best Textibrary To Use**\n\n- [Spacetime and Geometry by Carroll ](https://www.amazon.com/gp/product/0805387323/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0805387323&linkCode=as2&tag=susanfowler-20&linkId=76a009803af6c128e44f312b0fd4f30f)(essential). This is _the_ book on general relativity, and Carroll does a phenomenal job of introducing the essentials of differential geometry and general relativity.\n- [Einstein Gravity in a Nutshell by Zee](https://www.amazon.com/Einstein-Gravity-Nutshell-Zee/dp/069114558X?_encoding=UTF8&language=en_US&linkCode=ll1&linkId=e895d4616875cecf3c27ab0e021747ab&pd_rd_i=069114558X&pd_rd_r=5315ce76-2a4d-4af1-b8f4-d1f5ee809a02&pd_rd_w=Lp44k&pd_rd_wg=OWaie&pf_rd_p=fd3ebcd0-c1a2-44cf-aba2-bbf4810b3732&pf_rd_r=J4YF21VX61B9QBZWE3VD&psc=1&refRID=J4YF21VX61B9QBZWE3VD&ref_=as_li_ss_tl&tag=susanfowler-20) (supplement). A great, accessible overview.\n- [Wald's General Relativity](https://www.amazon.com/gp/product/0226870332/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0226870332&linkCode=as2&tag=susanfowler-20&linkId=e5ad192d5237867ba093c6533030d0ac) (supplement). Wald's book is a very abstract, high-level overview of general relativity, and makes a great supplement to Carroll's book. Go to Carroll for the overview, look it up in Wald for the high-level abstractions, and then look in the [apple book](https://www.amazon.com/gp/product/0716703440/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0716703440&linkCode=as2&tag=susanfowler-20&linkId=0f202faba0a99e956251024296be2b33) for the dirty details.\n- [Gravitation by Misner, Thorne, and Wheeler](https://www.amazon.com/gp/product/0716703440/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0716703440&linkCode=as2&tag=susanfowler-20&linkId=0f202faba0a99e956251024296be2b33) (supplement). Also known as the \"apple book\" thanks to the apple gracing its cover, this book goes into the nitty-gritty details of general relativity in ways that no other book does.\n- [Weinberg's Gravitation and Cosmology](https://www.amazon.com/gp/product/B008VRVK44/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B008VRVK44&linkCode=as2&tag=susanfowler-20&linkId=2b86a141434b6399cb2ff39bea63bb29) (supplement). Weinberg is one of those rare physicists who has not only been at the forefront of every major field in physics, but has written about each of them as well. His library tend to be inaccessible to beginners, however, and this book is no exception. It does make a good supplementary reading, but I'd advise reading it after you've worked through the rest.\n- [Differential Geometry of Curves and Surfaces by Manfredo P. do Carmo](https://www.amazon.com/Differential-Geometry-Curves-Surfaces-Mathematics-ebook/dp/B01NCHYI33?language=en_US&linkCode=ll1&linkId=b990005bdae7f2acf283118e637fc241&pd_rd_i=B01NCHYI33&pd_rd_r=2f8b30eb-52e9-4d68-be57-85266802700e&pd_rd_w=nnUNY&pd_rd_wg=OznzN&pf_rd_p=78971f67-4c78-4f07-b5c1-ee9acd72068c&pf_rd_r=XSE51QVTY28WEJEM35GP&psc=1&ref_=as_li_ss_tl&tag=susanfowler-20) (supplement). The classic differential geometry textbook; may be useful to help you wrap your head around differential geometry.\n\n### **6. Quantum Field Theory**\n\n**What It's All About**\n\nQuantum Field Theory (QFT) is the heart of all modern high-energy physics: the Standard Model of particle physics is a QFT. The whole idea behind QFT is that we are doing quantum mechanics on classical fields, and it works remarkably well. Along with GR, QFT will be the most challenging part of your physics education, but perhaps the most rewarding (I know it was extraordinarily rewarding for me!). It may take many, many years to master. You'll learn about how to [quantize fields](https://en.wikipedia.org/wiki/Second_quantization), [Feynman diagrams](https://en.wikipedia.org/wiki/Feynman_diagram), [quantum electrodynamics (QED)](https://en.wikipedia.org/wiki/Quantum_electrodynamics), [renormalization](https://en.wikipedia.org/wiki/Renormalization), [non-Abelian gauge theories](https://en.wikipedia.org/wiki/Gauge_theory), [quantum chromodynamics (QCD)](https://en.wikipedia.org/wiki/Quantum_chromodynamics), [the Higgs mechanism](https://en.wikipedia.org/wiki/Higgs_mechanism), [the Glashow-Weinberg-Salam theory](https://en.wikipedia.org/wiki/Electroweak_interaction) of electroweak interactions, the [symmetries of particle physics](https://en.wikipedia.org/wiki/Standard_Model), and [spontaneous symmetry breaking](https://en.wikipedia.org/wiki/Spontaneous_symmetry_breaking).\n\n**The Best Textibrary To Use**\n\n- [Zee's Quantum Field Theory in a Nutshell](https://www.amazon.com/gp/product/0691140340/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0691140340&linkCode=as2&tag=susanfowler-20&linkId=1f7f650184687b5ba35fc46366c61763) (essential). This is my favorite physics book of all time, and the most beautiful introduction to QFT ever written. You'll walk away understanding the basics of QFT and with a deep understanding of the fundamental nature of the universe.\n- [An Introduction to Quantum Field Theory by Peskin and Schroeder](https://www.amazon.com/gp/product/0201503972/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0201503972&linkCode=as2&tag=susanfowler-20&linkId=50a9dbc88d7e01dbd5ea8a78b8f5a0e0) (essential). This is the bible of QFT, but its far too terse and encyclopedic to work through on its own and must be studied alongside Zee. Covers everything you could possibly want to know about QFT. Try to work through the problems, but be aware that mastery of QFT will take a very, very long time.\n- [Weinberg's The Quantum Theory of Fields, Volume 1](https://www.amazon.com/gp/product/0521550017/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0521550017&linkCode=as2&tag=susanfowler-20&linkId=8aad9a648a91c5c2a1813ae01d44ad30) (supplement). Another great volume by Weinberg, who was one of the most important physicists in the history of particle physics. This book should be used only as a supplement, and preferably not read until Zee and Peskin and Schroeder have been completed. It's not a book to learn from, but one to gain additional understanding of QFT through after you've mastered all of the basics.\n- [Lie Algebras in Particle Physics by Georgi](https://www.amazon.com/gp/product/0738202339/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0738202339&linkCode=as2&tag=susanfowler-20&linkId=8768c4b53df08da4c985b159901715e3) (supplement). This dives into the details of Lie Algebras in QFT.\n\n### **7. Graduate Electives**\n\n**What They’re All About**\n\nThe graduate curriculum can be split into several categories: (i) the core courses, (ii) specialized coursework and graduate electives, and (iii) research. Graduate students typically take the core courses first, which focus on the same topics covered in undergraduate courses but in much greater depth and with far more mathematical rigor. Students then choose more specialized courses and electives depending on their area of research in physics, including (but not limited to) [condensed matter physics](https://en.wikipedia.org/wiki/Condensed_matter_physics), [cosmology](https://en.wikipedia.org/wiki/Cosmology), [electronics](https://en.wikipedia.org/wiki/Electronics), [optics](https://en.wikipedia.org/wiki/Optics), [particle physics](https://en.wikipedia.org/wiki/Particle_physics), [quantum computing](https://en.wikipedia.org/wiki/Quantum_computing), [solid-state physics,](https://en.wikipedia.org/wiki/Solid-state_physics) and [string theory](https://en.wikipedia.org/wiki/String_theory).\n\n**The Best Textibrary to Use**\n\n- **Condensed Matter Physics:** [Lubensky’s Principles of Condensed Matter Physics](https://www.amazon.com/Principles-Condensed-Matter-Physics-Chaikin/dp/0521794501?dchild=1&keywords=lubensky%20condensed%20matter&language=en_US&linkCode=ll1&linkId=7bc228f55f58c7928e37da7c99ae1278&qid=1618980102&ref_=as_li_ss_tl&sr=8-1&tag=susanfowler-20). A modern, comprehensive textbook. Fairly advanced, and is easier to understand after completing the graduate core and working through something like [Ashcroft and Mermin](https://www.amazon.com/Solid-State-Physics-Neil-Ashcroft/dp/8131500527?crid=2S8RO77XRYDXS&dchild=1&keywords=ashcroft%20and%20mermin%20solid%20state%20physics&language=en_US&linkCode=ll1&linkId=ed543039975467b23595195e55fcdaaf&qid=1618977068&ref_=as_li_ss_tl&sprefix=ashcroft%20and%20mer%2Cdigital-text%2C222&sr=8-1&tag=susanfowler-20).\n- **Cosmology:** Mark Trodden and Sean Carroll’s [TASI Lectures: Introduction to Cosmology](https://arxiv.org/abs/astro-ph/0401547). Supplement with [Steven Weinberg’s Cosmology](https://www.amazon.com/Cosmology-Steven-Weinberg/dp/0198526822?dchild=1&keywords=cosmology&language=en_US&linkCode=ll1&linkId=0c4cf65f17f6f9b1e2c14c6bfab29d24&qid=1619026039&ref_=as_li_ss_tl&s=library&sr=1-6&tag=susanfowler-20).\n- **Electronics:** [The Art of Electronics by Horowitz and Hill](https://www.amazon.com/dp/0521809266?language=en_US&linkCode=ll1&linkId=406668d01de865aeb3ce4aecf4b85a08&pd_rd_i=0521809266&pd_rd_r=b7f975c9-cefd-47f6-a780-b79087dbd3ee&pd_rd_w=YKMDW&pd_rd_wg=pz6EU&pf_rd_p=085568d9-3b13-4ac1-8ae4-24a26c00cb0c&pf_rd_r=V086395H90KBSAZGBNC4&psc=1&ref_=as_li_ss_tl&spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEyWlJaMlVIT0RJT05HJmVuY3J5cHRlZElkPUEwMDk3NTA2MUE5SU1QWFM5M1NITyZlbmNyeXB0ZWRBZElkPUEwNDY1MTgyMUJJU0JXUk1WUTcwSiZ3aWRnZXROYW1lPXNwX2RldGFpbCZhY3Rpb249Y2xpY2tSZWRpcmVjdCZkb05vdExvZ0NsaWNrPXRydWU%3D&tag=susanfowler-20). The best electronics textbook there is, period.\n- **Optics:** [Optics by Hecht](https://www.amazon.com/Optics-5th-Eugene-Hecht/dp/0133977226?_encoding=UTF8&language=en_US&linkCode=ll1&linkId=d38230d12a814b81abb8a8b5201ebb99&qid=1618965492&ref_=as_li_ss_tl&sr=1-1&tag=susanfowler-20). The classic optics textbook.\n- **Particle Physics:** [Quarks and Leptons by Halzen and Martin](https://www.amazon.com/Quarks-Leptons-Introductory-Particle-Physics/dp/0471887412?dchild=1&keywords=martin%20particle%20physics&language=en_US&linkCode=ll1&linkId=6f72bd02a7aa2a2d8ecc89ebc34116f9&qid=1618981557&ref_=as_li_ss_tl&s=library&sr=1-5&tag=susanfowler-20). Wonderful overview that’s fun to read and work through. Supplement this with [Modern Particle Physics by Mark Thomson](https://www.amazon.com/Modern-Particle-Physics-Mark-Thomson/dp/1107034264?dchild=1&keywords=particle%20physics&language=en_US&linkCode=ll1&linkId=1808f5c36867403219c827ea03e498ff&qid=1618982150&ref_=as_li_ss_tl&s=library&sr=1-5&tag=susanfowler-20), which is up-to-date on contemporary discoveries like the Higgs.\n- **Quantum Computing**:[Quantum Computation and Quantum Information by Michael A. Nielsen and Isaac L. Chuang](https://www.amazon.com/Quantum-Computation-Information-10th-Anniversary/dp/1107002176?dchild=1&keywords=quantum%20computing&language=en_US&linkCode=ll1&linkId=6071735407ef7522e21c19395a51322e&qid=1618965299&ref_=as_li_ss_tl&s=library&sr=1-30&tag=susanfowler-20). Also known as “Mike and Ike,” this is _the_ standard introduction to quantum information and computation.\n- **Solid-State Physics:** [Solid-State Physics by Ashcroft and Mermin](https://www.amazon.com/Solid-State-Physics-Neil-Ashcroft/dp/8131500527?crid=2S8RO77XRYDXS&dchild=1&keywords=ashcroft%20and%20mermin%20solid%20state%20physics&language=en_US&linkCode=ll1&linkId=ed543039975467b23595195e55fcdaaf&qid=1618977068&ref_=as_li_ss_tl&sprefix=ashcroft%20and%20mer%2Cdigital-text%2C222&sr=8-1&tag=susanfowler-20). The classic introductory solid-state textbook. Supplement with [Introduction to Solid State Physics by Kittel](https://www.amazon.com/Introduction-Solid-Physics-Charles-Kittel/dp/047141526X?crid=2ZLUATKWBISXC&dchild=1&keywords=kittel%20solid%20state%20physics&language=en_US&linkCode=ll1&linkId=9dc5ed44fcbf10f4ea8624a12feddbfc&qid=1619025990&ref_=as_li_ss_tl&s=library&sprefix=kittel%20%2Cstripibrary%2C227&sr=1-1&tag=susanfowler-20).\n- **String Theory:** [String Theory: Volume 1, An Introduction to the Bosonic String](https://www.amazon.com/gp/product/B00AKE1RLW?language=en_US&linkCode=ll1&linkId=f9dfb7bf40a0d71fa3fdd619c5ba240c&ref_=as_li_ss_tl&storeType=eibrary&tag=susanfowler-20) and [String Theory: Volume 2, Superstring Theory and Beyond](https://www.amazon.com/gp/product/B00AKE1ROO?language=en_US&linkCode=ll1&linkId=bd5385577fe6167771edf2b3f216950b&ref_=as_li_ss_tl&storeType=eibrary&tag=susanfowler-20), by the late [Joe Polchinski](https://www.quantamagazine.org/joe-polchinski-physicist-who-developed-deep-ideas-and-paradoxes-dies-at-63-20180220/); and [String Theory and M-Theory: A Modern Introduction](https://www.amazon.com/String-Theory-M-Theory-Modern-Introduction-ebook/dp/B00AKE1SA2?language=en_US&linkCode=ll1&linkId=cf6cb87bcf439b832507b213cb1c3625&pd_rd_i=B00AKE1SA2&pd_rd_r=2f8b30eb-52e9-4d68-be57-85266802700e&pd_rd_w=nnUNY&pd_rd_wg=OznzN&pf_rd_p=78971f67-4c78-4f07-b5c1-ee9acd72068c&pf_rd_r=XSE51QVTY28WEJEM35GP&psc=1&ref_=as_li_ss_tl&tag=susanfowler-20). I found it really enjoyable to pair Polchinski’s library with Becker Becker Schwarz when I was learning string theory — they complement each other well.",
    "tocData": [
      {
        "title": "پیشگفتار",
        "url": "#پیشگفتار",
        "items": []
      },
      {
        "title": "فیزیک چیست؟ کلیدی برای درک جهان",
        "url": "#فیزیک-چیست-کلیدی-برای-درک-جهان",
        "items": []
      },
      {
        "title": "مکانیک کلاسیک: حرکت اجسام، از پرتاب یک توپ تا مدار ماه.",
        "url": "#مکانیک-کلاسیک-حرکت-اجسام-از-پرتاب-یک-توپ-تا-مدار-ماه",
        "items": []
      },
      {
        "title": "چالش‌های یادگیری فیزیک",
        "url": "#چالشهای-یادگیری-فیزیک",
        "items": []
      },
      {
        "title": "معرفی دوره‌های سوزان ریگتی",
        "url": "#معرفی-دورههای-سوزان-ریگتی",
        "items": []
      },
      {
        "title": "Before You Begin",
        "url": "#before-you-begin",
        "items": [
          {
            "title": "undefinedPopular library on Physics",
            "url": "#popular-library-on-physics",
            "items": []
          },
          {
            "title": "undefinedMathematical and Scientific Preliminaries",
            "url": "#mathematical-and-scientific-preliminaries",
            "items": []
          },
          {
            "title": "undefinedHow to Study",
            "url": "#how-to-study",
            "items": []
          }
        ]
      },
      {
        "title": "undefinedUndergraduate Physics",
        "url": "#undergraduate-physics",
        "items": [
          {
            "title": "undefinedOverview",
            "url": "#overview",
            "items": []
          },
          {
            "title": "undefined1. Introduction to Mechanics",
            "url": "#1-introduction-to-mechanics",
            "items": []
          },
          {
            "title": "undefined2. Electrostatics",
            "url": "#2-electrostatics",
            "items": []
          },
          {
            "title": "undefined3. Waves and Vibrations",
            "url": "#3-waves-and-vibrations",
            "items": []
          },
          {
            "title": "undefined4. Modern Physics",
            "url": "#4-modern-physics",
            "items": []
          },
          {
            "title": "undefined5. Classical Mechanics",
            "url": "#5-classical-mechanics",
            "items": []
          },
          {
            "title": "undefined6. Electrodynamics",
            "url": "#6-electrodynamics",
            "items": []
          },
          {
            "title": "undefined7. Quantum Mechanics",
            "url": "#7-quantum-mechanics",
            "items": []
          },
          {
            "title": "undefined8. Thermodynamics and Statistical Mechanics",
            "url": "#8-thermodynamics-and-statistical-mechanics",
            "items": []
          },
          {
            "title": "undefined9. Undergraduate Electives",
            "url": "#9-undergraduate-electives",
            "items": []
          },
          {
            "title": "undefinedGraduate Physics",
            "url": "#graduate-physics",
            "items": []
          },
          {
            "title": "undefinedOverview",
            "url": "#overview-1",
            "items": []
          },
          {
            "title": "undefined1. Mathematical Methods in Physics",
            "url": "#1-mathematical-methods-in-physics",
            "items": []
          },
          {
            "title": "undefined2. Graduate Electrodynamics",
            "url": "#2-graduate-electrodynamics",
            "items": []
          },
          {
            "title": "undefined3. Graduate Quantum Mechanics",
            "url": "#3-graduate-quantum-mechanics",
            "items": []
          },
          {
            "title": "undefined4. Graduate Statistical Mechanics",
            "url": "#4-graduate-statistical-mechanics",
            "items": []
          },
          {
            "title": "undefined5. General Relativity",
            "url": "#5-general-relativity",
            "items": []
          },
          {
            "title": "undefined6. Quantum Field Theory",
            "url": "#6-quantum-field-theory",
            "items": []
          },
          {
            "title": "undefined7. Graduate Electives",
            "url": "#7-graduate-electives",
            "items": []
          }
        ]
      }
    ],
    "type": "page"
  },
  {
    "title": "اولین برخورد با پادماده",
    "thumbnail": "content/positrondiscovery.webp",
    "description": "فیزیک ذرات پر از شگفتی‌هایی است که درک ما از جهان را دگرگون کرده‌اند. یکی از این شگفتی‌ها پوزیترون است، پادذره‌ای که همزاد الکترون اما با بار مثبت است. کشف این ذره در سال 1932 نه‌تنها دریچه‌ای به دنیای پادماده گشود، بلکه به ما نشان داد که انرژی و ماده چگونه در هم تنیده‌اند. این یادداشت شما را به سفری در دنیای پوزیترون می‌بره: از لحظه کشفش تا کاربردهای امروزی‌اش. بیایید این ذره شگفت‌انگیز رو کشف کنیم و ببینیم چرا هنوز هم دانشمندان رو مجذوب خودش می‌کنه.",
    "date": "2023-02-05T12:29:12.649Z",
    "cat": "notes",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/the-positron",
    "body": "## پوزیترون: پادذره‌ای که جهان را روشن کرد\n\nفیزیک ذرات پر از شگفتی‌هایی است که درک ما از جهان را دگرگون کرده‌اند. یکی از این شگفتی‌ها **پوزیترون** است، پادذره‌ای که همزاد الکترون اما با بار مثبت است. کشف این ذره در سال 1932 نه‌تنها دریچه‌ای به دنیای پادماده گشود، بلکه به ما نشان داد که انرژی و ماده چگونه در هم تنیده‌اند. این یادداشت شما را به سفری در دنیای پوزیترون می‌بره: از لحظه کشفش تا کاربردهای امروزی‌اش. بیایید این ذره شگفت‌انگیز رو کشف کنیم و ببینیم چرا هنوز هم دانشمندان رو مجذوب خودش می‌کنه.\n\n## کشف پوزیترون: لحظه‌ای تاریخی\n\nدر سال 1932، کارل اندرسون، فیزیک‌دان آمریکایی، در آزمایش‌هایش با **اتاقک ابر ویلسون** شواهدی از ذره‌ای عجیب پیدا کرد. این ذره، که بعدها **پوزیترون** نام گرفت، جرمی برابر با الکترون داشت اما بار الکتریکی مثبتش باعث می‌شد در میدان مغناطیسی به جهت مخالف خمیده بشه. این کشف، که جایزه نوبل فیزیک 1936 رو برای اندرسون به ارمغان آورد، اولین تأیید تجربی وجود پادماده بود و پیش‌بینی‌های نظری پل دیراک در مکانیک کوانتوم رو به واقعیت تبدیل کرد.\n\nمثال عملی: تصور کنید پرتوهای کیهانی رو ردیابی می‌کنید. رد پوزیترون در اتاقک ابر مثل یه امضای منحصربه‌فرد بود که نشون می‌داد چیزی فراتر از الکترون‌های معمولی وجود داره.\n\n## ویژگی‌ها و تولید پوزیترون\n\nپوزیترون ذره‌ای بنیادی با جرم تقریبی 9.11×10⁻³¹ کیلوگرم (مشابه الکترون) و بار الکتریکی +1.6×10⁻¹⁹ کولن است. این ذره به روش‌های مختلفی تولید می‌شه:\n\n- **پرتوزایی بتا مثبت**: در هسته‌های ناپایدار، پروتون به نوترون تبدیل می‌شه و پوزیترون آزاد می‌کنه (مثل در ایزوتوپ کربن-11).\n- **تولید جفت**: وقتی پرتوهای گاما با انرژی بالا (بیش از 1.022 MeV) به هسته اتم برخورد می‌کنن، جفت الکترون-پوزیترون تشکیل می‌شه.\n- **شتاب‌دهنده‌های ذرات**: در آزمایشگاه‌هایی مثل CERN، پوزیترون‌ها برای مطالعه ذرات تولید می‌شن.\n\nمثال عملی: تو یه آزمایشگاه، پرتو گاما به یه صفحه سربی تابیده می‌شه و ناگهان الکترون و پوزیترون ظاهر می‌شن، انگار انرژی به ماده زنده شده!\n\n## واکنش‌های پوزیترونی: رقص ماده و پادماده\n\nیکی از ویژگی‌های خیره‌کننده پوزیترون، رفتارش در برخورد با الکترونه. وقتی پوزیترون و الکترون به هم می‌رسن، طی فرایندی به نام **نابودی الکترون-پوزیترون**، هر دو ذره از بین می‌رن و جرمشون به انرژی خالص تبدیل می‌شه. نتیجه؟ دو فوتون گاما با انرژی 511 keV که در جهت‌های مخالف منتشر می‌شن. این فرایند، که دقیقاً با معادله انیشتین **E=mc²** توضیح داده می‌شه، یکی از زیباترین نمایش‌های تبدیل ماده به انرژیه.\n\nمثال عملی: تو دستگاه‌های PET اسکن پزشکی، نابودی پوزیترون-الکترون فوتون‌هایی تولید می‌کنه که برای تصویربرداری از بدن استفاده می‌شن.\n\n## ناپایداری پوزیترون: چرا کمیاب است؟\n\nپوزیترون روی زمین به‌صورت طبیعی پایدار نیست. به محض اینکه با یه الکترون برخورد کنه (که تو محیط ما فراوانه)، نابود می‌شه و به تابش الکترومغناطیسی تبدیل می‌شه. به همین دلیل، پادماده مثل پوزیترون تو دنیای روزمره ما کمیابه و فقط تو فرایندهای خاص (مثل پرتوزایی یا انفجارهای کیهانی) دیده می‌شه. این ناپایداری نشون می‌ده چرا جهان ما بیشتر از ماده ساخته شده و پادماده نقش کوچیکی توش داره.\n\n## کاربردهای عملی پوزیترون\n\nپوزیترون فقط یه کنجکاوی علمی نیست؛ کاربردهای واقعی و مهمی داره:\n\n- **پزشکی**: تو **توموگرافی گسیل پوزیترون (PET)**، پوزیترون‌ها برای تشخیص سرطان و بیماری‌های مغزی استفاده می‌شن.\n- **کیهان‌شناسی**: مطالعه پوزیترون‌های کیهانی (مثل اونایی که تلسکوپ Fermi رصد می‌کنه) به درک ماده تاریک و انفجارهای ابرنواختری کمک می‌کنه.\n- **فیزیک بنیادی**: آزمایش‌هایی مثل ALPHA در CERN از پوزیترون برای مطالعه پادماده و تقارن ماده-پادماده استفاده می‌کنن.\n\nمثال عملی: تو بیمارستان، PET اسکن با ردیابی فوتون‌های ناشی از نابودی پوزیترون، تومورها رو با دقت پیدا می‌کنه و جان آدما رو نجات می‌ده.\n\n## منابع و مطالعه بیشتر\n\nبرای اطلاعات بیشتر، این منابع رو پیشنهاد می‌کنم:\n\n- **ویکی‌پدیا**: [پوزیترون](https://en.wikipedia.org/wiki/Positron) (برای جزئیات پایه)\n- **CERN**: مقالات درباره پادماده و آزمایش‌های پوزیترون\n- **Scientific American**: مطالب عمومی درباره پادماده\n\nانجمن‌های آنلاین مثل Physics Stack Exchange هم برای بحث و پرس‌وجو عالی‌ان.\n\n## جمع‌بندی\n\nکشف پوزیترون نقطه عطفی تو تاریخ فیزیک بود که نه‌تنها وجود پادماده رو ثابت کرد، بلکه راه رو برای پیشرفت‌هایی تو پزشکی، کیهان‌شناسی و فیزیک بنیادی باز کرد. از لحظه‌ای که رد این ذره تو اتاقک ابر دیده شد تا کاربردهای امروزی‌اش تو PET اسکن، پوزیترون داستانی از شگفتی و علم رو روایت می‌کنه. آماده‌اید که بیشتر درباره اسرار کیهان کشف کنید؟ بیایید دست به کار بشیم و دنیای ذرات رو کاوش کنیم!",
    "tocData": [
      {
        "title": "پوزیترون: پادذره‌ای که جهان را روشن کرد",
        "url": "#پوزیترون-پادذرهای-که-جهان-را-روشن-کرد",
        "items": []
      },
      {
        "title": "کشف پوزیترون: لحظه‌ای تاریخی",
        "url": "#کشف-پوزیترون-لحظهای-تاریخی",
        "items": []
      },
      {
        "title": "ویژگی‌ها و تولید پوزیترون",
        "url": "#ویژگیها-و-تولید-پوزیترون",
        "items": []
      },
      {
        "title": "واکنش‌های پوزیترونی: رقص ماده و پادماده",
        "url": "#واکنشهای-پوزیترونی-رقص-ماده-و-پادماده",
        "items": []
      },
      {
        "title": "ناپایداری پوزیترون: چرا کمیاب است؟",
        "url": "#ناپایداری-پوزیترون-چرا-کمیاب-است",
        "items": []
      },
      {
        "title": "کاربردهای عملی پوزیترون",
        "url": "#کاربردهای-عملی-پوزیترون",
        "items": []
      },
      {
        "title": "منابع و مطالعه بیشتر",
        "url": "#منابع-و-مطالعه-بیشتر",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "راهنمای عملی کار با داده‌های گراف",
    "thumbnail": "content/The-Practitioners-Guide-To-Graph-Data.webp",
    "description": "در دنیایی که داده‌ها با سرعتی بی‌سابقه رشد می‌کنند، درک روابط بین آن‌ها به چالشی بزرگ تبدیل شده است. داده‌های گرافی، با مدل‌سازی ارتباطات به‌صورت گره‌ها و یال‌ها، راه‌حلی قدرتمند برای تحلیل الگوهای پیچیده ارائه می‌دهند. کتاب The Practitioner's Guide to Graph Data، نوشته دنیس گوسول و امی هودر و منتشرشده توسط O’Reilly در سال 2020، راهنمایی جامع برای استفاده از گراف‌ها در حل مسائل واقعی است. این کتاب از مفاهیم پایه تا کاربردهای پیشرفته را پوشش می‌دهد و شما را برای تحلیل هوشمندانه داده‌ها آماده می‌کند. بیایید دنیای گراف‌ها رو کشف کنیم و ببینیم چرا این کتاب یک منبع ضروری برای متخصصان داده است.",
    "date": "2021-10-11T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/the-practitioner-s-guide-to-graph-data",
    "body": "## بررسی کتاب The Practitioner's Guide to Graph Data: کلید تحلیل روابط پیچیده\n\nدر دنیایی که داده‌ها با سرعتی بی‌سابقه رشد می‌کنند، درک روابط بین آن‌ها به چالشی بزرگ تبدیل شده است. **داده‌های گرافی**، با مدل‌سازی ارتباطات به‌صورت گره‌ها و یال‌ها، راه‌حلی قدرتمند برای تحلیل الگوهای پیچیده ارائه می‌دهند. کتاب **The Practitioner's Guide to Graph Data**، نوشته دنیس گوسول و امی هودر و منتشرشده توسط O’Reilly در سال 2020، راهنمایی جامع برای استفاده از گراف‌ها در حل مسائل واقعی است. این کتاب از مفاهیم پایه تا کاربردهای پیشرفته را پوشش می‌دهد و شما را برای تحلیل هوشمندانه داده‌ها آماده می‌کند. بیایید دنیای گراف‌ها رو کشف کنیم و ببینیم چرا این کتاب یک منبع ضروری برای متخصصان داده است.\n\n## داده‌های گرافی چیستند؟ دریچه‌ای به روابط\n\n**داده‌های گرافی** روشی برای مدل‌سازی داده‌ها هستند که بر روابط بین موجودیت‌ها تمرکز دارند. برخلاف پایگاه‌های داده سنتی که داده‌ها را در جداول ذخیره می‌کنند، گراف‌ها از گره‌ها (موجودیت‌ها) و یال‌ها (روابط) برای نمایش ارتباطات استفاده می‌کنند. این رویکرد، که با ابزارهایی مثل Neo4j و Amazon Neptune تقویت شده، در حوزه‌های متنوعی کاربرد دارد. ویژگی‌های کلیدی داده‌های گرافی شامل:\n\n- **تحلیل روابط پیچیده**: مثل شناسایی گروه‌های اجتماعی در فیسبوک.\n- **انعطاف‌پذیری**: مدل‌سازی داده‌های پویا بدون نیاز به طرح‌ریزی ثابت.\n- **عملکرد بالا**: اجرای پرس‌وجوهای رابطه‌ای با سرعت زیاد.\n- **کاربرد گسترده**: از کشف تقلب در بانک‌ها تا پیشنهاد محتوا در نتفلیکس.\n\nمثال عملی: فرض کنید می‌خواهید تقلب مالی رو شناسایی کنید. با یه گراف، می‌تونید تراکنش‌های مشکوک رو به‌عنوان الگوهای غیرعادی در شبکه‌ای از حساب‌ها پیدا کنید، کاری که با جداول سنتی خیلی سخت‌تره.\n\n## درباره کتاب The Practitioner's Guide to Graph Data\n\nکتاب **The Practitioner's Guide to Graph Data** راهنمایی عملی برای یادگیری و استفاده از داده‌های گرافی در پروژه‌های واقعی است. این کتاب با ترکیب نظریه گراف، کدنویسی و مثال‌های کاربردی، توسعه‌دهندگان و دانشمندان داده رو از مفاهیم اولیه تا طراحی سیستم‌های پیچیده هدایت می‌کنه. محتوای آن برای دنیای واقعی طراحی شده و به شما کمک می‌کنه تا با تفکر گرافی، مسائل رو به شیوه‌ای جدید حل کنید.\n\n### چرا این کتاب؟\n\nاین کتاب به دلیل رویکرد پروژه‌محور و تمرکز بر کاربردهای عملی برجسته است. ویژگی‌های اصلی آن شامل:\n\n- **آموزش جامع**: از پایه‌های نظریه گراف تا الگوریتم‌های پیشرفته.\n- **پروژه‌های واقعی**: ساخت اپلیکیشن‌هایی مثل سیستم‌های توصیه‌گر و تحلیل شبکه.\n- **پوشش ابزارهای مدرن**: معرفی پایگاه‌های داده گرافی مثل Neo4j و Gremlin.\n- **تمرکز بر بهینه‌سازی**: تکنیک‌هایی برای بهبود پرس‌وجوها و مقیاس‌پذیری.\n\nمثال عملی: کتاب به شما نشون می‌ده چطور یه سیستم توصیه‌گر شبیه نتفلیکس بسازید که با تحلیل گراف تعاملات کاربر، فیلم‌های مرتبط رو پیشنهاد بده.\n\n### مباحث کلیدی کتاب\n\nکتاب به دوازده فصل تقسیم شده که هر یک جنبه‌ای از داده‌های گرافی رو پوشش می‌ده:\n\n1. **مقدمه‌ای بر تفکر گرافی**: اصول پایه و کاربردهای تحلیل گرافی.\n2. **مفاهیم پایه داده‌های گراف**: مدل‌سازی گره‌ها، یال‌ها و روابط.\n3. **کاربرد گراف در تحلیل مشتریان**: ساخت اپلیکیشن بانکی با داده‌های گرافی.\n4. **مدیریت داده‌های سلسله‌مراتبی**: تحلیل ساختارهای پیچیده در مخابرات.\n5. **الگوریتم‌های مسیریابی در گراف**: یافتن مسیرهای بهینه در شبکه‌ها.\n6. **فیلترینگ مشارکتی و توصیه‌گرها**: طراحی سیستم‌های پیشنهاد محتوا.\n\n### برای چه کسانی مناسب است؟\n\nاین کتاب برای گروه‌های زیر ایده‌آل است:\n\n- **مهندسان داده**: که می‌خوان پایگاه‌های داده گرافی طراحی کنن.\n- **دانشمندان داده**: که به تحلیل الگوهای رابطه‌ای علاقه دارن.\n- **معماران سیستم**: که به دنبال راه‌حل‌های مقیاس‌پذیر هستن.\n- **متخصصان علوم کامپیوتر**: که می‌خوان نظریه گراف رو عملی یاد بگیرن.\n\nآشنایی اولیه با برنامه‌نویسی (مثل پایتون یا جاوا) و مفاهیم پایگاه داده مفیده، اما کتاب مفاهیم رو ساده توضیح می‌ده.\n\n## فهرست مطالب\n\n### بخش 1: مفاهیم پایه\n\n- فصل 1: مقدمه‌ای بر تفکر گرافی\n- فصل 2: ساختارهای گراف و مدل‌سازی داده\n- فصل 3: انواع گره‌ها و یال‌ها\n\n### بخش 2: کاربردهای عملی\n\n- فصل 4: تحلیل مشتریان با گراف (اپلیکیشن بانکی)\n- فصل 5: الگوهای تعامل کاربران\n- فصل 6: مدیریت داده‌های سلسله‌مراتبی (مخابرات)\n- فصل 7: تحلیل ساختارهای پیچیده\n\n### بخش 3: الگوریتم‌ها و سیستم‌ها\n\n- فصل 8: الگوریتم‌های مسیریابی در گراف\n- فصل 9: بهینه‌سازی شبکه‌های اجتماعی\n- فصل 10: فیلترینگ مشارکتی\n- فصل 11: طراحی سیستم‌های توصیه‌گر\n- فصل 12: مقیاس‌پذیری و بهینه‌سازی پرس‌وجو\n\n## کاربردهای عملی داده‌های گرافی\n\nداده‌های گرافی در دنیای واقعی تأثیرات بزرگی دارند:\n\n- **شبکه‌های اجتماعی**: تحلیل ارتباطات و گروه‌ها، مثل الگوریتم‌های فیسبوک.\n- **کشف تقلب**: شناسایی تراکنش‌های غیرعادی در بانک‌ها.\n- **سیستم‌های توصیه‌گر**: پیشنهاد محصولات در آمازون یا فیلم در نتفلیکس.\n- **مدیریت زنجیره تأمین**: بهینه‌سازی مسیرهای لجستیک.\n\nکتاب با آموزش این کاربردها، شما رو برای حل مسائل پیچیده آماده می‌کنه.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **O’Reilly**: [The Practitioner's Guide to Graph Data](https://www.oreilly.com/library/view/the-practitioners-guide/9781492044062/)\n\n## جمع‌بندی\n\n**The Practitioner's Guide to Graph Data** یک راهنمای ضروری برای هرکسی است که می‌خواد روابط پیچیده داده‌ها رو تحلیل کنه. این کتاب با آموزش‌های عملی و پروژه‌های واقعی، شما رو از مفاهیم اولیه گراف تا طراحی سیستم‌های پیشرفته هدایت می‌کنه. اگر آماده‌اید داده‌ها رو از زاویه‌ای جدید ببینید و تصمیم‌های هوشمندانه‌تری بگیرید، این کتاب نقطه شروع شماست. بیایید دنیای گراف‌ها رو کشف کنیم و مسائل رو به شیوه‌ای نو حل کنیم!",
    "tocData": [
      {
        "title": "بررسی کتاب The Practitioner's Guide to Graph Data: کلید تحلیل روابط پیچیده",
        "url": "#بررسی-کتاب-the-practitioners-guide-to-graph-data-کلید-تحلیل-روابط-پیچیده",
        "items": []
      },
      {
        "title": "داده‌های گرافی چیستند؟ دریچه‌ای به روابط",
        "url": "#دادههای-گرافی-چیستند-دریچهای-به-روابط",
        "items": []
      },
      {
        "title": "درباره کتاب The Practitioner's Guide to Graph Data",
        "url": "#درباره-کتاب-the-practitioners-guide-to-graph-data",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مباحث کلیدی کتاب",
            "url": "#مباحث-کلیدی-کتاب",
            "items": []
          },
          {
            "title": "برای چه کسانی مناسب است؟",
            "url": "#برای-چه-کسانی-مناسب-است",
            "items": []
          }
        ]
      },
      {
        "title": "فهرست مطالب",
        "url": "#فهرست-مطالب",
        "items": [
          {
            "title": "بخش 1: مفاهیم پایه",
            "url": "#بخش-1-مفاهیم-پایه",
            "items": []
          },
          {
            "title": "بخش 2: کاربردهای عملی",
            "url": "#بخش-2-کاربردهای-عملی",
            "items": []
          },
          {
            "title": "بخش 3: الگوریتم‌ها و سیستم‌ها",
            "url": "#بخش-3-الگوریتمها-و-سیستمها",
            "items": []
          }
        ]
      },
      {
        "title": "کاربردهای عملی داده‌های گرافی",
        "url": "#کاربردهای-عملی-دادههای-گرافی",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "تام بامبادیل",
    "thumbnail": "content/tom-bombadil-and-goldberry.webp",
    "description": "تام بامبادیل یکی از شخصیت‌های اسرارآمیز در دنیای تالکین است. او در جلد اول سه‌گانه‌ی ارباب حلقه‌ها معرفی می‌شود و به نظر می‌رسد که قدرت حلقه‌ی یگانه بر او اثری ندارد. همراه با همسرش، گلدبری، در ویتی‌ویندل زندگی می‌کند و به عنوان ارباب درختان، آب‌ها و تپه‌ها شناخته می‌شود.",
    "date": "2021-09-11T16:33:46.294Z",
    "cat": "library",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/tom-bombadil-and-goldberry",
    "body": "## تام بامبادیل: راز جنگل کهن در دنیای تالکین\n\nدر میان صفحات **ارباب حلقه‌ها**، شخصیتی وجود دارد که مثل نسیمی مرموز، خوانندگان را به شگفتی وا می‌دارد: **تام بامبادیل**. این موجود اسرارآمیز، که در **جنگل کهن** ساکن است، نه‌تنها یکی از عجیب‌ترین خلق‌های **جی.آر.آر. تالکین** به شمار می‌رود، بلکه پرسش‌هایی عمیق درباره ماهیت قدرت، طبیعت و جاودانگی در ذهن طرفدارانش برانگیخته است. کتاب **The Adventures of Tom Bombadil and Other Verses from the Red Book**، که مجموعه‌ای از اشعار و داستان‌های مرتبط با اوست، دریچه‌ای به دنیای این شخصیت باز می‌کند. بیایید به جنگل کهن سفر کنیم و رازهای تام بامبادیل رو کشف کنیم.\n\n## تام بامبادیل کیست؟ نگهبان طبیعت\n\nتام بامبادیل در جلد اول **ارباب حلقه‌ها**، یعنی **یاران حلقه**، به‌عنوان میزبانی غیرمنتظره برای **فرودو**، **سم**، **مری** و **پی‌پین** ظاهر می‌شود. او در منطقه **ویتی‌ویندل**، در خانه‌ای ساده اما جادویی، همراه با همسرش **گلدبری**، معروف به دختر رودخانه، زندگی می‌کند. تام با ریش بلند، کلاه آبی و چکمه‌های زرد، ظاهری شاد و بی‌تکلف داره، اما زیر این سادگی، قدرتی عظیم نهفته است. نکته‌ای که او رو متمایز می‌کنه، اینه که **حلقه یگانه**، نیرویی که حتی گندالف و گالادریل رو وسوسه می‌کنه، هیچ تأثیری برش نداره.\n\nتالکین او رو **ارباب درختان، آب‌ها و تپه‌ها** توصیف می‌کنه، موجودی که انگار از آغاز جهان وجود داشته و با طبیعت پیوندی عمیق داره. طرفداران نظریه‌های مختلفی درباره ماهیتش دارن: آیا او یکی از **مایار** (ارواح الهی) است؟ یا تجسمی از خود طبیعت؟ شاید هم خالق دنیای **آردا**، **ایلوواتار**، در قالبی زمینی؟ تالکین هرگز پاسخ روشنی نداد و این راز، تام رو جذاب‌تر کرده.\n\nمثال عملی: وقتی تام با آوازش **اولد من ویلو**، درخت شرور، رو رام می‌کنه، انگار طبیعت به فرمانش گوش می‌ده، مثل یه رهبر ارکستر که جنگل رو هدایت می‌کنه.\n\n## ویژگی‌ها و نقش تام بامبادیل\n\nتام بامبادیل شخصیتی چندلایه است:\n\n- **قدرت بی‌حد**: او با آواز و کلماتش می‌تونه موجودات شرور مثل **روح بارو-وایت** رو شکست بده، اما این قدرت رو فقط در قلمروش به کار می‌بره.\n- **بی‌تفاوتی به قدرت**: حلقه یگانه براش مثل یه اسباب‌بازی بی‌ارزشه، نشون‌دهنده استقلال و خلوصش.\n- **پیوند با طبیعت**: ارتباطش با گلدبری و جنگل کهن، او رو به نگهبانی برای محیط زیست تبدیل کرده.\n- **دانش باستانی**: داستان‌هایی که برای هابیت‌ها تعریف می‌کنه، انگار حافظه‌ای از دوران اولیه آردا رو بازگو می‌کنه.\n\nنقش تام تو داستان، هرچند کوتاه، عمیقه. او به هابیت‌ها پناه می‌ده، اونا رو از خطر نجات می‌ده و به‌شون یادآوری می‌کنه که دنیا بزرگ‌تر از جنگ برای حلقه است. اما چرا تالکین همچین شخصیتی خلق کرد؟ شاید برای نشون دادن نیرویی خالص و بی‌طرف که فراتر از خیر و شر عمل می‌کنه.\n\n## داستان‌های مرتبط با تام بامبادیل\n\nتام بامبادیل در چند ماجرای کلیدی درخشیده:\n\n1. **ملاقات با گلدبری**: عشق تام و گلدبری، داستانی شاعرانه از پیوند با طبیعت، مثل رقص رودخانه و جنگله.\n2. **درگیری با اولد من ویلو**: وقتی درخت شرور هابیت‌ها رو زندانی می‌کنه، تام با آوازش اونا رو آزاد می‌کنه.\n3. **برخورد با بجر-فولک**: موجودات گورکن‌مانند که تام با شوخ‌طبعی باهاشون روبه‌رو می‌شه.\n4. **مبارزه با روح بارو-وایت**: تام روح شبح‌مانند تپه‌ها رو شکست می‌ده و گنجینه‌ای باستانی رو برای هابیت‌ها آشکار می‌کنه.\n\nاین داستان‌ها، که بخشی‌شون تو **ارباب حلقه‌ها** و بخشی تو **ماجراهای تام بامبادیل** روایت شدن، تام رو به‌عنوان شخصیتی چندبُعدی نشون می‌دن: شاد، قدرتمند و مرموز.\n\n## درباره کتاب The Adventures of Tom Bombadil\n\nکتاب **The Adventures of Tom Bombadil and Other Verses from the Red Book**، منتشرشده در سال 1962، مجموعه‌ای از اشعار و داستان‌های کوتاهه که تالکین اون رو به‌عنوان بخشی از افسانه‌های **سرزمین میانه** ارائه کرد. این کتاب، که ظاهراً از **کتاب سرخ مرز غربی** (نوشته هابیت‌ها) گرفته شده، شامل شعرهایی درباره تام، گلدبری و دیگر موجودات سرزمین میانه است. هرچند سبک کتاب شاعرانه و گاهی طنزه، اما لایه‌های عمیقی از اساطیر تالکین رو نشون می‌ده.\n\n### چرا این کتاب؟\n\nاین کتاب به دلایل زیر خاصه:\n\n- **نگاهی تازه به تام**: داستان‌ها و اشعار، جنبه‌های کمتر دیده‌شده‌ای از تام رو نشون می‌دن.\n- **سبک شاعرانه**: ترکیبی از طنز، خیال و اسطوره که برای طرفداران تالکین جذابه.\n- **ارتباط با سرزمین میانه**: پلی بین **هابیت**، **ارباب حلقه‌ها** و **سیلماریلیون**.\n- **خوانش آسان**: مناسب برای همه سنین، از کودکان تا بزرگسالان.\n\nمثال عملی: شعر «ماجراهای تام بامبادیل» داستانی شاد از رویارویی تام با موجودات جنگل روایت می‌کنه که انگار یه قصه کودکانه است، اما پر از اشاره‌های اسطوره‌ایه.\n\n### مخاطبان کتاب\n\nاین کتاب برای گروه‌های زیر ایده‌آله:\n\n- **طرفداران تالکین**: که می‌خوان عمق بیشتری از سرزمین میانه کشف کنن.\n- **علاقه‌مندان به ادبیات فانتزی**: که از داستان‌های شاعرانه لذت می‌برن.\n- **خوانندگان عمومی**: که دنبال قصه‌های کوتاه و خیالی هستن.\n- **کودکان و والدین**: برای خواندن شعرهای طنزآمیز و جادویی.\n\nنیازی به دانش قبلی از دنیای تالکین نیست، چون اشعار به‌تنهایی هم لذت‌بخشن.\n\n## جایگاه تام در فرهنگ طرفداران\n\nتام بامبادیل بین طرفداران تالکین جایگاهی ویژه داره. هرچند تو اقتباس‌های سینمایی پیتر جکسون غایبه، اما تو کتاب‌ها و بحث‌های آنلاین (مثل Reddit و TheOneRing.net) موضوع گمانه‌زنی‌های داغه. بعضی‌ها او رو نمادی از طبیعت بکر می‌دونن، بعضی‌ها روحی الهی، و عده‌ای فقط دوستش دارن چون ساده و شاده! کتاب **ماجراهای تام بامبادیل** این علاقه رو تقویت می‌کنه و به طرفداران اجازه می‌ده بیشتر با این شخصیت مرموز ارتباط برقرار کنن.\n\n## منابع و دریافت کتاب\n\nکتاب از طریق منابع زیر قابل تهیه است:\n\n- **Amazon**: [The Adventures of Tom Bombadil](https://www.amazon.com/Adventures-Tom-Bombadil-Other-Verses/dp/B005XEQ3WM)\n\n## جمع‌بندی\n\nتام بامبادیل، با آوازهای شاد و قدرت مرموزش، یکی از جواهرات دنیای تالکینه. کتاب **The Adventures of Tom Bombadil**، با شعرها و داستان‌های جادوییش، شما رو به قلب جنگل کهن می‌بره و لحظه‌هایی از شگفتی و خنده هدیه می‌ده. اگر آماده‌اید با تام و گلدبری همراه بشید و قصه‌های سرزمین میانه رو از زاویه‌ای جدید ببینید، این کتاب منتظر شماست. بیایید به ویتی‌ویندل سفر کنیم و با تام بامبادیل آواز بخونیم!",
    "tocData": [
      {
        "title": "تام بامبادیل: راز جنگل کهن در دنیای تالکین",
        "url": "#تام-بامبادیل-راز-جنگل-کهن-در-دنیای-تالکین",
        "items": []
      },
      {
        "title": "تام بامبادیل کیست؟ نگهبان طبیعت",
        "url": "#تام-بامبادیل-کیست-نگهبان-طبیعت",
        "items": []
      },
      {
        "title": "ویژگی‌ها و نقش تام بامبادیل",
        "url": "#ویژگیها-و-نقش-تام-بامبادیل",
        "items": []
      },
      {
        "title": "داستان‌های مرتبط با تام بامبادیل",
        "url": "#داستانهای-مرتبط-با-تام-بامبادیل",
        "items": []
      },
      {
        "title": "درباره کتاب The Adventures of Tom Bombadil",
        "url": "#درباره-کتاب-the-adventures-of-tom-bombadil",
        "items": [
          {
            "title": "چرا این کتاب؟",
            "url": "#چرا-این-کتاب",
            "items": []
          },
          {
            "title": "مخاطبان کتاب",
            "url": "#مخاطبان-کتاب",
            "items": []
          }
        ]
      },
      {
        "title": "جایگاه تام در فرهنگ طرفداران",
        "url": "#جایگاه-تام-در-فرهنگ-طرفداران",
        "items": []
      },
      {
        "title": "منابع و دریافت کتاب",
        "url": "#منابع-و-دریافت-کتاب",
        "items": []
      },
      {
        "title": "جمع‌بندی",
        "url": "#جمعبندی",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "جم‌استک با کلودفلیر",
    "thumbnail": "content/jamstack-with-cloudflare-intro.png",
    "description": "توسعه ابزارهای تحت وب یکی از جذاب‌ترین و پیشروترین عرصه‌های فناوری است. تصور کنید اپلیکیشن‌هایی بسازید که با سرعت خیره‌کننده بارگذاری شوند، امنیتی نفوذناپذیر داشته باشند، به‌طور خودکار با هر میزان کاربر مقیاس‌پذیر شوند و همیشه به‌روز بمانند. این نه‌فقط مهارتی ارزشمند، بلکه سفری است که نوآوری شما را شکوفا می‌کند. در این دوره، شما را به مسیری هدفمند در دنیای Jamstack می‌برم تا با Cloudflare Pages، Nuxt.js و اکوسیستم سرورلس Cloudflare، یک ابزار وب فول‌استک حرفه‌ای خلق کنید.",
    "date": "2025-04-13",
    "cat": "tuts",
    "intro": true,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/jamstack-with-cloudflare",
    "body": "## ساخت ابزارهای وب با معماری Jamstack\n\nتوسعه ابزارهای تحت وب یکی از پویاترین و خلاقانه‌ترین حوزه‌های فناوری اطلاعات است. خلق اپلیکیشن‌هایی که سریع بارگذاری شوند، امنیت بالایی داشته باشند، به‌صورت خودکار مقیاس‌پذیر باشند و همیشه به‌روز بمانند، مهارتی است که هر توسعه‌دهنده‌ای را به وجد می‌آورد. در این دوره آموزشی، شما را به سفری نظام‌مند در دنیای **Jamstack** دعوت می‌کنم تا با استفاده از **Cloudflare Pages**، **Nuxt.js** و اکوسیستم سرورلس Cloudflare، قدم‌به‌قدم یک ابزار وب فول‌استک حرفه‌ای بسازید. هدف من تقویت دانش فنی و توانمندسازی شما برای خلق پروژه‌هایی است که در دنیای واقعی قابلیت خیره کننده ای داشته باشند.\n\n## تاریخچه وب: سفری از صفحات ساده تا Jamstack\n\nبرای درک اهمیت Jamstack، باید تکامل وب را مرور کنیم. داستان وب از دهه 1990 آغاز شد:\n\n- **وب 1.0 (دهه 1990)**: صفحات HTML استاتیک و CSS ابتدایی، مانند سایت‌های دانشگاهی یا دایرکتوری‌های آنلاین (مثل Yahoo Directory). این سایت‌ها ساده بودند اما فاقد تعاملات پویا.\n- **وب 2.0 (دهه 2000)**: ظهور AJAX و سرورهای پویا (مانند PHP و Ruby on Rails) امکان ساخت سایت‌های تعاملی مانند Google Maps را فراهم کرد. اما مدیریت سرورها پیچیده و پرهزینه بود.\n- **فریم‌ورک‌های مدرن (دهه 2010)**: ابزارهایی مثل React، Angular و Vue.js اپلیکیشن‌های تک‌صفحه‌ای (SPA) را معرفی کردند. با این حال، چالش‌های SEO و مقیاس‌پذیری باقی ماند.\n- **Jamstack (دهه 2020)**: با ترکیب محتوای استاتیک، CDNها و APIهای سرورلس، Jamstack سرعت، امنیت و سادگی را به وب آورد.\n\nجدول زمانی زیر این تکامل را خلاصه می‌کند:\n\n| دوره        | ویژگی‌ها                   | مثال‌ها             |\n| ----------- | -------------------------- | ------------------- |\n| وب 1.0      | HTML استاتیک، CSS ساده     | Yahoo Directory     |\n| وب 2.0      | AJAX، سرورهای پویا         | Google Maps، فیسبوک |\n| فریم‌ورک‌ها | SPA، رندرینگ سمت کلاینت    | Airbnb (React)      |\n| Jamstack    | محتوای استاتیک، CDN، APIها | وبلاگ‌های Netlify   |\n\nاین تکامل نشان می‌دهد که Jamstack نتیجه دهه‌ها نوآوری است. شرکت‌هایی مانند Netlify و Cloudflare با سرمایه‌گذاری روی این معماری، آن را به استانداردی نوظهور تبدیل کرده‌اند،\n\n## Jamstack چیست؟ معماری آینده وب\n\n**Jamstack**، مخفف **JavaScript**، **APIs** و **Markup**، رویکردی است که محتوای وب را به‌صورت پیش‌تولید‌شده ارائه می‌دهد و از APIها برای قابلیت‌های پویا استفاده می‌کند. برخلاف سیستم‌های سنتی مانند وردپرس که برای هر درخواست به سرور وابسته‌اند، Jamstack صفحات را در زمان ساخت آماده کرده و از طریق CDNها با سرعت بالا تحویل می‌دهد. این معماری توسعه‌دهندگان را از پیچیدگی‌های سرور آزاد می‌کند و بر عملکرد و خلاقیت تمرکز می‌کند.\n\n### ویژگی‌های کلیدی Jamstack\n\n1. **سرعت بی‌نظیر**: تولید فایل‌های استاتیک و توزیع آن‌ها از طریق CDN، زمان بارگذاری را به کسری از ثانیه می‌رساند، که تجربه کاربری و SEO را بهبود می‌بخشد.\n2. **امنیت بالا**: حذف سرورهای پویا سطح حمله را کاهش می‌دهد. فایل‌های استاتیک کد سمت سرور اجرا نمی‌کنند، بنابراین ریسک نفوذ کم است.\n3. **مقیاس‌پذیری خودکار**: CDNها ترافیک‌های عظیم را بدون نیاز به زیرساخت‌های گران مدیریت می‌کنند.\n4. **تجربه توسعه بهینه**: ابزارهای مدرن مانند فریم‌ورک‌های جاوااسکریپتی و CI/CD فرآیند توسعه را سریع و لذت‌بخش می‌کنند.\n\n### اجزای اصلی Jamstack\n\n- **JavaScript**: برای منطق پویا، مانند فرم‌های تعاملی یا انیمیشن‌ها.\n- **APIs**: اتصال به سرویس‌های خارجی، مانند Headless CMS، سیستم‌های پرداخت (Stripe) یا دیتابیس‌های سرورلس.\n- **Markup**: فایل‌های HTML و CSS، تولیدشده با ابزارهایی مانند Markdown یا CMSهای مدرن.\n\n### موارد استفاده Jamstack\n\nJamstack در سناریوهای متعددی قابلیت پیاده سازی دارد:\n\n- **وبلاگ‌ها و سایت‌های محتوایی**: سرعت بالا و SEO قوی .\n- **فروشگاه‌های آنلاین **: با APIهای پرداخت، تجربه‌ای سریع و امن ارائه می‌شود.\n- **پورتفولیوها و لندینگ‌پیج‌ها**: برای پروژه‌های حرفه‌ای اما ساده.\n\nبرای اپلیکیشن‌های بلادرنگ پیچیده (مانند چت گروهی)، ترکیب Jamstack با معماری‌های دیگر باید استفاده شود.\n\n### چالش‌های Jamstack و راه‌حل‌ها\n\n- **منحنی یادگیری**: مفاهیم پیش‌تولید و APIها برای تازه‌کارها ممکن است چالش‌برانگیز باشد. راه‌حل: استفاده از فریم‌ورک‌هایی مانند Nuxt.js که فرآیند را ساده می‌کنند.\n- **مدیریت محتوای پویا**: پروژه‌های با تغییرات مداوم نیاز به Headless CMS دارند. راه‌حل: ابزارهایی مانند Nuxt Content یا Contentful و حتی Wordpress این مشکل را حل می‌کنند.\n\nمن در این دوره با آموزش به صورت پروژه ای، قدم به قدم نحوه ی پیاده سازی چنین معماری را برای نیاز های مختلف بهتون آموزش میدم .\n\n## Cloudflare Pages: زیرساخت مدرن پروژه‌های Jamstack\n\n**Cloudflare Pages**، معرفی‌شده در سال 2021، پلتفرمی قدرتمند برای میزبانی پروژه‌های Jamstack است که از شبکه CDN جهانی Cloudflare بهره می‌برد. این سرویس سرعت، مقیاس‌پذیری و سادگی را ترکیب می‌کند تا توسعه‌دهندگان بتوانند بدون مدیریت سرور، پروژه‌های حرفه‌ای بسازند.\n\n### مزایای Cloudflare Pages\n\n1. **مقیاس‌پذیری خودکار**: از چند کاربر تا میلیون‌ها بازدیدکننده، عملکردی پایدار ارائه می‌دهد.\n2. **ادغام CI/CD**: اتصال به GitHub امکان ساخت و به روزرسانی خودکار را فراهم می‌کند.\n3. **پشتیبانی از قابلیت‌های پویا**: Cloudflare Workers امکان افزودن APIهای سفارشی را می‌دهد.\n4. **هزینه پایین**: نسخه رایگان برای پروژه‌های کوچک کافی است و پلن‌های پولی اقتصادی به صرفته ای را ارایه می دهد.\n\n### تجربه توسعه با Cloudflare\n\nCloudflare همیشه تمرکز بالایی را برای تجربه‌ی توسعه‌دهندگان ارائه داده است :\n\n- **CLI قدرتمند**: ابزار خط فرمان برای استقرار و مدیریت سریع پروژه‌ها.\n- **محیط‌های پیش‌نمایش**: برای هر تغییر، لینک پیش‌نمایش تولید می‌شود تا تست آسان‌تر شود.\n- **مستندات جامع**: مستندات Cloudflare با مثال‌های عملی، یادگیری را تسریع می‌کنند.\n- **پشتیبانی گسترده**: سازگاری با فریم‌ورک‌هایی مانند Nuxt.js و Gatsby.\n\n## اکوسیستم سرورلس Cloudflare\n\nCloudflare مجموعه‌ای از سرویس‌های سرورلس ارائه می‌دهد که برای پیاده سازی پروژه های Jamstack زیر ساخت قدرتمند و منعطفی را ارایه می کند:\n\n- **Cloudflare Workers**: اجرای کدهای جاوااسکریپت در Edge Networks برای APIها و منطق‌های بک‌اند.\n- **D1**: دیتابیس SQL سبک برای داده‌های رابطه‌ای.\n- **KV**: ذخیره‌سازی سریع داده‌های Key/Value.\n- **Durable Objects**: مدیریت حالت‌های Realtime در اپلیکیشن‌های تعاملی.\n- **Cloudflare AI**: ادغام مدل‌های هوش مصنوعی.\n- **Cloudflare Images**: بهینه‌سازی و تحویل تصاویر.\n- **Cloudflare Calls**: قابلیت‌های صوتی و ویدئویی.\n- **Cloudflare R2**: ذخیره‌سازی object storage ابری مقیاس‌پذیر با هزینه کم.\n- **Workers GPU** (در حال توسعه): برای پردازش‌های سنگین و ارایه Serverless GPU.\n\nاین ابزارها نیاز به سرورهای سنتی را حذف می‌کنند و انعطاف‌پذیری بالایی ارائه می‌دهند.\n\n## Vue.js و Nuxt.js: محیط کدنویسی\n\n**Vue.js** یک فریم‌ورک جاوااسکریپتی متن‌باز است که به دلیل سادگی و عملکرد بالا محبوبیت زیادی دارد. با سینتکس شهودی را خوانا و مستندات عالی، Vue برای پروژه‌های کوچک تا بزرگ مناسب است. ویژگی‌های کلیدی Vue شامل:\n\n- **یادگیری آسان**: سینتکس ساده حتی برای تازه‌کارها قابل فهم است.\n- **رندرینگ سریع**: Vue Virtual Dom سرعت و کارایی بالایی را برای پیاده سازی UI ارائه می‌دهد.\n- **اکوسیستم غنی**: ابزارهایی مانند Vue Router و Pinia و رنج وسیعی از پلاگین های کاربردی توسعه را تسریع می‌کنند.\n- **انعطاف‌پذیری**: پشتیبانی از SPA، SSR و SSG.\n\n**Nuxt.js**، ساخته‌شده بر پایه Vue.js، این قابلیت‌ها را با ابزارهای پیشرفته ترکیب می‌کند. Nuxt 4 که در این دوره استفاده می‌کنیم، برای Jamstack ایده‌آل است:\n\n- **رندرینگ چندگانه**: انتخاب بین SSG، SSR یا SPA.\n- **ادغام APIها**: ابزار `$fetch` و Nitro Server پیاده سازی و اتصال به Workers های کلود فلیر برای Serverless API را ساده می‌کند.\n- **ماژول‌های آماده**: از Nuxt Content تا Tailwind CSS.\n- **سازگاری با Cloudflare Pages**: تولید فایل‌های استاتیک و Cloudflare Pages Function Route برای استقرار راحت و بدون دردسر با اکوسیستم Cloudflare Pages .\n\n## پیش‌نیازهای فنی دوره\n\nبرای موفقیت در این دوره، آشنایی با موارد زیر لازم است:\n\n- **جاوااسکریپت (سطح متوسط)**: تسلط بر async/await، ماژول‌ها و آرایه‌ها. TypeScript.\n- **Git و GitHub**: مدیریت کد و استقرار با CI/CD.\n- **مفاهیم وب**: HTTP، REST APIها و CDNها.\n- **Vue.js (اختیاری)**: تجربه با Vue یا فریم‌ورک‌های مشابه.\n\nابزارهای مورد نیاز: Node.js (ورژن 18+)، npm/yarn و ویرایشگر کد (VS Code). ما همه‌چیز را قدم‌به‌قدم توضیح می‌دهم.\n\n## سرفصل‌های دوره\n\nاین دوره شما را از پایه تا خلق پروژه‌ای کامل هدایت می‌کند:\n\n1. **مقدمه و مفاهیم پایه**: معرفی Jamstack، Cloudflare Pages و Nuxt.js. بررسی تاریخچه وب و اهمیت این معماری. مهارت‌ها: درک مفاهیم Jamstack و آماده‌سازی محیط توسعه.\n2. **پیاده‌سازی وبلاگ استاتیک**: ساخت وبلاگ با Nuxt Content، Cloudflare Pages، Tailwind CSS و GitHub. تمرکز بر SEO، تولید محتوای استاتیک و استقرار خودکار. مهارت‌ها: کار با Nuxt Content، تنظیمات SEO و CI/CD.\n3. **سرور Nuxt و APIهای سرورلس**: ایجاد APIهای سرورلس با Cloudflare Workers و D1. پیاده‌سازی سیستم لاگین با JWT و سیستم عضویت و ورود به کمک پلاگین های Nuxt. مهارت‌ها: ساخت API، مدیریت احراز هویت و طراحی دیتابیس.\n4. **داشبورد با رندرینگ هیبریدی**: ساخت داشبورد تعاملی با مدیریت دسترسی‌ها. استفاده از رندرینگ هیبریدی Nuxt (SSG+SSR) برای عملکرد بهینه. مهارت‌ها: رندرینگ پیشرفته، سطوح دسترسی پیشرفته و طراحی UI.\n5. **جمع‌بندی و گام‌های بعدی**: تست پروژه، رفع اشکالات و پیشنهادهایی برای گسترش، مانند افزودن قابلیت‌های AI با Cloudflare AI. مهارت‌ها: دیباگ، مانیتورینگ و برنامه‌ریزی پروژه.\n\n## حرف آخر\n\nJamstack یک تغییر پارادایم در توسعه وب است که سرعت، امنیت و سادگی را به ارمغان می‌آورد. با Cloudflare Pages، Nuxt.js و Vue.js، شما می‌توانید پروژه‌هایی خلق کنید که در بازار مدرن برجسته باشند. این دوره مهارتی به شما می‌دهد که نه‌تنها کاربردی، بلکه الهام‌بخش است. آماده‌اید پروژه‌ای بسازید که همه را شگفت‌زده کند؟ بیایید دست به کار بشیم!",
    "tocData": [
      {
        "title": "ساخت ابزارهای وب با معماری Jamstack",
        "url": "#ساخت-ابزارهای-وب-با-معماری-jamstack",
        "items": []
      },
      {
        "title": "تاریخچه وب: سفری از صفحات ساده تا Jamstack",
        "url": "#تاریخچه-وب-سفری-از-صفحات-ساده-تا-jamstack",
        "items": []
      },
      {
        "title": "Jamstack چیست؟ معماری آینده وب",
        "url": "#jamstack-چیست-معماری-آینده-وب",
        "items": [
          {
            "title": "ویژگی‌های کلیدی Jamstack",
            "url": "#ویژگیهای-کلیدی-jamstack",
            "items": []
          },
          {
            "title": "اجزای اصلی Jamstack",
            "url": "#اجزای-اصلی-jamstack",
            "items": []
          },
          {
            "title": "موارد استفاده Jamstack",
            "url": "#موارد-استفاده-jamstack",
            "items": []
          },
          {
            "title": "چالش‌های Jamstack و راه‌حل‌ها",
            "url": "#چالشهای-jamstack-و-راهحلها",
            "items": []
          }
        ]
      },
      {
        "title": "Cloudflare Pages: زیرساخت مدرن پروژه‌های Jamstack",
        "url": "#cloudflare-pages-زیرساخت-مدرن-پروژههای-jamstack",
        "items": [
          {
            "title": "مزایای Cloudflare Pages",
            "url": "#مزایای-cloudflare-pages",
            "items": []
          },
          {
            "title": "تجربه توسعه با Cloudflare",
            "url": "#تجربه-توسعه-با-cloudflare",
            "items": []
          }
        ]
      },
      {
        "title": "اکوسیستم سرورلس Cloudflare",
        "url": "#اکوسیستم-سرورلس-cloudflare",
        "items": []
      },
      {
        "title": "Vue.js و Nuxt.js: محیط کدنویسی",
        "url": "#vuejs-و-nuxtjs-محیط-کدنویسی",
        "items": []
      },
      {
        "title": "پیش‌نیازهای فنی دوره",
        "url": "#پیشنیازهای-فنی-دوره",
        "items": []
      },
      {
        "title": "سرفصل‌های دوره",
        "url": "#سرفصلهای-دوره",
        "items": []
      },
      {
        "title": "حرف آخر",
        "url": "#حرف-آخر",
        "items": []
      }
    ],
    "type": "page"
  },
  {
    "title": "آشنایی با WASM",
    "thumbnail": "content/web-assembly-logo.png",
    "description": "وب‌اسمبلی (WebAssembly) یک استاندارد باز است که امکان اجرای کدهای باینری بهینه را در محیط‌های جاوا اسکریپت فراهم می‌کند. هدف اصلی آن افزایش سرعت و کارایی برنامه‌های وب است، اما می‌توان آن را در محیط‌های دیگر نیز اجرا کرد.",
    "date": "2023-09-12T16:33:46.294Z",
    "cat": "tuts",
    "intro": false,
    "comments": true,
    "toc": true,
    "path": "/fa/logs/work-with-wasm/intro-wasm",
    "body": "## دوره آموزشی WebAssembly: ساخت برنامه‌های سریع وب با Go و TinyGo\n\n### معرفی WebAssembly (WASM): آینده برنامه‌های وب\n\nوب امروزی پر از برنامه‌های پیچیده است: از بازی‌های آنلاین مثل **Krunker** تا ویرایشگرهای بلادرنگ مثل **Figma**. جاوااسکریپت، با وجود انعطاف‌پذیری‌اش، گاهی تو تأمین عملکرد لازم برای این برنامه‌ها کم میاره. اینجا **WebAssembly (WASM)** وارد می‌شه، یه فناوری انقلابی که عملکرد برنامه‌های وب رو به سطح جدیدی می‌بره.\n\n**WASM** یه استاندارد باز و فرمت باینریه که به توسعه‌دهندگان اجازه می‌ده کدهای نوشته‌شده با زبان‌هایی مثل **C**، **C++**، **Rust** و **Go** رو به‌صورت بهینه تو مرورگرها اجرا کنن. این کدها تو محیطی ایزوله با امنیت بالا اجرا می‌شن و سرعتشون گاهی تا چند برابر جاوااسکریپته. WASM از سال 2017، که به‌صورت رسمی پشتیبانی مرورگرها رو به دست آورد، توسط غول‌هایی مثل **گوگل**، **مایکروسافت**، **موزیلا** و **اپل** حمایت شده و حالا تو پروژه‌های واقعی، از Adobe Premiere Web تا بازی‌های AAA، نقش کلیدی داره.\n\n### چرا WebAssembly؟\n\n- **سرعت بالا**: کدهای باینری WASM نزدیک به عملکرد زبان‌های بومی اجرا می‌شن.\n- **امنیت قوی**: محیط سندباکس از دسترسی غیرمجاز جلوگیری می‌کنه.\n- **چندزبانه بودن**: از C++ تا Go، هر زبانی رو به وب بیارید.\n- **حجم کم**: فایل‌های WASM فشرده‌تر از جاوااسکریپت مشابهن.\n- **پشتیبانی گسترده**: همه مرورگرهای مدرن (کروم، فایرفاکس، سافاری) WASM رو اجرا می‌کنن.\n\nمثال عملی: یه ویرایشگر عکس آنلاین رو تصور کن. با WASM، می‌تونی پردازش تصویر رو با سرعت C++ تو مرورگر انجام بدی، بدون اینکه کاربر چیزی نصب کنه.\n\n### پیش‌نیازها\n\nبرای شروع این دوره، به این موارد نیاز دارید:\n\n- آشنایی اولیه با **جاوااسکریپت** و **HTML**.\n- نصب **Go** (نسخه 1.21 یا بالاتر) و **TinyGo** (ابزار سبک برای WASM).\n- یه ویرایشگر کد مثل **VS Code**.\n- مرورگر مدرن (کروم یا فایرفاکس پیشنهاد می‌شه).\n\nبیایید اولین پروژه WASM رو بسازیم و قدرت این فناوری رو از نزدیک ببینیم!\n\n## بخش 1: ساخت اولین پروژه WASM با Go و TinyGo\n\n### 1.1 نصب ابزارهای موردنیاز\n\nبرای کار با Go در WASM، از **TinyGo** استفاده می‌کنیم، نسخه‌ای سبک‌تر از Go که برای محیط‌های محدود مثل مرورگرها بهینه شده.\n\n#### نصب TinyGo\n\nاگر از **Homebrew** استفاده می‌کنید (مک/لینوکس):\n\n```bash\nbrew install tinygo\n```\n\nبرای ویندوز یا روش‌های دیگه، به [tinygo.org](https://tinygo.org/getting-started/install/) سر بزنید.\n\n#### بررسی نصب\n\nاین دستورات رو اجرا کنید تا مطمئن بشید همه‌چیز آماده است:\n\n```bash\ngo version\ntinygo version\n```\n\nخروجی باید چیزی شبیه این باشه:\n\n```\ngo version go1.21.5\ntinygo version 0.31.0\n```\n\n### 1.2 نوشتن اولین برنامه Go برای WASM\n\nیه پوشه پروژه بسازید و فایل `main.go` رو با این کد پر کنید:\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"سلام از WebAssembly و Go!\")\n}\n```\n\nاین کد ساده یه پیام رو تو کنسول مرورگر چاپ می‌کنه.\n\n### 1.3 کامپایل به فرمت WASM\n\nبرای تبدیل کد Go به WASM، این دستور رو اجرا کنید:\n\n```bash\ntinygo build -o main.wasm -target wasm -no-debug -opt=2 main.go\n```\n\n- `-target wasm`: خروجی رو برای مرورگرها تنظیم می‌کنه.\n- `-no-debug`: اندازه فایل رو کوچیک‌تر می‌کنه.\n- `-opt=2`: بهینه‌سازی حداکثری اعمال می‌شه.\n\nفایل `main.wasm` تولید می‌شه که کد باینری شماست.\n\n### 1.4 آماده‌سازی فایل‌های جاوااسکریپت و HTML\n\nبرای اجرای WASM تو مرورگر، به یه فایل جاوااسکریپت کمکی به اسم `wasm_exec.js` نیاز دارید. این فایل رو از [مخزن Go](https://github.com/golang/go/blob/master/misc/wasm/wasm_exec.js) دانلود کنید و کنار پروژه بذارید.\n\nحالا فایل `index.html` رو با این کد بسازید:\n\n```html\n<!DOCTYPE html>\n<html lang=\"fa\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>اولین پروژه WebAssembly</title>\n    <script src=\"wasm_exec.js\"></script>\n  </head>\n  <body>\n    <h1>سلام از WebAssembly و Go!</h1>\n    <script>\n      const go = new Go();\n      WebAssembly.instantiateStreaming(fetch(\"main.wasm\"), go.importObject)\n        .then((result) => {\n          go.run(result.instance);\n        })\n        .catch((err) => console.error(\"خطا:\", err));\n    </script>\n  </body>\n</html>\n```\n\n### 1.5 اجرای پروژه\n\nیه سرور محلی راه بندازید (چون مرورگرها فایل‌های WASM رو مستقیم از سیستم نمی‌خونن):\n\n```bash\npython -m http.server 8080\n```\n\nحالا به `http://localhost:8080` برید. تو کنسول مرورگر (F12 > Console)، باید پیام **\"سلام از WebAssembly و Go!\"** رو ببینید.\n\n## بخش 2: تعامل جاوااسکریپت و WebAssembly\n\nحالا بیایید WASM و جاوااسکریپت رو به هم وصل کنیم تا یه ماشین‌حساب ساده بسازیم که جمع دو عدد رو انجام بده.\n\n### 2.1 تعریف تابع در Go\n\nفایل `main.go` رو با این کد جایگزین کنید:\n\n```go\npackage main\n\nimport \"syscall/js\"\n\n//export add\nfunc add(a, b int) int {\n    return a + b\n}\n\nfunc main() {\n    js.Global().Set(\"add\", js.FuncOf(func(this js.Value, args []js.Value) interface{} {\n        return add(args[0].Int(), args[1].Int())\n    }))\n    select {} // برنامه رو در حال اجرا نگه می‌داریم\n}\n```\n\n- `//export add`: تابع `add` رو برای جاوااسکریپت قابل دسترسی می‌کنه.\n- `select {}`: از خروج برنامه جلوگیری می‌کنه.\n\n### 2.2 کامپایل دوباره\n\n```bash\ntinygo build -o main.wasm -target wasm -no-debug main.go\n```\n\n### 2.3 به‌روزرسانی HTML\n\nفایل `index.html` رو به این شکل تغییر بدید:\n\n```html\n<!DOCTYPE html>\n<html lang=\"fa\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>ماشین‌حساب با WebAssembly</title>\n    <script src=\"wasm_exec.js\"></script>\n  </head>\n  <body>\n    <h1>ماشین‌حساب ساده با Go و WASM</h1>\n    <input type=\"number\" id=\"a\" placeholder=\"عدد اول\" />\n    <input type=\"number\" id=\"b\" placeholder=\"عدد دوم\" />\n    <button id=\"calc\">محاسبه</button>\n    <p>نتیجه: <span id=\"result\">0</span></p>\n    <script>\n      const go = new Go();\n      WebAssembly.instantiateStreaming(fetch(\"main.wasm\"), go.importObject)\n        .then((result) => {\n          go.run(result.instance);\n          document.getElementById(\"calc\").addEventListener(\"click\", () => {\n            const a = parseInt(document.getElementById(\"a\").value);\n            const b = parseInt(document.getElementById(\"b\").value);\n            const res = window.add(a, b);\n            document.getElementById(\"result\").textContent = res;\n          });\n        })\n        .catch((err) => console.error(\"خطا:\", err));\n    </script>\n  </body>\n</html>\n```\n\n### 2.4 تست پروژه\n\nسرور رو دوباره اجرا کنید (`python -m http.server 8080`) و به `localhost:8080` برید. دو عدد وارد کنید، روی **محاسبه** کلیک کنید و نتیجه جمع رو ببینید. این تعامل نشون می‌ده چطور WASM و جاوااسکریپت می‌تونن باهم کار کنن.\n\n## بخش 3: تغییر DOM با WebAssembly\n\nحالا بیایید مستقیماً از Go به DOM مرورگر دسترسی پیدا کنیم و یه پیام پویا اضافه کنیم.\n\n### 3.1 کد Go برای تغییر DOM\n\nفایل `main.go` رو با این کد به‌روزرسانی کنید:\n\n```go\npackage main\n\nimport \"syscall/js\"\n\nfunc main() {\n    document := js.Global().Get(\"document\")\n    div := document.Call(\"createElement\", \"div\")\n    div.Set(\"innerHTML\", \"این پیام از Go و WebAssembly اومده!\")\n    div.Set(\"style\", \"color: blue; font-size: 18px; margin-top: 10px;\")\n    document.Get(\"body\").Call(\"appendChild\", div)\n\n    select {} // برنامه رو فعال نگه می‌داریم\n}\n```\n\n- `syscall/js`: به Go اجازه می‌ده با DOM و جاوااسکریپت تعامل کنه.\n- کد بالا یه `div` جدید می‌سازه و پیامی رو تو صفحه نمایش می‌ده.\n\n### 3.2 کامپایل و اجرا\n\n```bash\ntinygo build -o main.wasm -target wasm -no-debug main.go\n```\n\nفایل `index.html` رو به حالت ساده برگردونید:\n\n```html\n<!DOCTYPE html>\n<html lang=\"fa\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>تغییر DOM با WebAssembly</title>\n    <script src=\"wasm_exec.js\"></script>\n  </head>\n  <body>\n    <h1>تغییر DOM با Go و WASM</h1>\n    <script>\n      const go = new Go();\n      WebAssembly.instantiateStreaming(fetch(\"main.wasm\"), go.importObject)\n        .then((result) => {\n          go.run(result.instance);\n        })\n        .catch((err) => console.error(\"خطا:\", err));\n    </script>\n  </body>\n</html>\n```\n\n### 3.3 تست پروژه\n\nسرور رو اجرا کنید و به `localhost:8080` برید. باید یه پیام آبی‌رنگ با متن **\"این پیام از Go و WebAssembly اومده!\"** زیر عنوان ببینید. این نشون می‌ده WASM می‌تونه مستقیماً DOM رو دستکاری کنه.\n\n## نتیجه‌گیری: قدم اول به سوی WASM\n\nتو این ماژول، با **WebAssembly** آشنا شدید و یاد گرفتید چطور با **Go** و **TinyGo** برنامه‌های وب سریع و امن بسازید. از چاپ یه پیام ساده تو کنسول تا ساخت یه ماشین‌حساب تعاملی و تغییر DOM، قدم‌های اولیه رو برداشتید. WASM دنیایی از امکاناته: از اجرای بازی‌های سنگین تو مرورگر تا اپلیکیشن‌های ابری پیچیده. تو ماژول‌های بعدی، سراغ موضوعات پیشرفته‌تر می‌ریم، مثل بهینه‌سازی عملکرد، کار با کتابخونه‌های C++ و ادغام با فریم‌ورک‌های مدرن.\n\n### نکات کلیدی\n\n- WASM سرعت و امنیت رو به برنامه‌های وب میاره.\n- TinyGo ابزار سبک و قدرتمندیه برای پروژه‌های WASM.\n- تعامل جاوااسکریپت و WASM امکانات بی‌نهایتی فراهم می‌کنه.\n- تغییر DOM با Go نشون‌دهنده انعطاف‌پذیری WASMه.\n\n## منابع برای ادامه یادگیری\n\n- **وب‌سایت رسمی WebAssembly**: [webassembly.org](https://webassembly.org) برای مفاهیم پایه.\n- **مستندات TinyGo**: [tinygo.org/docs](https://tinygo.org/docs) برای راهنمای کامل.\n- **مخزن GitHub TinyGo**: [github.com/tinygo-org](https://github.com/tinygo-org) برای مثال‌های بیشتر.\n- **MDN WebAssembly**: [developer.mozilla.org/en-US/docs/WebAssembly](https://developer.mozilla.org/en-US/docs/WebAssembly) برای نکات جاوااسکریپت.\n- **انجمن WebAssembly**: [reddit.com/r/WebAssembly](https://reddit.com/r/WebAssembly) برای بحث و پشتیبانی.\n\nبیایید تو ماژول بعدی، WASM رو به پروژه‌های بزرگ‌تر ببریم و وب رو سریع‌تر کنیم!",
    "tocData": [
      {
        "title": "دوره آموزشی WebAssembly: ساخت برنامه‌های سریع وب با Go و TinyGo",
        "url": "#دوره-آموزشی-webassembly-ساخت-برنامههای-سریع-وب-با-go-و-tinygo",
        "items": [
          {
            "title": "معرفی WebAssembly (WASM): آینده برنامه‌های وب",
            "url": "#معرفی-webassembly-wasm-آینده-برنامههای-وب",
            "items": []
          },
          {
            "title": "چرا WebAssembly؟",
            "url": "#چرا-webassembly",
            "items": []
          },
          {
            "title": "پیش‌نیازها",
            "url": "#پیشنیازها",
            "items": []
          }
        ]
      },
      {
        "title": "بخش 1: ساخت اولین پروژه WASM با Go و TinyGo",
        "url": "#بخش-1-ساخت-اولین-پروژه-wasm-با-go-و-tinygo",
        "items": [
          {
            "title": "1.1 نصب ابزارهای موردنیاز",
            "url": "#11-نصب-ابزارهای-موردنیاز",
            "items": [
              {
                "title": "نصب TinyGo",
                "url": "#نصب-tinygo",
                "items": []
              },
              {
                "title": "بررسی نصب",
                "url": "#بررسی-نصب",
                "items": []
              }
            ]
          },
          {
            "title": "1.2 نوشتن اولین برنامه Go برای WASM",
            "url": "#12-نوشتن-اولین-برنامه-go-برای-wasm",
            "items": []
          },
          {
            "title": "1.3 کامپایل به فرمت WASM",
            "url": "#13-کامپایل-به-فرمت-wasm",
            "items": []
          },
          {
            "title": "1.4 آماده‌سازی فایل‌های جاوااسکریپت و HTML",
            "url": "#14-آمادهسازی-فایلهای-جاوااسکریپت-و-html",
            "items": []
          },
          {
            "title": "1.5 اجرای پروژه",
            "url": "#15-اجرای-پروژه",
            "items": []
          }
        ]
      },
      {
        "title": "بخش 2: تعامل جاوااسکریپت و WebAssembly",
        "url": "#بخش-2-تعامل-جاوااسکریپت-و-webassembly",
        "items": [
          {
            "title": "2.1 تعریف تابع در Go",
            "url": "#21-تعریف-تابع-در-go",
            "items": []
          },
          {
            "title": "2.2 کامپایل دوباره",
            "url": "#22-کامپایل-دوباره",
            "items": []
          },
          {
            "title": "2.3 به‌روزرسانی HTML",
            "url": "#23-بهروزرسانی-html",
            "items": []
          },
          {
            "title": "2.4 تست پروژه",
            "url": "#24-تست-پروژه",
            "items": []
          }
        ]
      },
      {
        "title": "بخش 3: تغییر DOM با WebAssembly",
        "url": "#بخش-3-تغییر-dom-با-webassembly",
        "items": [
          {
            "title": "3.1 کد Go برای تغییر DOM",
            "url": "#31-کد-go-برای-تغییر-dom",
            "items": []
          },
          {
            "title": "3.2 کامپایل و اجرا",
            "url": "#32-کامپایل-و-اجرا",
            "items": []
          },
          {
            "title": "3.3 تست پروژه",
            "url": "#33-تست-پروژه",
            "items": []
          }
        ]
      },
      {
        "title": "نتیجه‌گیری: قدم اول به سوی WASM",
        "url": "#نتیجهگیری-قدم-اول-به-سوی-wasm",
        "items": [
          {
            "title": "نکات کلیدی",
            "url": "#نکات-کلیدی",
            "items": []
          }
        ]
      },
      {
        "title": "منابع برای ادامه یادگیری",
        "url": "#منابع-برای-ادامه-یادگیری",
        "items": []
      }
    ],
    "type": "page"
  }
]